/******************************************************************************
**
** <auto-generated>
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.7.0, using .NET Server 4.1.0 template (version 0)
**
**     Changes to this file may cause incorrect behavior and will be lost if
**     the code is regenerated.
** </auto-generated>
**
** Copyright (c) 2006-2024 Unified Automation GmbH All rights reserved.
**
** Software License Agreement ("SLA") Version 2.8
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.8, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** Project: .NET OPC UA SDK information model for namespace http://www.unifiedautomation.com/DemoServer/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.8/
**
** Created: 16.08.2024
**
******************************************************************************/

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.Xml;
using System.Runtime.Serialization;
using UnifiedAutomation.UaBase;

namespace UnifiedAutomation.Demo.Model
{
    #region DataType Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class DataTypes
    {
        /// <summary>
        /// The identifier for the HeaterStatus DataType.
        /// </summary>
        public const uint HeaterStatus = 3001;

        /// <summary>
        /// The identifier for the Priority DataType.
        /// </summary>
        public const uint Priority = 3005;

        /// <summary>
        /// The identifier for the OptionSetByte DataType.
        /// </summary>
        public const uint OptionSetByte = 3010;

        /// <summary>
        /// The identifier for the OptionSetUInt16 DataType.
        /// </summary>
        public const uint OptionSetUInt16 = 3011;

        /// <summary>
        /// The identifier for the OptionSetUInt32 DataType.
        /// </summary>
        public const uint OptionSetUInt32 = 3012;

        /// <summary>
        /// The identifier for the OptionSetUInt64 DataType.
        /// </summary>
        public const uint OptionSetUInt64 = 3013;

        /// <summary>
        /// The identifier for the AbstractBaseType DataType.
        /// </summary>
        public const uint AbstractBaseType = 3014;

        /// <summary>
        /// The identifier for the ConcreteSubType DataType.
        /// </summary>
        public const uint ConcreteSubType = 3015;

        /// <summary>
        /// The identifier for the ExtendedSubType DataType.
        /// </summary>
        public const uint ExtendedSubType = 3016;

        /// <summary>
        /// The identifier for the AccessRights DataType.
        /// </summary>
        public const uint AccessRights = 3008;

        /// <summary>
        /// The identifier for the OptionSetBase DataType.
        /// </summary>
        public const uint OptionSetBase = 3017;

        /// <summary>
        /// The identifier for the StructureWithAbstractBaseTypes DataType.
        /// </summary>
        public const uint StructureWithAbstractBaseTypes = 3018;

        /// <summary>
        /// The identifier for the StructureWithAllowSubtypes DataType.
        /// </summary>
        public const uint StructureWithAllowSubtypes = 3021;

        /// <summary>
        /// The identifier for the StructureWithDerivedStructures DataType.
        /// </summary>
        public const uint StructureWithDerivedStructures = 3019;

        /// <summary>
        /// The identifier for the StructureWithDifferentDataTypes DataType.
        /// </summary>
        public const uint StructureWithDifferentDataTypes = 3020;

        /// <summary>
        /// The identifier for the StructureWithOptionalFields DataType.
        /// </summary>
        public const uint StructureWithOptionalFields = 3007;

        /// <summary>
        /// The identifier for the UnionTest DataType.
        /// </summary>
        public const uint UnionTest = 3006;

        /// <summary>
        /// The identifier for the Vector DataType.
        /// </summary>
        public const uint Vector = 3002;

        /// <summary>
        /// The identifier for the WorkOrderStatusType DataType.
        /// </summary>
        public const uint WorkOrderStatusType = 3004;

        /// <summary>
        /// The identifier for the WorkOrderType DataType.
        /// </summary>
        public const uint WorkOrderType = 3003;

    }
    #endregion

    #region Object Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class Objects
    {
        /// <summary>
        /// The identifier for the FillLevelSensor Object.
        /// </summary>
        public const uint BoilerType_FillLevelSensor = 5002;

        /// <summary>
        /// The identifier for the TemperatureSensor Object.
        /// </summary>
        public const uint BoilerType_TemperatureSensor = 5001;

        /// <summary>
        /// The identifier for the TemperatureSensor Object.
        /// </summary>
        public const uint MachineType_TemperatureSensor = 5065;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint ConcreteSubType_Encoding_DefaultBinary = 5021;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint ConcreteSubType_Encoding_DefaultXml = 5022;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint ExtendedSubType_Encoding_DefaultBinary = 5023;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint ExtendedSubType_Encoding_DefaultXml = 5024;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint AbstractBaseType_Encoding_DefaultBinary = 5010;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint AbstractBaseType_Encoding_DefaultXml = 5015;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint AccessRights_Encoding_DefaultBinary = 5007;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint AccessRights_Encoding_DefaultXml = 5008;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint OptionSetBase_Encoding_DefaultBinary = 5025;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint OptionSetBase_Encoding_DefaultXml = 5026;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint StructureWithAbstractBaseTypes_Encoding_DefaultBinary = 5027;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint StructureWithAbstractBaseTypes_Encoding_DefaultXml = 5028;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint StructureWithAllowSubtypes_Encoding_DefaultBinary = 5033;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint StructureWithAllowSubtypes_Encoding_DefaultXml = 5034;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint StructureWithDerivedStructures_Encoding_DefaultBinary = 5029;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint StructureWithDerivedStructures_Encoding_DefaultXml = 5030;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint StructureWithDifferentDataTypes_Encoding_DefaultBinary = 5031;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint StructureWithDifferentDataTypes_Encoding_DefaultXml = 5032;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint StructureWithOptionalFields_Encoding_DefaultBinary = 5005;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint StructureWithOptionalFields_Encoding_DefaultXml = 5006;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint UnionTest_Encoding_DefaultBinary = 5003;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint UnionTest_Encoding_DefaultXml = 5004;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint Vector_Encoding_DefaultBinary = 5054;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint Vector_Encoding_DefaultXml = 5055;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint WorkOrderStatusType_Encoding_DefaultBinary = 5011;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint WorkOrderStatusType_Encoding_DefaultXml = 5012;

        /// <summary>
        /// The identifier for the Default Binary Object.
        /// </summary>
        public const uint WorkOrderType_Encoding_DefaultBinary = 5013;

        /// <summary>
        /// The identifier for the Default XML Object.
        /// </summary>
        public const uint WorkOrderType_Encoding_DefaultXml = 5014;

        /// <summary>
        /// The identifier for the Demo Object.
        /// </summary>
        public const String Demo = "Demo";

        /// <summary>
        /// The identifier for the Static Object.
        /// </summary>
        public const String Demo_Static = "Demo.Static";

        /// <summary>
        /// The identifier for the Arrays Object.
        /// </summary>
        public const String Demo_Static_Arrays = "Demo.Static.Arrays";

        /// <summary>
        /// The identifier for the Matrix Object.
        /// </summary>
        public const String Demo_Static_Matrix = "Demo.Static.Matrix";

        /// <summary>
        /// The identifier for the Scalar Object.
        /// </summary>
        public const String Demo_Static_Scalar = "Demo.Static.Scalar";

        /// <summary>
        /// The identifier for the OptionSets Object.
        /// </summary>
        public const String Demo_Static_Scalar_OptionSets = "Demo.Static.Scalar.OptionSets";

        /// <summary>
        /// The identifier for the Structures Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures = "Demo.Static.Scalar.Structures";

        /// <summary>
        /// The identifier for the Dynamic Object.
        /// </summary>
        public const String Demo_Dynamic = "Demo.Dynamic";

        /// <summary>
        /// The identifier for the Arrays Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays = "Demo.Dynamic.Arrays";

        /// <summary>
        /// The identifier for the Scalar Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar = "Demo.Dynamic.Scalar";

        /// <summary>
        /// The identifier for the History Object.
        /// </summary>
        public const String Demo_History = "Demo.History";

        /// <summary>
        /// The identifier for the Method Object.
        /// </summary>
        public const String Demo_Method = "Demo.Method";

        /// <summary>
        /// The identifier for the Events Object.
        /// </summary>
        public const String Demo_Events = "Demo.Events";

        /// <summary>
        /// The identifier for the Machine Object.
        /// </summary>
        public const String Demo_Events_Machine = "Demo.Events.Machine";

        /// <summary>
        /// The identifier for the TemperatureSensor Object.
        /// </summary>
        public const String Demo_Events_Machine_TemperatureSensor = "Demo.Events.Machine.TemperatureSensor";

        /// <summary>
        /// The identifier for the SampleEventNotifier Object.
        /// </summary>
        public const String Demo_Events_SampleEventNotifier = "Demo.Events.SampleEventNotifier";

        /// <summary>
        /// The identifier for the AccessRights Object.
        /// </summary>
        public const String Demo_AccessRights = "Demo.AccessRights";

        /// <summary>
        /// The identifier for the Access_All Object.
        /// </summary>
        public const String Demo_AccessRights_Access_All = "Demo.AccessRights.Access_All";

        /// <summary>
        /// The identifier for the Access_John Object.
        /// </summary>
        public const String Demo_AccessRights_Access_John = "Demo.AccessRights.Access_John";

        /// <summary>
        /// The identifier for the Access_Operators Object.
        /// </summary>
        public const String Demo_AccessRights_Access_Operators = "Demo.AccessRights.Access_Operators";

        /// <summary>
        /// The identifier for the Browse_All Object.
        /// </summary>
        public const String Demo_AccessRights_Browse_All = "Demo.AccessRights.Browse_All";

        /// <summary>
        /// The identifier for the Browse_John Object.
        /// </summary>
        public const String Demo_AccessRights_Browse_John = "Demo.AccessRights.Browse_John";

        /// <summary>
        /// The identifier for the Browse_Operators Object.
        /// </summary>
        public const String Demo_AccessRights_Browse_Operators = "Demo.AccessRights.Browse_Operators";

        /// <summary>
        /// The identifier for the Massfolder_Static Object.
        /// </summary>
        public const String Demo_Massfolder_Static = "Demo.Massfolder_Static";

        /// <summary>
        /// The identifier for the Massfolder_Dynamic Object.
        /// </summary>
        public const String Demo_Massfolder_Dynamic = "Demo.Massfolder_Dynamic";

        /// <summary>
        /// The identifier for the DynamicNodes Object.
        /// </summary>
        public const String Demo_DynamicNodes = "Demo.DynamicNodes";

        /// <summary>
        /// The identifier for the BoilerDemo Object.
        /// </summary>
        public const String Demo_BoilerDemo = "Demo.BoilerDemo";

        /// <summary>
        /// The identifier for the Boiler1 Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1 = "Demo.BoilerDemo.Boiler1";

        /// <summary>
        /// The identifier for the FillLevelSensor Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_FillLevelSensor = "Demo.BoilerDemo.Boiler1.FillLevelSensor";

        /// <summary>
        /// The identifier for the TemperatureSensor Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_TemperatureSensor = "Demo.BoilerDemo.Boiler1.TemperatureSensor";

        /// <summary>
        /// The identifier for the CTT Object.
        /// </summary>
        public const String Demo_CTT = "Demo.CTT";

        /// <summary>
        /// The identifier for the Events Object.
        /// </summary>
        public const String Demo_CTT_Events = "Demo.CTT.Events";

        /// <summary>
        /// The identifier for the Methods Object.
        /// </summary>
        public const String Demo_CTT_Methods = "Demo.CTT.Methods";

        /// <summary>
        /// The identifier for the NodeClasses Object.
        /// </summary>
        public const String Demo_CTT_NodeClasses = "Demo.CTT.NodeClasses";

        /// <summary>
        /// The identifier for the Object Object.
        /// </summary>
        public const String Demo_CTT_NodeClasses_Object = "Demo.CTT.NodeClasses.Object";

        /// <summary>
        /// The identifier for the NodeManagement Object.
        /// </summary>
        public const String Demo_CTT_NodeManagement = "Demo.CTT.NodeManagement";

        /// <summary>
        /// The identifier for the Paths Object.
        /// </summary>
        public const String Demo_CTT_Paths = "Demo.CTT.Paths";

        /// <summary>
        /// The identifier for the folder1 Object.
        /// </summary>
        public const String Demo_CTT_Paths_folder1 = "Demo.CTT.Paths.folder1";

        /// <summary>
        /// The identifier for the folder2 Object.
        /// </summary>
        public const String Demo_CTT_Paths_folder1_folder2 = "Demo.CTT.Paths.folder1.folder2";

        /// <summary>
        /// The identifier for the folder3 Object.
        /// </summary>
        public const String Demo_CTT_Paths_folder1_folder2_folder3 = "Demo.CTT.Paths.folder1.folder2.folder3";

        /// <summary>
        /// The identifier for the folder4 Object.
        /// </summary>
        public const String Demo_CTT_Paths_folder1_folder2_folder3_folder4 = "Demo.CTT.Paths.folder1.folder2.folder3.folder4";

        /// <summary>
        /// The identifier for the folder5 Object.
        /// </summary>
        public const String Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5 = "Demo.CTT.Paths.folder1.folder2.folder3.folder4.folder5";

        /// <summary>
        /// The identifier for the folder6 Object.
        /// </summary>
        public const String Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6 = "Demo.CTT.Paths.folder1.folder2.folder3.folder4.folder5.folder6";

        /// <summary>
        /// The identifier for the folder7 Object.
        /// </summary>
        public const String Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7 = "Demo.CTT.Paths.folder1.folder2.folder3.folder4.folder5.folder6.folder7";

        /// <summary>
        /// The identifier for the folder8 Object.
        /// </summary>
        public const String Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8 = "Demo.CTT.Paths.folder1.folder2.folder3.folder4.folder5.folder6.folder7.folder8";

        /// <summary>
        /// The identifier for the folder9 Object.
        /// </summary>
        public const String Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8_folder9 = "Demo.CTT.Paths.folder1.folder2.folder3.folder4.folder5.folder6.folder7.folder8.folder9";

        /// <summary>
        /// The identifier for the folder10 Object.
        /// </summary>
        public const String Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8_folder9_folder10 = "Demo.CTT.Paths.folder1.folder2.folder3.folder4.folder5.folder6.folder7.folder8.folder9.folder10";

        /// <summary>
        /// The identifier for the References Object.
        /// </summary>
        public const String Demo_CTT_References = "Demo.CTT.References";

        /// <summary>
        /// The identifier for the Has3ForwardReferences1 Object.
        /// </summary>
        public const String Demo_CTT_References_Has3ForwardReferences1 = "Demo.CTT.References.Has3ForwardReferences1";

        /// <summary>
        /// The identifier for the Has3ForwardReferences2 Object.
        /// </summary>
        public const String Demo_CTT_References_Has3ForwardReferences2 = "Demo.CTT.References.Has3ForwardReferences2";

        /// <summary>
        /// The identifier for the Object Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences2_Object = 5061;

        /// <summary>
        /// The identifier for the Has3ForwardReferences3 Object.
        /// </summary>
        public const String Demo_CTT_References_Has3ForwardReferences3 = "Demo.CTT.References.Has3ForwardReferences3";

        /// <summary>
        /// The identifier for the ReferencedNode1 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences3_ReferencedNode1 = 5056;

        /// <summary>
        /// The identifier for the Has3InverseReferences Object.
        /// </summary>
        public const String Demo_CTT_References_Has3ForwardReferences3_ReferencedNode1_Has3InverseReferences = "Demo.CTT.References.Has3InverseReferences";

        /// <summary>
        /// The identifier for the ReferencedNode2 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences3_ReferencedNode2 = 5057;

        /// <summary>
        /// The identifier for the ReferencedNode3 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences3_ReferencedNode3 = 5058;

        /// <summary>
        /// The identifier for the Has3ForwardReferences4 Object.
        /// </summary>
        public const String Demo_CTT_References_Has3ForwardReferences4 = "Demo.CTT.References.Has3ForwardReferences4";

        /// <summary>
        /// The identifier for the Has3ForwardReferences5 Object.
        /// </summary>
        public const String Demo_CTT_References_Has3ForwardReferences5 = "Demo.CTT.References.Has3ForwardReferences5";

        /// <summary>
        /// The identifier for the ReferencedNode1 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences5_ReferencedNode1 = 5059;

        /// <summary>
        /// The identifier for the HasInverseAndForwardReferences Object.
        /// </summary>
        public const String Demo_CTT_References_HasInverseAndForwardReferences = "Demo.CTT.References.HasInverseAndForwardReferences";

        /// <summary>
        /// The identifier for the HasReferencesOfAReferenceTypeAndSubType Object.
        /// </summary>
        public const String Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType = "Demo.CTT.References.HasReferencesOfAReferenceTypeAndSubType";

        /// <summary>
        /// The identifier for the SecurityAccess Object.
        /// </summary>
        public const String Demo_CTT_SecurityAccess = "Demo.CTT.SecurityAccess";

        /// <summary>
        /// The identifier for the Static Object.
        /// </summary>
        public const String Demo_CTT_Static = "Demo.CTT.Static";

        /// <summary>
        /// The identifier for the All_Profiles Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles = "Demo.CTT.Static.AllProfiles";

        /// <summary>
        /// The identifier for the Arrays Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays = "Demo.CTT.AllProfiles.Arrays";

        /// <summary>
        /// The identifier for the MultiDimensionalArrays Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays";

        /// <summary>
        /// The identifier for the Scalar Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar = "Demo.CTT.AllProfiles.Scalar";

        /// <summary>
        /// The identifier for the DA_Profile Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile = "Demo.CTT.Static.DAProfile";

        /// <summary>
        /// The identifier for the AnalogType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType = "Demo.CTT.DAProfile.AnalogType";

        /// <summary>
        /// The identifier for the AnalogType_Arrays Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Arrays = "Demo.CTT.DAProfile.AnalogTypeArrays";

        /// <summary>
        /// The identifier for the ArrayItemType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType = "Demo.CTT.Static.DAProfile.ArrayItemType";

        /// <summary>
        /// The identifier for the DataItem Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem = "Demo.CTT.DAProfile.DataItem";

        /// <summary>
        /// The identifier for the DiscreteType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType = "Demo.CTT.DAProfile.DiscreteType";

        /// <summary>
        /// The identifier for the MultiStateValueDiscreteType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType = "Demo.CTT.DAProfile.MultiStateValueDiscreteType";

        /// <summary>
        /// The identifier for the HA_Profile Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile = "Demo.CTT.Static.HAProfile";

        /// <summary>
        /// The identifier for the AccessRights Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_AccessRights = "Demo.CTT.Static.HAProfile.AccessRights";

        /// <summary>
        /// The identifier for the Aggregates Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates = "Demo.CTT.Static.HAProfile.Aggregates";

        /// <summary>
        /// The identifier for the Arrays Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays = "Demo.CTT.Static.HAProfile.Arrays";

        /// <summary>
        /// The identifier for the Scalar Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar = "Demo.CTT.Static.HAProfile.Scalar";

        /// <summary>
        /// The identifier for the UnicodeTest Object.
        /// </summary>
        public const String Demo_UnicodeTest = "Demo.UnicodeTest";

        /// <summary>
        /// The identifier for the Die_hei\303\237e_Zypernsonne_qu\303\244lte_Max_und_Victoria_ja_b\303\266se_auf_dem_Weg_bis_zur_K\303\274ste Object.
        /// </summary>
        public const uint Demo_UnicodeTest_Die_heisse_Zypernsonne_quaelte_Max_und_Victoria_ja_boese_auf_dem_Weg_bis_zur_Kueste = 5017;

        /// <summary>
        /// The identifier for the Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern Object.
        /// </summary>
        public const uint Demo_UnicodeTest_Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern = 5018;

        /// <summary>
        /// The identifier for the The_quick_brown_fox_jumps_over_the_lazy_dog Object.
        /// </summary>
        public const uint Demo_UnicodeTest_The_quick_brown_fox_jumps_over_the_lazy_dog = 5019;

        /// <summary>
        /// The identifier for the Voyez_le_brick_g\303\251ant_que_j\342\200\231examine_pr\303\250s_du_wharf Object.
        /// </summary>
        public const uint Demo_UnicodeTest_Voyez_le_brick_g_ant_que_j_examine_pr_s_du_wharf = 5020;

        /// <summary>
        /// The identifier for the \320\241\321\212\320\265\321\210\321\214_\320\265\321\211\321\221_\321\215\321\202\320\270\321\205_\320\274\321\217\320\263\320\272\320\270\321\205_\321\204\321\200\320\260\320\275\321\206\321\203\320\267\321\201\320\272\320\270\321\205_\320\261\321\203\320\273\320\276\320\272,_\320\264\320\260_\320\262\321\213\320\277\320\265\320\271_\321\207\320\260\321\216 Object.
        /// </summary>
        public const uint Demo_UnicodeTest_Node5016 = 5016;

        /// <summary>
        /// The identifier for the Icon Object.
        /// </summary>
        public const String Demo_Icon = "Demo.Icon";

        /// <summary>
        /// The identifier for the Images Object.
        /// </summary>
        public const String Demo_Images = "Demo.Images";

        /// <summary>
        /// The identifier for the Dynamic Object.
        /// </summary>
        public const String Demo_Images_Dynamic = "Demo.Images.Dynamic";

        /// <summary>
        /// The identifier for the Static Object.
        /// </summary>
        public const String Demo_Images_Static = "Demo.Images.Static";

        /// <summary>
        /// The identifier for the Files Object.
        /// </summary>
        public const String Demo_Files = "Demo.Files";

        /// <summary>
        /// The identifier for the WorkOrder Object.
        /// </summary>
        public const String Demo_WorkOrder = "Demo.WorkOrder";

        /// <summary>
        /// The identifier for the StateMachines Object.
        /// </summary>
        public const String Demo_StateMachines = "Demo.StateMachines";

        /// <summary>
        /// The identifier for the Program Object.
        /// </summary>
        public const String Demo_StateMachines_Program = "Demo.StateMachines.Program";

        /// <summary>
        /// The identifier for the SpecialVariables Object.
        /// </summary>
        public const String Demo_SpecialVariables = "Demo.SpecialVariables";

        /// <summary>
        /// The identifier for the http___www_unifiedautomation_com_DemoServer_ Object.
        /// </summary>
        public const uint Namespaces_http___www_unifiedautomation_com_DemoServer_ = 5009;

    }
    #endregion

    #region ObjectType Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class ObjectTypes
    {
        /// <summary>
        /// The identifier for the SampleEventType ObjectType.
        /// </summary>
        public const uint SampleEventType = 1005;

        /// <summary>
        /// The identifier for the BoilerType ObjectType.
        /// </summary>
        public const uint BoilerType = 1003;

        /// <summary>
        /// The identifier for the FillLevelSensorType ObjectType.
        /// </summary>
        public const uint FillLevelSensorType = 1002;

        /// <summary>
        /// The identifier for the MachineType ObjectType.
        /// </summary>
        public const uint MachineType = 1004;

        /// <summary>
        /// The identifier for the CountdownStateMachineType ObjectType.
        /// </summary>
        public const uint CountdownStateMachineType = 1007;

        /// <summary>
        /// The identifier for the TemperatureSensorType ObjectType.
        /// </summary>
        public const uint TemperatureSensorType = 1001;

    }
    #endregion

    #region Method Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class Methods
    {
        /// <summary>
        /// The identifier for the Fill Method.
        /// </summary>
        public const uint BoilerType_Fill = 7002;

        /// <summary>
        /// The identifier for the Heat Method.
        /// </summary>
        public const uint BoilerType_Heat = 7001;

        /// <summary>
        /// The identifier for the Halt Method.
        /// </summary>
        public const uint CountdownStateMachineType_Halt = 7003;

        /// <summary>
        /// The identifier for the Reset Method.
        /// </summary>
        public const uint CountdownStateMachineType_Reset = 7004;

        /// <summary>
        /// The identifier for the Resume Method.
        /// </summary>
        public const uint CountdownStateMachineType_Resume = 7005;

        /// <summary>
        /// The identifier for the Start Method.
        /// </summary>
        public const uint CountdownStateMachineType_Start = 7006;

        /// <summary>
        /// The identifier for the Suspend Method.
        /// </summary>
        public const uint CountdownStateMachineType_Suspend = 7007;

        /// <summary>
        /// The identifier for the StartLogging Method.
        /// </summary>
        public const String Demo_History_StartLogging = "Demo.History.StartLogging";

        /// <summary>
        /// The identifier for the StopLogging Method.
        /// </summary>
        public const String Demo_History_StopLogging = "Demo.History.StopLogging";

        /// <summary>
        /// The identifier for the DoSomethingAfter10s Method.
        /// </summary>
        public const String Demo_Method_DoSomethingAfter10s = "Demo.Method.DoSomethingAfter10s";

        /// <summary>
        /// The identifier for the EnumTest Method.
        /// </summary>
        public const String Demo_Method_EnumTest = "Demo.Method.EnumTest";

        /// <summary>
        /// The identifier for the Multiply Method.
        /// </summary>
        public const String Demo_Method_Multiply = "Demo.Method.Multiply";

        /// <summary>
        /// The identifier for the OptionSetBaseTest Method.
        /// </summary>
        public const String Demo_Method_OptionSetBaseTest = "Demo.Method.OptionSetBaseType";

        /// <summary>
        /// The identifier for the OptionSetByteTest Method.
        /// </summary>
        public const String Demo_Method_OptionSetByteTest = "Demo.Method.OptionSetByteTest";

        /// <summary>
        /// The identifier for the OptionSetUInt16Test Method.
        /// </summary>
        public const String Demo_Method_OptionSetUInt16Test = "Demo.Method.OptionSetUInt16Test";

        /// <summary>
        /// The identifier for the OptionSetUInt32Test Method.
        /// </summary>
        public const String Demo_Method_OptionSetUInt32Test = "Demo.Method.OptionSetUInt32Test";

        /// <summary>
        /// The identifier for the OptionSetUInt64Test Method.
        /// </summary>
        public const String Demo_Method_OptionSetUInt64Test = "Demo.Method.OptionSetUInt64Test";

        /// <summary>
        /// The identifier for the StructureWithAbstractBaseTypesTest Method.
        /// </summary>
        public const String Demo_Method_StructureWithAbstractBaseTypesTest = "Demo.Method.StructureWithAbstractBaseTypesTest";

        /// <summary>
        /// The identifier for the StructureWithDerivedStructuresTest Method.
        /// </summary>
        public const String Demo_Method_StructureWithDerivedStructuresTest = "Demo.Method.StructureWithDerivedStructuresTest";

        /// <summary>
        /// The identifier for the StructureWithDifferentDataTypesTest Method.
        /// </summary>
        public const String Demo_Method_StructureWithDifferentDataTypesTest = "Demo.Method.StructureWithDifferentDataTypesTest";

        /// <summary>
        /// The identifier for the VectorAdd Method.
        /// </summary>
        public const String Demo_Method_VectorAdd = "Demo.Method.VectorAdd";

        /// <summary>
        /// The identifier for the TriggerMultipleEvents Method.
        /// </summary>
        public const String Demo_Events_TriggerMultipleEvents = "Demo.Events.TriggerMultipleEvents";

        /// <summary>
        /// The identifier for the CreateDynamicNode Method.
        /// </summary>
        public const String Demo_DynamicNodes_CreateDynamicNode = "Demo.DynamicNodes.CreateDynamicNode";

        /// <summary>
        /// The identifier for the DeleteDynamicNode Method.
        /// </summary>
        public const String Demo_DynamicNodes_DeleteDynamicNode = "Demo.DynamicNodes.DeleteDynamicNode";

        /// <summary>
        /// The identifier for the Fill Method.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_Fill = "Demo.BoilerDemo.Boiler1.Fill";

        /// <summary>
        /// The identifier for the Heat Method.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_Heat = "Demo.BoilerDemo.Boiler1.Heat";

        /// <summary>
        /// The identifier for the MethodI Method.
        /// </summary>
        public const String Demo_CTT_Methods_MethodI = "Demo.CTT.Methods.MethodI";

        /// <summary>
        /// The identifier for the MethodIO Method.
        /// </summary>
        public const String Demo_CTT_Methods_MethodIO = "Demo.CTT.Methods.MethodIO";

        /// <summary>
        /// The identifier for the MethodNoArgs Method.
        /// </summary>
        public const String Demo_CTT_Methods_MethodNoArgs = "Demo.Method.MethodNoArgs";

        /// <summary>
        /// The identifier for the MethodO Method.
        /// </summary>
        public const String Demo_CTT_Methods_MethodO = "Demo.CTT.Methods.MethodO";

        /// <summary>
        /// The identifier for the Method Method.
        /// </summary>
        public const String Demo_CTT_NodeClasses_Method = "Demo.CTT.NodeClasses.Method";

        /// <summary>
        /// The identifier for the Method1 Method.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences2_Method1 = 7010;

        /// <summary>
        /// The identifier for the Method2 Method.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences2_Method2 = 7011;

        /// <summary>
        /// The identifier for the Method3 Method.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences2_Method3 = 7012;

        /// <summary>
        /// The identifier for the ReferencedNode3 Method.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences5_ReferencedNode3 = 7013;

        /// <summary>
        /// The identifier for the SetAnimationSpeed Method.
        /// </summary>
        public const String Demo_Images_Dynamic_SetAnimationSpeed = "Demo.Images.Dynamic.SetAnimationSpeed";

        /// <summary>
        /// The identifier for the Halt Method.
        /// </summary>
        public const String Demo_StateMachines_Program_Halt = "Demo.StateMachines.Program.Halt";

        /// <summary>
        /// The identifier for the Reset Method.
        /// </summary>
        public const String Demo_StateMachines_Program_Reset = "Demo.StateMachines.Program.Reset";

        /// <summary>
        /// The identifier for the Resume Method.
        /// </summary>
        public const String Demo_StateMachines_Program_Resume = "Demo.StateMachines.Program.Resume";

        /// <summary>
        /// The identifier for the Start Method.
        /// </summary>
        public const String Demo_StateMachines_Program_Start = "Demo.StateMachines.Program.Start";

        /// <summary>
        /// The identifier for the Suspend Method.
        /// </summary>
        public const String Demo_StateMachines_Program_Suspend = "Demo.StateMachines.Program.Suspend";

        /// <summary>
        /// The identifier for the SetSimulationSpeed Method.
        /// </summary>
        public const String Demo_SetSimulationSpeed = "Demo.SetSimulationSpeed";

        /// <summary>
        /// The identifier for the StartSimulation Method.
        /// </summary>
        public const String Demo_StartSimulation = "Demo.StartSimulation";

        /// <summary>
        /// The identifier for the StopSimulation Method.
        /// </summary>
        public const String Demo_StopSimulation = "Demo.StopSimulation";

    }
    #endregion

    #region ReferenceType Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTyped in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class ReferenceTypes
    {
        /// <summary>
        /// The identifier for the TriggersEvent ReferenceType.
        /// </summary>
        public const uint TriggersEvent = 4002;

    }
    #endregion

    #region Variable Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class Variables
    {
        /// <summary>
        /// The identifier for the AssetID Variable.
        /// </summary>
        public const uint WorkOrderVariableType_AssetID = 6043;

        /// <summary>
        /// The identifier for the ID Variable.
        /// </summary>
        public const uint WorkOrderVariableType_ID = 6042;

        /// <summary>
        /// The identifier for the StartTime Variable.
        /// </summary>
        public const uint WorkOrderVariableType_StartTime = 6044;

        /// <summary>
        /// The identifier for the StatusComments Variable.
        /// </summary>
        public const uint WorkOrderVariableType_StatusComments = 6045;

        /// <summary>
        /// The identifier for the Boolean Variable.
        /// </summary>
        public const uint SampleEventType_Boolean = 6258;

        /// <summary>
        /// The identifier for the Byte Variable.
        /// </summary>
        public const uint SampleEventType_Byte = 6260;

        /// <summary>
        /// The identifier for the ByteString Variable.
        /// </summary>
        public const uint SampleEventType_ByteString = 6272;

        /// <summary>
        /// The identifier for the DateTime Variable.
        /// </summary>
        public const uint SampleEventType_DateTime = 6270;

        /// <summary>
        /// The identifier for the Double Variable.
        /// </summary>
        public const uint SampleEventType_Double = 6268;

        /// <summary>
        /// The identifier for the Enumeration Variable.
        /// </summary>
        public const uint SampleEventType_Enumeration = 6034;

        /// <summary>
        /// The identifier for the ExpandedNodeId Variable.
        /// </summary>
        public const uint SampleEventType_ExpandedNodeId = 6275;

        /// <summary>
        /// The identifier for the Float Variable.
        /// </summary>
        public const uint SampleEventType_Float = 6267;

        /// <summary>
        /// The identifier for the Guid Variable.
        /// </summary>
        public const uint SampleEventType_Guid = 6271;

        /// <summary>
        /// The identifier for the Int16 Variable.
        /// </summary>
        public const uint SampleEventType_Int16 = 6261;

        /// <summary>
        /// The identifier for the Int32 Variable.
        /// </summary>
        public const uint SampleEventType_Int32 = 6263;

        /// <summary>
        /// The identifier for the Int64 Variable.
        /// </summary>
        public const uint SampleEventType_Int64 = 6265;

        /// <summary>
        /// The identifier for the LocalizedText Variable.
        /// </summary>
        public const uint SampleEventType_LocalizedText = 6278;

        /// <summary>
        /// The identifier for the NodeId Variable.
        /// </summary>
        public const uint SampleEventType_NodeIdNode = 6274;

        /// <summary>
        /// The identifier for the OptionSetBase Variable.
        /// </summary>
        public const uint SampleEventType_OptionSetBase = 6101;

        /// <summary>
        /// The identifier for the OptionSetBaseArray Variable.
        /// </summary>
        public const uint SampleEventType_OptionSetBaseArray = 6111;

        /// <summary>
        /// The identifier for the OptionSetByte Variable.
        /// </summary>
        public const uint SampleEventType_OptionSetByte = 6093;

        /// <summary>
        /// The identifier for the OptionSetUInt16 Variable.
        /// </summary>
        public const uint SampleEventType_OptionSetUInt16 = 6095;

        /// <summary>
        /// The identifier for the OptionSetUInt16Array Variable.
        /// </summary>
        public const uint SampleEventType_OptionSetUInt16Array = 6107;

        /// <summary>
        /// The identifier for the OptionSetUInt32 Variable.
        /// </summary>
        public const uint SampleEventType_OptionSetUInt32 = 6097;

        /// <summary>
        /// The identifier for the OptionSetUInt64 Variable.
        /// </summary>
        public const uint SampleEventType_OptionSetUInt64 = 6099;

        /// <summary>
        /// The identifier for the QualifiedName Variable.
        /// </summary>
        public const uint SampleEventType_QualifiedName = 6277;

        /// <summary>
        /// The identifier for the SByte Variable.
        /// </summary>
        public const uint SampleEventType_SByte = 6259;

        /// <summary>
        /// The identifier for the StatusCode Variable.
        /// </summary>
        public const uint SampleEventType_StatusCode = 6276;

        /// <summary>
        /// The identifier for the String Variable.
        /// </summary>
        public const uint SampleEventType_String = 6269;

        /// <summary>
        /// The identifier for the Structure Variable.
        /// </summary>
        public const uint SampleEventType_Structure = 6091;

        /// <summary>
        /// The identifier for the StructureArray Variable.
        /// </summary>
        public const uint SampleEventType_StructureArray = 6105;

        /// <summary>
        /// The identifier for the StructureWithAbstractBaseTypes Variable.
        /// </summary>
        public const uint SampleEventType_StructureWithAbstractBaseTypes = 6103;

        /// <summary>
        /// The identifier for the UInt16 Variable.
        /// </summary>
        public const uint SampleEventType_UInt16 = 6262;

        /// <summary>
        /// The identifier for the UInt32 Variable.
        /// </summary>
        public const uint SampleEventType_UInt32 = 6264;

        /// <summary>
        /// The identifier for the UInt64 Variable.
        /// </summary>
        public const uint SampleEventType_UInt64 = 6266;

        /// <summary>
        /// The identifier for the XmlElement Variable.
        /// </summary>
        public const uint SampleEventType_XmlElement = 6273;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint BoilerType_Fill_InputArguments = 6029;

        /// <summary>
        /// The identifier for the FillLevel Variable.
        /// </summary>
        public const uint FillLevelSensorType_FillLevel = 6007;

        /// <summary>
        /// The identifier for the Definition Variable.
        /// </summary>
        public const uint FillLevelSensorType_FillLevel_Definition = 6011;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint FillLevelSensorType_FillLevel_EngineeringUnits = 6008;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint FillLevelSensorType_FillLevel_EURange = 6009;

        /// <summary>
        /// The identifier for the InstrumentRange Variable.
        /// </summary>
        public const uint FillLevelSensorType_FillLevel_InstrumentRange = 6010;

        /// <summary>
        /// The identifier for the ValuePrecision Variable.
        /// </summary>
        public const uint FillLevelSensorType_FillLevel_ValuePrecision = 6012;

        /// <summary>
        /// The identifier for the FillLevel Variable.
        /// </summary>
        public const uint BoilerType_FillLevelSensor_FillLevel = 6019;

        /// <summary>
        /// The identifier for the Definition Variable.
        /// </summary>
        public const uint BoilerType_FillLevelSensor_FillLevel_Definition = 6020;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint BoilerType_FillLevelSensor_FillLevel_EngineeringUnits = 6021;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint BoilerType_FillLevelSensor_FillLevel_EURange = 6022;

        /// <summary>
        /// The identifier for the InstrumentRange Variable.
        /// </summary>
        public const uint BoilerType_FillLevelSensor_FillLevel_InstrumentRange = 6023;

        /// <summary>
        /// The identifier for the ValuePrecision Variable.
        /// </summary>
        public const uint BoilerType_FillLevelSensor_FillLevel_ValuePrecision = 6024;

        /// <summary>
        /// The identifier for the FillLevelSetPoint Variable.
        /// </summary>
        public const uint BoilerType_FillLevelSetPoint = 6025;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint BoilerType_Heat_InputArguments = 6030;

        /// <summary>
        /// The identifier for the HeaterStatus Variable.
        /// </summary>
        public const uint BoilerType_HeaterStatus = 6027;

        /// <summary>
        /// The identifier for the Temperature Variable.
        /// </summary>
        public const uint TemperatureSensorType_Temperature = 6001;

        /// <summary>
        /// The identifier for the Definition Variable.
        /// </summary>
        public const uint TemperatureSensorType_Temperature_Definition = 6005;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint TemperatureSensorType_Temperature_EngineeringUnits = 6002;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint TemperatureSensorType_Temperature_EURange = 6003;

        /// <summary>
        /// The identifier for the InstrumentRange Variable.
        /// </summary>
        public const uint TemperatureSensorType_Temperature_InstrumentRange = 6004;

        /// <summary>
        /// The identifier for the ValuePrecision Variable.
        /// </summary>
        public const uint TemperatureSensorType_Temperature_ValuePrecision = 6006;

        /// <summary>
        /// The identifier for the Temperature Variable.
        /// </summary>
        public const uint BoilerType_TemperatureSensor_Temperature = 6013;

        /// <summary>
        /// The identifier for the Definition Variable.
        /// </summary>
        public const uint BoilerType_TemperatureSensor_Temperature_Definition = 6014;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint BoilerType_TemperatureSensor_Temperature_EngineeringUnits = 6015;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint BoilerType_TemperatureSensor_Temperature_EURange = 6016;

        /// <summary>
        /// The identifier for the InstrumentRange Variable.
        /// </summary>
        public const uint BoilerType_TemperatureSensor_Temperature_InstrumentRange = 6017;

        /// <summary>
        /// The identifier for the ValuePrecision Variable.
        /// </summary>
        public const uint BoilerType_TemperatureSensor_Temperature_ValuePrecision = 6018;

        /// <summary>
        /// The identifier for the TemperatureSetPoint Variable.
        /// </summary>
        public const uint BoilerType_TemperatureSetPoint = 6026;

        /// <summary>
        /// The identifier for the HeaterSwitch Variable.
        /// </summary>
        public const uint MachineType_HeaterSwitch = 6256;

        /// <summary>
        /// The identifier for the Temperature Variable.
        /// </summary>
        public const uint MachineType_TemperatureSensor_Temperature = 6250;

        /// <summary>
        /// The identifier for the Definition Variable.
        /// </summary>
        public const uint MachineType_TemperatureSensor_Temperature_Definition = 6046;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint MachineType_TemperatureSensor_Temperature_EngineeringUnits = 6047;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint MachineType_TemperatureSensor_Temperature_EURange = 6251;

        /// <summary>
        /// The identifier for the InstrumentRange Variable.
        /// </summary>
        public const uint MachineType_TemperatureSensor_Temperature_InstrumentRange = 6048;

        /// <summary>
        /// The identifier for the ValuePrecision Variable.
        /// </summary>
        public const uint MachineType_TemperatureSensor_Temperature_ValuePrecision = 6049;

        /// <summary>
        /// The identifier for the Value Variable.
        /// </summary>
        public const uint CountdownStateMachineType_Value = 6035;

        /// <summary>
        /// The identifier for the EnumStrings Variable.
        /// </summary>
        public const uint HeaterStatus_EnumStrings = 6028;

        /// <summary>
        /// The identifier for the EnumValues Variable.
        /// </summary>
        public const uint Priority_EnumValues = 6033;

        /// <summary>
        /// The identifier for the OptionSetValues Variable.
        /// </summary>
        public const uint OptionSetByte_OptionSetValues = 6037;

        /// <summary>
        /// The identifier for the OptionSetValues Variable.
        /// </summary>
        public const uint OptionSetUInt16_OptionSetValues = 6038;

        /// <summary>
        /// The identifier for the OptionSetValues Variable.
        /// </summary>
        public const uint OptionSetUInt32_OptionSetValues = 6040;

        /// <summary>
        /// The identifier for the OptionSetValues Variable.
        /// </summary>
        public const uint OptionSetUInt64_OptionSetValues = 6041;

        /// <summary>
        /// The identifier for the ConcreteSubType Variable.
        /// </summary>
        public const uint Model_BinarySchema_ConcreteSubType = 6063;

        /// <summary>
        /// The identifier for the ConcreteSubType Variable.
        /// </summary>
        public const uint Model_XmlSchema_ConcreteSubType = 6064;

        /// <summary>
        /// The identifier for the ExtendedSubType Variable.
        /// </summary>
        public const uint Model_BinarySchema_ExtendedSubType = 6065;

        /// <summary>
        /// The identifier for the ExtendedSubType Variable.
        /// </summary>
        public const uint Model_XmlSchema_ExtendedSubType = 6066;

        /// <summary>
        /// The identifier for the AbstractBaseType Variable.
        /// </summary>
        public const uint Model_BinarySchema_AbstractBaseType = 6061;

        /// <summary>
        /// The identifier for the AbstractBaseType Variable.
        /// </summary>
        public const uint Model_XmlSchema_AbstractBaseType = 6062;

        /// <summary>
        /// The identifier for the AccessRights Variable.
        /// </summary>
        public const uint Model_BinarySchema_AccessRights = 6067;

        /// <summary>
        /// The identifier for the AccessRights Variable.
        /// </summary>
        public const uint Model_XmlSchema_AccessRights = 6068;

        /// <summary>
        /// The identifier for the OptionSetValues Variable.
        /// </summary>
        public const uint AccessRights_OptionSetValues = 6039;

        /// <summary>
        /// The identifier for the OptionSetBase Variable.
        /// </summary>
        public const uint Model_BinarySchema_OptionSetBase = 6070;

        /// <summary>
        /// The identifier for the OptionSetBase Variable.
        /// </summary>
        public const uint Model_XmlSchema_OptionSetBase = 6071;

        /// <summary>
        /// The identifier for the OptionSetValues Variable.
        /// </summary>
        public const uint OptionSetBase_OptionSetValues = 6054;

        /// <summary>
        /// The identifier for the StructureWithAbstractBaseTypes Variable.
        /// </summary>
        public const uint Model_BinarySchema_StructureWithAbstractBaseTypes = 6072;

        /// <summary>
        /// The identifier for the StructureWithAbstractBaseTypes Variable.
        /// </summary>
        public const uint Model_XmlSchema_StructureWithAbstractBaseTypes = 6073;

        /// <summary>
        /// The identifier for the StructureWithAllowSubtypes Variable.
        /// </summary>
        public const uint Model_BinarySchema_StructureWithAllowSubtypes = 6113;

        /// <summary>
        /// The identifier for the StructureWithAllowSubtypes Variable.
        /// </summary>
        public const uint Model_XmlSchema_StructureWithAllowSubtypes = 6115;

        /// <summary>
        /// The identifier for the StructureWithDerivedStructures Variable.
        /// </summary>
        public const uint Model_BinarySchema_StructureWithDerivedStructures = 6074;

        /// <summary>
        /// The identifier for the StructureWithDerivedStructures Variable.
        /// </summary>
        public const uint Model_XmlSchema_StructureWithDerivedStructures = 6075;

        /// <summary>
        /// The identifier for the StructureWithDifferentDataTypes Variable.
        /// </summary>
        public const uint Model_BinarySchema_StructureWithDifferentDataTypes = 6076;

        /// <summary>
        /// The identifier for the StructureWithDifferentDataTypes Variable.
        /// </summary>
        public const uint Model_XmlSchema_StructureWithDifferentDataTypes = 6077;

        /// <summary>
        /// The identifier for the StructureWithOptionalFields Variable.
        /// </summary>
        public const uint Model_BinarySchema_StructureWithOptionalFields = 6078;

        /// <summary>
        /// The identifier for the StructureWithOptionalFields Variable.
        /// </summary>
        public const uint Model_XmlSchema_StructureWithOptionalFields = 6079;

        /// <summary>
        /// The identifier for the UnionTest Variable.
        /// </summary>
        public const uint Model_BinarySchema_UnionTest = 6080;

        /// <summary>
        /// The identifier for the UnionTest Variable.
        /// </summary>
        public const uint Model_XmlSchema_UnionTest = 6081;

        /// <summary>
        /// The identifier for the Vector Variable.
        /// </summary>
        public const uint Model_BinarySchema_Vector = 6082;

        /// <summary>
        /// The identifier for the Vector Variable.
        /// </summary>
        public const uint Model_XmlSchema_Vector = 6083;

        /// <summary>
        /// The identifier for the WorkOrderStatusType Variable.
        /// </summary>
        public const uint Model_BinarySchema_WorkOrderStatusType = 6084;

        /// <summary>
        /// The identifier for the WorkOrderStatusType Variable.
        /// </summary>
        public const uint Model_XmlSchema_WorkOrderStatusType = 6085;

        /// <summary>
        /// The identifier for the WorkOrderType Variable.
        /// </summary>
        public const uint Model_BinarySchema_WorkOrderType = 6087;

        /// <summary>
        /// The identifier for the WorkOrderType Variable.
        /// </summary>
        public const uint Model_XmlSchema_WorkOrderType = 6089;

        /// <summary>
        /// The identifier for the Model Variable.
        /// </summary>
        public const uint OPCBinarySchema_TypeSystem_Model_BinarySchema = 6057;

        /// <summary>
        /// The identifier for the Deprecated Variable.
        /// </summary>
        public const uint OPCBinarySchema_TypeSystem_Model_BinarySchema_Deprecated = 6121;

        /// <summary>
        /// The identifier for the NamespaceUri Variable.
        /// </summary>
        public const uint OPCBinarySchema_TypeSystem_Model_BinarySchema_NamespaceUri = 6058;

        /// <summary>
        /// The identifier for the Model Variable.
        /// </summary>
        public const uint XmlSchema_TypeSystem_Model_XmlSchema = 6059;

        /// <summary>
        /// The identifier for the Deprecated Variable.
        /// </summary>
        public const uint XmlSchema_TypeSystem_Model_XmlSchema_Deprecated = 6123;

        /// <summary>
        /// The identifier for the NamespaceUri Variable.
        /// </summary>
        public const uint XmlSchema_TypeSystem_Model_XmlSchema_NamespaceUri = 6060;

        /// <summary>
        /// The identifier for the BaseDataType Object.
        /// </summary>
        public const String Demo_Static_Arrays_BaseDataType = "Demo.Static.Arrays.BaseDataType";

        /// <summary>
        /// The identifier for the Boolean Object.
        /// </summary>
        public const String Demo_Static_Arrays_Boolean = "Demo.Static.Arrays.Boolean";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_Static_Arrays_Byte = "Demo.Static.Arrays.Byte";

        /// <summary>
        /// The identifier for the ByteString Object.
        /// </summary>
        public const String Demo_Static_Arrays_ByteString = "Demo.Static.Arrays.ByteString";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_Static_Arrays_DateTime = "Demo.Static.Arrays.DateTime";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_Static_Arrays_Double = "Demo.Static.Arrays.Double";

        /// <summary>
        /// The identifier for the Duration Object.
        /// </summary>
        public const String Demo_Static_Arrays_Duration = "Demo.Static.Arrays.Duration";

        /// <summary>
        /// The identifier for the Enumeration Object.
        /// </summary>
        public const String Demo_Static_Arrays_Enumeration = "Demo.Static.Arrays.Enumeration";

        /// <summary>
        /// The identifier for the ExpandedNodeId Object.
        /// </summary>
        public const String Demo_Static_Arrays_ExpandedNodeId = "Demo.Static.Arrays.ExpandedNodeId";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_Static_Arrays_Float = "Demo.Static.Arrays.Float";

        /// <summary>
        /// The identifier for the Guid Object.
        /// </summary>
        public const String Demo_Static_Arrays_Guid = "Demo.Static.Arrays.Guid";

        /// <summary>
        /// The identifier for the ImagePNG Object.
        /// </summary>
        public const String Demo_Static_Arrays_ImagePNG = "Demo.Static.Arrays.ImagePNG";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_Static_Arrays_Int16 = "Demo.Static.Arrays.Int16";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_Static_Arrays_Int32 = "Demo.Static.Arrays.Int32";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_Static_Arrays_Int64 = "Demo.Static.Arrays.Int64";

        /// <summary>
        /// The identifier for the Integer Object.
        /// </summary>
        public const String Demo_Static_Arrays_Integer = "Demo.Static.Arrays.Integer";

        /// <summary>
        /// The identifier for the LocalizedText Object.
        /// </summary>
        public const String Demo_Static_Arrays_LocalizedText = "Demo.Static.Arrays.LocalizedText";

        /// <summary>
        /// The identifier for the NodeId Object.
        /// </summary>
        public const String Demo_Static_Arrays_NodeId = "Demo.Static.Arrays.NodeId";

        /// <summary>
        /// The identifier for the Number Object.
        /// </summary>
        public const String Demo_Static_Arrays_Number = "Demo.Static.Arrays.Number";

        /// <summary>
        /// The identifier for the NumericRange Object.
        /// </summary>
        public const String Demo_Static_Arrays_NumericRange = "Demo.Static.Arrays.NumericRange";

        /// <summary>
        /// The identifier for the QualifiedName Object.
        /// </summary>
        public const String Demo_Static_Arrays_QualifiedName = "Demo.Static.Arrays.QualifiedName";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_Static_Arrays_SByte = "Demo.Static.Arrays.SByte";

        /// <summary>
        /// The identifier for the ServerState Object.
        /// </summary>
        public const String Demo_Static_Arrays_ServerState = "Demo.Static.Arrays.ServerState";

        /// <summary>
        /// The identifier for the StatusCode Object.
        /// </summary>
        public const String Demo_Static_Arrays_StatusCode = "Demo.Static.Arrays.StatusCode";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_Static_Arrays_String = "Demo.Static.Arrays.String";

        /// <summary>
        /// The identifier for the Structure Object.
        /// </summary>
        public const String Demo_Static_Arrays_Structure = "Demo.Static.Arrays.Structure";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_Static_Arrays_UInt16 = "Demo.Static.Arrays.UInt16";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_Static_Arrays_UInt32 = "Demo.Static.Arrays.UInt32";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_Static_Arrays_UInt64 = "Demo.Static.Arrays.UInt64";

        /// <summary>
        /// The identifier for the UInteger Object.
        /// </summary>
        public const String Demo_Static_Arrays_UInteger = "Demo.Static.Arrays.UInteger";

        /// <summary>
        /// The identifier for the UtcTime Object.
        /// </summary>
        public const String Demo_Static_Arrays_UtcTime = "Demo.Static.Arrays.UtcTime";

        /// <summary>
        /// The identifier for the Vector Object.
        /// </summary>
        public const String Demo_Static_Arrays_Vector = "Demo.Static.Arrays.Vector";

        /// <summary>
        /// The identifier for the WorkOrder Object.
        /// </summary>
        public const String Demo_Static_Arrays_WorkOrder = "Demo.Static.Arrays.WorkOrder";

        /// <summary>
        /// The identifier for the XmlElement Object.
        /// </summary>
        public const String Demo_Static_Arrays_XmlElement = "Demo.Static.Arrays.XmlElement";

        /// <summary>
        /// The identifier for the Boolean Object.
        /// </summary>
        public const String Demo_Static_Matrix_Boolean = "Demo.Static.Matrix.Boolean";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_Static_Matrix_Byte = "Demo.Static.Matrix.Byte";

        /// <summary>
        /// The identifier for the ByteString Object.
        /// </summary>
        public const String Demo_Static_Matrix_ByteString = "Demo.Static.Matrix.ByteString";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_Static_Matrix_DateTime = "Demo.Static.Matrix.DateTime";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_Static_Matrix_Double = "Demo.Static.Matrix.Double";

        /// <summary>
        /// The identifier for the ExpandedNodeId Object.
        /// </summary>
        public const String Demo_Static_Matrix_ExpandedNodeId = "Demo.Static.Matrix.ExpandedNodeId";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_Static_Matrix_Float = "Demo.Static.Matrix.Float";

        /// <summary>
        /// The identifier for the Guid Object.
        /// </summary>
        public const String Demo_Static_Matrix_Guid = "Demo.Static.Matrix.Guid";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_Static_Matrix_Int16 = "Demo.Static.Matrix.Int16";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_Static_Matrix_Int32 = "Demo.Static.Matrix.Int32";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_Static_Matrix_Int64 = "Demo.Static.Matrix.Int64";

        /// <summary>
        /// The identifier for the LocalizedText Object.
        /// </summary>
        public const String Demo_Static_Matrix_LocalizedText = "Demo.Static.Matrix.LocalizedText";

        /// <summary>
        /// The identifier for the NodeId Object.
        /// </summary>
        public const String Demo_Static_Matrix_NodeId = "Demo.Static.Matrix.NodeId";

        /// <summary>
        /// The identifier for the QualifiedName Object.
        /// </summary>
        public const String Demo_Static_Matrix_QualifiedName = "Demo.Static.Matrix.QualifiedName";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_Static_Matrix_SByte = "Demo.Static.Matrix.SByte";

        /// <summary>
        /// The identifier for the StatusCode Object.
        /// </summary>
        public const String Demo_Static_Matrix_StatusCode = "Demo.Static.Matrix.StatusCode";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_Static_Matrix_String = "Demo.Static.Matrix.String";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_Static_Matrix_UInt16 = "Demo.Static.Matrix.UInt16";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_Static_Matrix_UInt32 = "Demo.Static.Matrix.UInt32";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_Static_Matrix_UInt64 = "Demo.Static.Matrix.UInt64";

        /// <summary>
        /// The identifier for the Vector Object.
        /// </summary>
        public const String Demo_Static_Matrix_Vector = "Demo.Static.Matrix.Vector";

        /// <summary>
        /// The identifier for the XmlElement Object.
        /// </summary>
        public const String Demo_Static_Matrix_XmlElement = "Demo.Static.Matrix.XmlElement";

        /// <summary>
        /// The identifier for the BaseDataType Object.
        /// </summary>
        public const String Demo_Static_Scalar_BaseDataType = "Demo.Static.Scalar.BaseDataType";

        /// <summary>
        /// The identifier for the Boolean Object.
        /// </summary>
        public const String Demo_Static_Scalar_Boolean = "Demo.Static.Scalar.Boolean";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_Static_Scalar_Byte = "Demo.Static.Scalar.Byte";

        /// <summary>
        /// The identifier for the ByteString Object.
        /// </summary>
        public const String Demo_Static_Scalar_ByteString = "Demo.Static.Scalar.ByteString";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_Static_Scalar_DateTime = "Demo.Static.Scalar.DateTime";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_Static_Scalar_Double = "Demo.Static.Scalar.Double";

        /// <summary>
        /// The identifier for the Duration Object.
        /// </summary>
        public const String Demo_Static_Scalar_Duration = "Demo.Static.Scalar.Duration";

        /// <summary>
        /// The identifier for the ExpandedNodeId Object.
        /// </summary>
        public const String Demo_Static_Scalar_ExpandedNodeId = "Demo.Static.Scalar.ExpandedNodeId";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_Static_Scalar_Float = "Demo.Static.Scalar.Float";

        /// <summary>
        /// The identifier for the Guid Object.
        /// </summary>
        public const String Demo_Static_Scalar_Guid = "Demo.Static.Scalar.Guid";

        /// <summary>
        /// The identifier for the HeaterStatus Object.
        /// </summary>
        public const String Demo_Static_Scalar_HeaterStatus = "Demo.Static.Scalar.HeaterStatus";

        /// <summary>
        /// The identifier for the ImagePNG Object.
        /// </summary>
        public const String Demo_Static_Scalar_ImagePNG = "Demo.Static.Scalar.ImagePNG";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_Static_Scalar_Int16 = "Demo.Static.Scalar.Int16";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_Static_Scalar_Int32 = "Demo.Static.Scalar.Int32";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_Static_Scalar_Int64 = "Demo.Static.Scalar.Int64";

        /// <summary>
        /// The identifier for the Integer Object.
        /// </summary>
        public const String Demo_Static_Scalar_Integer = "Demo.Static.Scalar.Integer";

        /// <summary>
        /// The identifier for the LocalizedText Object.
        /// </summary>
        public const String Demo_Static_Scalar_LocalizedText = "Demo.Static.Scalar.LocalizedText";

        /// <summary>
        /// The identifier for the NodeId Object.
        /// </summary>
        public const String Demo_Static_Scalar_NodeId = "Demo.Static.Scalar.NodeId";

        /// <summary>
        /// The identifier for the Number Object.
        /// </summary>
        public const String Demo_Static_Scalar_Number = "Demo.Static.Scalar.Number";

        /// <summary>
        /// The identifier for the NumericRange Object.
        /// </summary>
        public const String Demo_Static_Scalar_NumericRange = "Demo.Static.Scalar.NumericRange";

        /// <summary>
        /// The identifier for the OptionSet Object.
        /// </summary>
        public const String Demo_Static_Scalar_OptionSets_OptionSet = "Demo.Static.Scalar.OptionSet";

        /// <summary>
        /// The identifier for the OptionSetBase Object.
        /// </summary>
        public const String Demo_Static_Scalar_OptionSets_OptionSetBase = "Demo.Static.Scalar.OptionSetBase";

        /// <summary>
        /// The identifier for the OptionSetByte Object.
        /// </summary>
        public const String Demo_Static_Scalar_OptionSets_OptionSetByte = "Demo.Static.Scalar.OptionSetByte";

        /// <summary>
        /// The identifier for the OptionSetUInt16 Object.
        /// </summary>
        public const String Demo_Static_Scalar_OptionSets_OptionSetUInt16 = "Demo.Static.Scalar.OptionSetUInt16";

        /// <summary>
        /// The identifier for the OptionSetUInt32 Object.
        /// </summary>
        public const String Demo_Static_Scalar_OptionSets_OptionSetUInt32 = "Demo.Static.Scalar.OptionSetUInt32";

        /// <summary>
        /// The identifier for the OptionSetUInt64 Object.
        /// </summary>
        public const String Demo_Static_Scalar_OptionSets_OptionSetUInt64 = "Demo.Static.Scalar.OptionSetUInt64";

        /// <summary>
        /// The identifier for the Priority Object.
        /// </summary>
        public const String Demo_Static_Scalar_Priority = "Demo.Static.Scalar.Priority";

        /// <summary>
        /// The identifier for the QualifiedName Object.
        /// </summary>
        public const String Demo_Static_Scalar_QualifiedName = "Demo.Static.Scalar.QualifiedName";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_Static_Scalar_SByte = "Demo.Static.Scalar.SByte";

        /// <summary>
        /// The identifier for the ServerState Object.
        /// </summary>
        public const String Demo_Static_Scalar_ServerState = "Demo.Static.Scalar.ServerState";

        /// <summary>
        /// The identifier for the StatusCode Object.
        /// </summary>
        public const String Demo_Static_Scalar_StatusCode = "Demo.Static.Scalar.StatusCode";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_Static_Scalar_String = "Demo.Static.Scalar.String";

        /// <summary>
        /// The identifier for the AbstractBaseTypes Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures_AbstractBaseTypes = "Demo.Static.Scalar.AbstractBaseTypes";

        /// <summary>
        /// The identifier for the DerivedStructures Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures_DerivedStructures = "Demo.Static.Scalar.Structures.DerivedStructures";

        /// <summary>
        /// The identifier for the DifferentDataTypes Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures_DifferentDataTypes = "Demo.Static.Scalar.DifferentDataTypes";

        /// <summary>
        /// The identifier for the OptionalFields Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures_OptionalFields = "Demo.Static.Scalar.OptionalFields";

        /// <summary>
        /// The identifier for the Structure Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures_Structure = "Demo.Static.Scalar.Structure";

        /// <summary>
        /// The identifier for the StructureWithAbstractBaseTypes Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures_StructureWithAbstractBaseTypes = "Demo.Static.Scalar.Structures.StructureWithAbstractBaseTypes";

        /// <summary>
        /// The identifier for the StructureWithAllowSubtypes Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures_StructureWithAllowSubtypes = "Demo.Static.Scalar.Structures.StructureWithAllowSubtypes";

        /// <summary>
        /// The identifier for the Union Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures_Union = "Demo.Static.Scalar.Union";

        /// <summary>
        /// The identifier for the Vector Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures_Vector = "Demo.Static.Scalar.Vector";

        /// <summary>
        /// The identifier for the WorkOrder Object.
        /// </summary>
        public const String Demo_Static_Scalar_Structures_WorkOrder = "Demo.Static.Scalar.WorkOrder";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_Static_Scalar_UInt16 = "Demo.Static.Scalar.UInt16";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_Static_Scalar_UInt32 = "Demo.Static.Scalar.UInt32";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_Static_Scalar_UInt64 = "Demo.Static.Scalar.UInt64";

        /// <summary>
        /// The identifier for the UInteger Object.
        /// </summary>
        public const String Demo_Static_Scalar_UInteger = "Demo.Static.Scalar.UInteger";

        /// <summary>
        /// The identifier for the UtcTime Object.
        /// </summary>
        public const String Demo_Static_Scalar_UtcTime = "Demo.Static.Scalar.UtcTime";

        /// <summary>
        /// The identifier for the XmlElement Object.
        /// </summary>
        public const String Demo_Static_Scalar_XmlElement = "Demo.Static.Scalar.XmlElement";

        /// <summary>
        /// The identifier for the Boolean Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_Boolean = "Demo.Dynamic.Arrays.Boolean";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_Byte = "Demo.Dynamic.Arrays.Byte";

        /// <summary>
        /// The identifier for the ByteString Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_ByteString = "Demo.Dynamic.Arrays.ByteString";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_DateTime = "Demo.Dynamic.Arrays.DateTime";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_Double = "Demo.Dynamic.Arrays.Double";

        /// <summary>
        /// The identifier for the ExpandedNodeId Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_ExpandedNodeId = "Demo.Dynamic.Arrays.ExpandedNodeId";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_Float = "Demo.Dynamic.Arrays.Float";

        /// <summary>
        /// The identifier for the Guid Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_Guid = "Demo.Dynamic.Arrays.Guid";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_Int16 = "Demo.Dynamic.Arrays.Int16";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_Int32 = "Demo.Dynamic.Arrays.Int32";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_Int64 = "Demo.Dynamic.Arrays.Int64";

        /// <summary>
        /// The identifier for the LocalizedText Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_LocalizedText = "Demo.Dynamic.Arrays.LocalizedText";

        /// <summary>
        /// The identifier for the NodeId Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_NodeId = "Demo.Dynamic.Arrays.NodeId";

        /// <summary>
        /// The identifier for the QualifiedName Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_QualifiedName = "Demo.Dynamic.Arrays.QualifiedName";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_SByte = "Demo.Dynamic.Arrays.SByte";

        /// <summary>
        /// The identifier for the StatusCode Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_StatusCode = "Demo.Dynamic.Arrays.StatusCode";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_String = "Demo.Dynamic.Arrays.String";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_UInt16 = "Demo.Dynamic.Arrays.UInt16";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_UInt32 = "Demo.Dynamic.Arrays.UInt32";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_UInt64 = "Demo.Dynamic.Arrays.UInt64";

        /// <summary>
        /// The identifier for the XmlElement Object.
        /// </summary>
        public const String Demo_Dynamic_Arrays_XmlElement = "Demo.Dynamic.Arrays.XmlElement";

        /// <summary>
        /// The identifier for the Boolean Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_Boolean = "Demo.Dynamic.Scalar.Boolean";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_Byte = "Demo.Dynamic.Scalar.Byte";

        /// <summary>
        /// The identifier for the ByteString Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_ByteString = "Demo.Dynamic.Scalar.ByteString";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_DateTime = "Demo.Dynamic.Scalar.DateTime";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_Double = "Demo.Dynamic.Scalar.Double";

        /// <summary>
        /// The identifier for the ExpandedNodeId Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_ExpandedNodeId = "Demo.Dynamic.Scalar.ExpandedNodeId";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_Float = "Demo.Dynamic.Scalar.Float";

        /// <summary>
        /// The identifier for the Guid Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_Guid = "Demo.Dynamic.Scalar.Guid";

        /// <summary>
        /// The identifier for the ImageGIF Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_ImageGIF = "Demo.Dynamic.Scalar.ImageGIF";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_Int16 = "Demo.Dynamic.Scalar.Int16";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_Int32 = "Demo.Dynamic.Scalar.Int32";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_Int64 = "Demo.Dynamic.Scalar.Int64";

        /// <summary>
        /// The identifier for the LocalizedText Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_LocalizedText = "Demo.Dynamic.Scalar.LocalizedText";

        /// <summary>
        /// The identifier for the NodeId Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_NodeId = "Demo.Dynamic.Scalar.NodeId";

        /// <summary>
        /// The identifier for the QualifiedName Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_QualifiedName = "Demo.Dynamic.Scalar.QualifiedName";

        /// <summary>
        /// The identifier for the Quality_DynamicValue Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_Quality_DynamicValue = "Demo.Dynamic.Scalar.Quality_DynamicValue";

        /// <summary>
        /// The identifier for the Quality_StaticValue Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_Quality_StaticValue = "Demo.Dynamic.Scalar.Quality_StaticValue";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_SByte = "Demo.Dynamic.Scalar.SByte";

        /// <summary>
        /// The identifier for the StatusCode Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_StatusCode = "Demo.Dynamic.Scalar.StatusCode";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_String = "Demo.Dynamic.Scalar.String";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_UInt16 = "Demo.Dynamic.Scalar.UInt16";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_UInt32 = "Demo.Dynamic.Scalar.UInt32";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_UInt64 = "Demo.Dynamic.Scalar.UInt64";

        /// <summary>
        /// The identifier for the XmlElement Object.
        /// </summary>
        public const String Demo_Dynamic_Scalar_XmlElement = "Demo.Dynamic.Scalar.XmlElement";

        /// <summary>
        /// The identifier for the ByteWithHistory Object.
        /// </summary>
        public const String Demo_History_ByteWithHistory = "Demo.History.ByteWithHistory";

        /// <summary>
        /// The identifier for the DataLoggerActive Object.
        /// </summary>
        public const String Demo_History_DataLoggerActive = "Demo.History.DataLoggerActive";

        /// <summary>
        /// The identifier for the DoubleWithHistory Object.
        /// </summary>
        public const String Demo_History_DoubleWithHistory = "Demo.History.DoubleWithHistory";

        /// <summary>
        /// The identifier for the Historian_1 Object.
        /// </summary>
        public const String Demo_History_Historian_1 = "Demo.History.Historian_1";

        /// <summary>
        /// The identifier for the Historian_2 Object.
        /// </summary>
        public const String Demo_History_Historian_2 = "Demo.History.Historian_2";

        /// <summary>
        /// The identifier for the Historian_3 Object.
        /// </summary>
        public const String Demo_History_Historian_3 = "Demo.History.Historian_3";

        /// <summary>
        /// The identifier for the Historian_4 Object.
        /// </summary>
        public const String Demo_History_Historian_4 = "Demo.History.Historian_4";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Method_EnumTest_InputArguments = "Demo.Method.EnumTest.InputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_Method_EnumTest_OutputArguments = "Demo.Method.EnumTest.OutputArguments";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Demo_Method_Multiply_InputArguments = 6176;

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const uint Demo_Method_Multiply_OutputArguments = 6177;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Method_OptionSetBaseTest_InputArguments = "Demo.Method.OptionSetBaseType.InputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_Method_OptionSetBaseTest_OutputArguments = "Demo.Method.OptionSetBaseType.OutputArguments";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Method_OptionSetByteTest_InputArguments = "Demo.Method.OptionSetByteTest.InputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_Method_OptionSetByteTest_OutputArguments = "Demo.Method.OptionSetByteTest.OutputArguments";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Method_OptionSetUInt16Test_InputArguments = "Demo.Method.OptionSetUInt16Test.InputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_Method_OptionSetUInt16Test_OutputArguments = "Demo.Method.OptionSetUInt16Test.OutputArguments";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Method_OptionSetUInt32Test_InputArguments = "Demo.Method.OptionSetUInt32Test.InputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_Method_OptionSetUInt32Test_OutputArguments = "Demo.Method.OptionSetUInt32Test.OutputArguments";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Method_OptionSetUInt64Test_InputArguments = "Demo.Method.OptionSetUInt64Test.InputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_Method_OptionSetUInt64Test_OutputArguments = "Demo.Method.OptionSetUInt64Test.OutputArguments";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Method_StructureWithAbstractBaseTypesTest_InputArguments = "Demo.Method.StructureWithAbstractBaseTypesTest.InputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_Method_StructureWithAbstractBaseTypesTest_OutputArguments = "Demo.Method.StructureWithAbstractBaseTypesTest.OutputArguments";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Method_StructureWithDerivedStructuresTest_InputArguments = "Demo.Method.StructureWithDerivedStructuresTest.InputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_Method_StructureWithDerivedStructuresTest_OutputArguments = "Demo.Method.StructureWithDerivedStructuresTest.OutputArguments";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Method_StructureWithDifferentDataTypesTest_InputArguments = "Demo.Method.StructureWithDifferentDataTypesTest.InputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_Method_StructureWithDifferentDataTypesTest_OutputArguments = "Demo.Method.StructureWithDifferentDataTypesTest.OutputArguments";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Demo_Method_VectorAdd_InputArguments = 6187;

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const uint Demo_Method_VectorAdd_OutputArguments = 6188;

        /// <summary>
        /// The identifier for the HeaterSwitch Object.
        /// </summary>
        public const String Demo_Events_Machine_HeaterSwitch = "Demo.Events.Machine.HeaterSwitch";

        /// <summary>
        /// The identifier for the Temperature Object.
        /// </summary>
        public const String Demo_Events_Machine_TemperatureSensor_Temperature = "Demo.Events.Machine.TemperatureSensor.Temperature";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const String Demo_Events_Machine_TemperatureSensor_Temperature_EURange = "Demo.Events.Machine.TemperatureSensor.Temperature.EURange";

        /// <summary>
        /// The identifier for the Trigger_BaseEvent Object.
        /// </summary>
        public const String Demo_Events_Trigger_BaseEvent = "Demo.Events.SampleEventNotifier.Trigger_BaseEvent";

        /// <summary>
        /// The identifier for the Trigger_SampleEvent Object.
        /// </summary>
        public const String Demo_Events_Trigger_SampleEvent = "Demo.Events.SampleEventNotifier.Trigger_SampleEvent";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Events_TriggerMultipleEvents_InputArguments = "Demo.Events.TriggerMultipleEvents.InputArguments";

        /// <summary>
        /// The identifier for the All_RO Object.
        /// </summary>
        public const String Demo_AccessRights_Access_All_All_RO = "Demo.AccessRights.Access_All.All_RO";

        /// <summary>
        /// The identifier for the All_RW Object.
        /// </summary>
        public const String Demo_AccessRights_Access_All_All_RW = "Demo.AccessRights.Access_All.All_RW";

        /// <summary>
        /// The identifier for the All_WO Object.
        /// </summary>
        public const String Demo_AccessRights_Access_All_All_WO = "Demo.AccessRights.Access_All.All_WO";

        /// <summary>
        /// The identifier for the All_RO_John_RW Object.
        /// </summary>
        public const String Demo_AccessRights_Access_John_All_RO_John_RW = "Demo.AccessRights.Access_John.All_RO_John_RW";

        /// <summary>
        /// The identifier for the All_WO_John_RW Object.
        /// </summary>
        public const String Demo_AccessRights_Access_John_All_WO_John_RW = "Demo.AccessRights.Access_John.All_WO_John_RW";

        /// <summary>
        /// The identifier for the John_RO Object.
        /// </summary>
        public const String Demo_AccessRights_Access_John_John_RO = "Demo.AccessRights.Access_John.John_RO";

        /// <summary>
        /// The identifier for the John_RW Object.
        /// </summary>
        public const String Demo_AccessRights_Access_John_John_RW = "Demo.AccessRights.Access_John.John_RW";

        /// <summary>
        /// The identifier for the John_WO Object.
        /// </summary>
        public const String Demo_AccessRights_Access_John_John_WO = "Demo.AccessRights.Access_John.John_WO";

        /// <summary>
        /// The identifier for the All_RO_Operators_RW Object.
        /// </summary>
        public const String Demo_AccessRights_Access_Operators_All_RO_Operators_RW = "Demo.AccessRights.Access_Operators.All_RO_Operators_RW";

        /// <summary>
        /// The identifier for the All_WO_Operators_RW Object.
        /// </summary>
        public const String Demo_AccessRights_Access_Operators_All_WO_Operators_RW = "Demo.AccessRights.Access_Operators.All_WO_Operators_RW";

        /// <summary>
        /// The identifier for the Operators_RO Object.
        /// </summary>
        public const String Demo_AccessRights_Access_Operators_Operators_RO = "Demo.AccessRights.Access_Operators.Operators_RO";

        /// <summary>
        /// The identifier for the Operators_RW Object.
        /// </summary>
        public const String Demo_AccessRights_Access_Operators_Operators_RW = "Demo.AccessRights.Access_Operators.Operators_RW";

        /// <summary>
        /// The identifier for the Operators_WO Object.
        /// </summary>
        public const String Demo_AccessRights_Access_Operators_Operators_WO = "Demo.AccessRights.Access_Operators.Operators_WO";

        /// <summary>
        /// The identifier for the NodeVersion Object.
        /// </summary>
        public const uint Demo_DynamicNodes_NodeVersion = 6031;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Demo_BoilerDemo_Boiler1_Fill_InputArguments = 6032;

        /// <summary>
        /// The identifier for the FillLevel Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel = "Demo.BoilerDemo.Boiler1.FillLevelSensor.FillLevel";

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel_EngineeringUnits = "Demo.BoilerDemo.Boiler1.FillLevelSensor.FillLevel.EngineeringUnits";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel_EURange = "Demo.BoilerDemo.Boiler1.FillLevelSensor.FillLevel.EURange";

        /// <summary>
        /// The identifier for the FillLevelSetPoint Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_FillLevelSetPoint = "Demo.BoilerDemo.Boiler1.FillLevelSetPoint";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Demo_BoilerDemo_Boiler1_Heat_InputArguments = 6036;

        /// <summary>
        /// The identifier for the HeaterStatus Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_HeaterStatus = "Demo.BoilerDemo.Boiler1.HeaterStatus";

        /// <summary>
        /// The identifier for the Temperature Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature = "Demo.BoilerDemo.Boiler1.TemperatureSensor.Temperature";

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature_EngineeringUnits = "Demo.BoilerDemo.Boiler1.TemperatureSensor.Temperature.EngineeringUnits";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature_EURange = "Demo.BoilerDemo.Boiler1.TemperatureSensor.Temperature.EURange";

        /// <summary>
        /// The identifier for the TemperatureSetPoint Object.
        /// </summary>
        public const String Demo_BoilerDemo_Boiler1_TemperatureSetPoint = "Demo.BoilerDemo.Boiler1.TemperatureSetPoint";

        /// <summary>
        /// The identifier for the TriggerNode01 Object.
        /// </summary>
        public const String Demo_CTT_Events_TriggerNode01 = "Demo.CTT.Events.TriggerNode01";

        /// <summary>
        /// The identifier for the TriggerNode02 Object.
        /// </summary>
        public const String Demo_CTT_Events_TriggerNode02 = "Demo.CTT.Events.TriggerNode02";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_CTT_Methods_MethodI_InputArguments = "Demo.CTT.Methods.MethodI.InputArguments";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_CTT_Methods_MethodIO_InputArguments = "Demo.CTT.Methods.MethodIO.InputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_CTT_Methods_MethodIO_OutputArguments = "Demo.CTT.Methods.MethodIO.OutputArguments";

        /// <summary>
        /// The identifier for the OutputArguments Object.
        /// </summary>
        public const String Demo_CTT_Methods_MethodO_OutputArguments = "Demo.CTT.Methods.MethodO.OutputArguments";

        /// <summary>
        /// The identifier for the Variable Object.
        /// </summary>
        public const String Demo_CTT_NodeClasses_Variable = "Demo.CTT.NodeClasses.Variable";

        /// <summary>
        /// The identifier for the RootNode Object.
        /// </summary>
        public const String Demo_CTT_NodeManagement_RootNode = "Demo.CTT.NodeManagement.RootNode";

        /// <summary>
        /// The identifier for the ReferencedNode1 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences1_ReferencedNode1 = 6223;

        /// <summary>
        /// The identifier for the ReferencedNode2 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences1_ReferencedNode2 = 6224;

        /// <summary>
        /// The identifier for the ReferencedNode3 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences1_ReferencedNode3 = 6225;

        /// <summary>
        /// The identifier for the BaseDataVariable Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences2_BaseDataVariable = 6234;

        /// <summary>
        /// The identifier for the Property Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences2_Property = 6235;

        /// <summary>
        /// The identifier for the ReferencedNode1 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences4_ReferencedNode1 = 6226;

        /// <summary>
        /// The identifier for the ReferencedNode2 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences4_ReferencedNode2 = 6227;

        /// <summary>
        /// The identifier for the ReferencedNode3 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences4_ReferencedNode3 = 6228;

        /// <summary>
        /// The identifier for the ReferencedNode2 Object.
        /// </summary>
        public const uint Demo_CTT_References_Has3ForwardReferences5_ReferencedNode2 = 6229;

        /// <summary>
        /// The identifier for the ReferencedNode Object.
        /// </summary>
        public const uint Demo_CTT_References_HasInverseAndForwardReferences_ReferencedNode = 6230;

        /// <summary>
        /// The identifier for the ReferencedNode1 Object.
        /// </summary>
        public const String Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode1 = "Demo.CTT.References.HasReferencesOfAReferenceTypeAndSubType.ReferencedNode1";

        /// <summary>
        /// The identifier for the ReferencedNode2 Object.
        /// </summary>
        public const String Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode2 = "Demo.CTT.References.HasReferencesOfAReferenceTypeAndSubType.ReferencedNode2";

        /// <summary>
        /// The identifier for the ReferencedNode3 Object.
        /// </summary>
        public const String Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode3 = "Demo.CTT.References.HasReferencesOfAReferenceTypeAndSubType.ReferencedNode3";

        /// <summary>
        /// The identifier for the ReferencedNode4 Object.
        /// </summary>
        public const String Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode4 = "Demo.CTT.References.HasReferencesOfAReferenceTypeAndSubType.ReferencedNode4";

        /// <summary>
        /// The identifier for the AccessLevel_CurrentRead Object.
        /// </summary>
        public const String Demo_CTT_SecurityAccess_AccessLevel_CurrentRead = "Demo.CTT.SecurityAccess.AccessLevel_CurrentRead";

        /// <summary>
        /// The identifier for the AccessLevel_CurrentRead_NotCurrentWrite Object.
        /// </summary>
        public const String Demo_CTT_SecurityAccess_AccessLevel_CurrentRead_NotCurrentWrite = "Demo.CTT.SecurityAccess.AccessLevel_CurrentRead_NotCurrentWrite";

        /// <summary>
        /// The identifier for the AccessLevel_CurrentRead_NotUser Object.
        /// </summary>
        public const String Demo_CTT_SecurityAccess_AccessLevel_CurrentRead_NotUser = "Demo.CTT.SecurityAccess.AccessLevel_CurrentRead_NotUser";

        /// <summary>
        /// The identifier for the AccessLevel_CurrentWrite Object.
        /// </summary>
        public const String Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite = "Demo.CTT.SecurityAccess.AccessLevel_CurrentWrite";

        /// <summary>
        /// The identifier for the AccessLevel_CurrentWrite_NotCurrentRead Object.
        /// </summary>
        public const String Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite_NotCurrentRead = "Demo.CTT.SecurityAccess.AccessLevel_CurrentWrite_NotCurrentRead";

        /// <summary>
        /// The identifier for the AccessLevel_CurrentWrite_NotUser Object.
        /// </summary>
        public const String Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite_NotUser = "Demo.CTT.SecurityAccess.AccessLevel_CurrentWrite_NotUser";

        /// <summary>
        /// The identifier for the Bool Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_Bool = "Demo.CTT.AllProfiles.Arrays.Bool";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_Byte = "Demo.CTT.AllProfiles.Arrays.Byte";

        /// <summary>
        /// The identifier for the ByteString Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_ByteString = "Demo.CTT.AllProfiles.Arrays.ByteString";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_DateTime = "Demo.CTT.AllProfiles.Arrays.DateTime";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_Double = "Demo.CTT.AllProfiles.Arrays.Double";

        /// <summary>
        /// The identifier for the Duration Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_Duration = "Demo.CTT.AllProfiles.Arrays.Duration";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_Float = "Demo.CTT.AllProfiles.Arrays.Float";

        /// <summary>
        /// The identifier for the Guid Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_Guid = "Demo.CTT.AllProfiles.Arrays.Guid";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_Int16 = "Demo.CTT.AllProfiles.Arrays.Int16";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_Int32 = "Demo.CTT.AllProfiles.Arrays.Int32";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_Int64 = "Demo.CTT.AllProfiles.Arrays.Int64";

        /// <summary>
        /// The identifier for the LocalizedText Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_LocalizedText = "Demo.CTT.AllProfiles.Arrays.LocalizedText";

        /// <summary>
        /// The identifier for the QualifiedName Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_QualifiedName = "Demo.CTT.AllProfiles.Arrays.QualifiedName";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_SByte = "Demo.CTT.AllProfiles.Arrays.SByte";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_String = "Demo.CTT.AllProfiles.Arrays.String";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_UInt16 = "Demo.CTT.AllProfiles.Arrays.UInt16";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_UInt32 = "Demo.CTT.AllProfiles.Arrays.UInt32";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_UInt64 = "Demo.CTT.AllProfiles.Arrays.UInt64";

        /// <summary>
        /// The identifier for the Variant Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_Variant = "Demo.CTT.AllProfiles.Arrays.Variant";

        /// <summary>
        /// The identifier for the XmlElement Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Arrays_XmlElement = "Demo.CTT.AllProfiles.Arrays.XmlElement";

        /// <summary>
        /// The identifier for the Bool Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Bool = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.Bool";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Byte = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.Byte";

        /// <summary>
        /// The identifier for the ByteString Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_ByteString = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.ByteString";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_DateTime = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.DateTime";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Double = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.Double";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Float = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.Float";

        /// <summary>
        /// The identifier for the Guid Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Guid = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.Guid";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int16 = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.Int16";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int32 = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.Int32";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int64 = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.Int64";

        /// <summary>
        /// The identifier for the LocalizedText Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_LocalizedText = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.LocalizedText";

        /// <summary>
        /// The identifier for the QualifiedName Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_QualifiedName = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.QualifiedName";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_SByte = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.SByte";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_String = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.String";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt16 = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.UInt16";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt32 = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.UInt32";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt64 = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.UInt64";

        /// <summary>
        /// The identifier for the Variant Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Variant = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.Variant";

        /// <summary>
        /// The identifier for the XmlElement Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_XmlElement = "Demo.CTT.Static.AllProfiles.MultiDimensionalArrays.XmlElement";

        /// <summary>
        /// The identifier for the Bool Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Bool = "Demo.CTT.AllProfiles.Scalar.Bool";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Byte = "Demo.CTT.AllProfiles.Scalar.Byte";

        /// <summary>
        /// The identifier for the ByteString Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_ByteString = "Demo.CTT.AllProfiles.Scalar.ByteString";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_DateTime = "Demo.CTT.AllProfiles.Scalar.DateTime";

        /// <summary>
        /// The identifier for the Decimal Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Decimal = "Demo.CTT.AllProfiles.Scalar.Decimal";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Double = "Demo.CTT.AllProfiles.Scalar.Double";

        /// <summary>
        /// The identifier for the Duration Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Duration = "Demo.CTT.AllProfiles.Scalar.Duration";

        /// <summary>
        /// The identifier for the Enumeration Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Enumeration = "Demo.CTT.AllProfiles.Scalar.Enumeration";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Float = "Demo.CTT.AllProfiles.Scalar.Float";

        /// <summary>
        /// The identifier for the Guid Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Guid = "Demo.CTT.AllProfiles.Scalar.Guid";

        /// <summary>
        /// The identifier for the Image Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Image = "Demo.CTT.AllProfiles.Scalar.Image";

        /// <summary>
        /// The identifier for the ImageBMP Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_ImageBMP = "Demo.CTT.AllProfiles.Scalar.ImageBMP";

        /// <summary>
        /// The identifier for the ImageGIF Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_ImageGIF = "Demo.CTT.AllProfiles.Scalar.ImageGIF";

        /// <summary>
        /// The identifier for the ImageJPG Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_ImageJPG = "Demo.CTT.AllProfiles.Scalar.ImageJPG";

        /// <summary>
        /// The identifier for the ImagePNG Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_ImagePNG = "Demo.CTT.AllProfiles.Scalar.ImagePNG";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Int16 = "Demo.CTT.AllProfiles.Scalar.Int16";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Int32 = "Demo.CTT.AllProfiles.Scalar.Int32";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Int64 = "Demo.CTT.AllProfiles.Scalar.Int64";

        /// <summary>
        /// The identifier for the Integer Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Integer = "Demo.CTT.AllProfiles.Scalar.Integer";

        /// <summary>
        /// The identifier for the LocaleId Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_LocaleId = "Demo.CTT.AllProfiles.Scalar.LocaleId";

        /// <summary>
        /// The identifier for the LocalizedText Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_LocalizedText = "Demo.CTT.AllProfiles.Scalar.LocalizedText";

        /// <summary>
        /// The identifier for the NodeId Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_NodeId = "Demo.CTT.AllProfiles.Scalar.NodeId";

        /// <summary>
        /// The identifier for the Number Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Number = "Demo.CTT.AllProfiles.Scalar.Number";

        /// <summary>
        /// The identifier for the QualifiedName Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_QualifiedName = "Demo.CTT.AllProfiles.Scalar.QualifiedName";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_SByte = "Demo.CTT.AllProfiles.Scalar.SByte";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_String = "Demo.CTT.AllProfiles.Scalar.String";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_UInt16 = "Demo.CTT.AllProfiles.Scalar.UInt16";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_UInt32 = "Demo.CTT.AllProfiles.Scalar.UInt32";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_UInt64 = "Demo.CTT.AllProfiles.Scalar.UInt64";

        /// <summary>
        /// The identifier for the UInteger Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_UInteger = "Demo.CTT.AllProfiles.Scalar.UInteger";

        /// <summary>
        /// The identifier for the UtcTime Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_UtcTime = "Demo.CTT.AllProfiles.Scalar.UtcTime";

        /// <summary>
        /// The identifier for the Variant Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_Variant = "Demo.CTT.AllProfiles.Scalar.Variant";

        /// <summary>
        /// The identifier for the XmlElement Object.
        /// </summary>
        public const String Demo_CTT_Static_All_Profiles_Scalar_XmlElement = "Demo.CTT.AllProfiles.Scalar.XmlElement";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Byte = "Demo.CTT.DAProfile.AnalogType.Byte";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Byte_EURange = 6102;

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Double = "Demo.CTT.DAProfile.AnalogType.Double";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Double_EURange = 6086;

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Float = "Demo.CTT.DAProfile.AnalogType.Float";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Float_EURange = 6088;

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Int16 = "Demo.CTT.DAProfile.AnalogType.Int16";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Int16_EURange = 6090;

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Int32 = "Demo.CTT.DAProfile.AnalogType.Int32";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Int32_EURange = 6094;

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Int64 = "Demo.CTT.DAProfile.AnalogType.Int64";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Int64_EURange = 6098;

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_SByte = "Demo.CTT.DAProfile.AnalogType.SByte";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_SByte_EURange = 6104;

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_UInt16 = "Demo.CTT.DAProfile.AnalogType.UInt16";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_UInt16_EURange = 6092;

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_UInt32 = "Demo.CTT.DAProfile.AnalogType.UInt32";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_UInt32_EURange = 6096;

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_UInt64 = "Demo.CTT.DAProfile.AnalogType.UInt64";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_UInt64_EURange = 6100;

        /// <summary>
        /// The identifier for the VariableWithEngineeringUnits Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits = "Demo.CTT.DAProfile.AnalogType.VariableWithEngineeringUnits";

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits_EngineeringUnits = 6109;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits_EURange = 6106;

        /// <summary>
        /// The identifier for the VariableWithInstrumentRange Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange = "Demo.CTT.DAProfile.AnalogType.VariableWithInstrumentRange";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange_EURange = 6108;

        /// <summary>
        /// The identifier for the InstrumentRange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange_InstrumentRange = 6110;

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Double = "Demo.CTT.DAProfile.AnalogTypeArrays.Double";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Double_EURange = 6122;

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Float = "Demo.CTT.DAProfile.AnalogTypeArrays.Float";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Float_EURange = 6120;

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int16 = "Demo.CTT.DAProfile.AnalogTypeArrays.Int16";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int16_EURange = 6112;

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int32 = "Demo.CTT.DAProfile.AnalogTypeArrays.Int32";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int32_EURange = 6114;

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt16 = "Demo.CTT.DAProfile.AnalogTypeArrays.UInt16";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt16_EURange = 6116;

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt32 = "Demo.CTT.DAProfile.AnalogTypeArrays.UInt32";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt32_EURange = 6118;

        /// <summary>
        /// The identifier for the CubeItemType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType = "Demo.CTT.Static.DAProfile.ArrayItemType.CubeItemType";

        /// <summary>
        /// The identifier for the AxisScaleType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_AxisScaleType = "Demo.CTT.Static.DAProfile.ArrayItemType.CubeItemType.AxisScaleType";

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_EngineeringUnits = "Demo.CTT.Static.DAProfile.ArrayItemType.CubeItemType.EngineeringUnits";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_EURange = "Demo.CTT.Static.DAProfile.ArrayItemType.CubeItemType.EURange";

        /// <summary>
        /// The identifier for the Title Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_Title = "Demo.CTT.Static.DAProfile.ArrayItemType.CubeItemType.Title";

        /// <summary>
        /// The identifier for the XAxisDefinition Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_XAxisDefinition = "Demo.CTT.Static.DAProfile.ArrayItemType.CubeItemType.XAxisDefinition";

        /// <summary>
        /// The identifier for the YAxisDefinition Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_YAxisDefinition = "Demo.CTT.Static.DAProfile.ArrayItemType.CubeItemType.YAxisDefinition";

        /// <summary>
        /// The identifier for the ZAxisDefinition Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_ZAxisDefinition = "Demo.CTT.Static.DAProfile.ArrayItemType.CubeItemType.ZAxisDefinition";

        /// <summary>
        /// The identifier for the ImageItemType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType = "Demo.CTT.Static.DAProfile.ArrayItemType.ImageItemType";

        /// <summary>
        /// The identifier for the AxisScaleType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_AxisScaleType = "Demo.CTT.Static.DAProfile.ArrayItemType.ImageItemType.AxisScaleType";

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_EngineeringUnits = "Demo.CTT.Static.DAProfile.ArrayItemType.ImageItemType.EngineeringUnits";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_EURange = "Demo.CTT.Static.DAProfile.ArrayItemType.ImageItemType.EURange";

        /// <summary>
        /// The identifier for the Title Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_Title = "Demo.CTT.Static.DAProfile.ArrayItemType.ImageItemType.Title";

        /// <summary>
        /// The identifier for the XAxisDefinition Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_XAxisDefinition = "Demo.CTT.Static.DAProfile.ArrayItemType.ImageItemType.XAxisDefinition";

        /// <summary>
        /// The identifier for the YAxisDefinition Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_YAxisDefinition = "Demo.CTT.Static.DAProfile.ArrayItemType.ImageItemType.YAxisDefinition";

        /// <summary>
        /// The identifier for the NDimensionArrayItemType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType = "Demo.CTT.Static.DAProfile.ArrayItemType.NDimensionArrayItemType";

        /// <summary>
        /// The identifier for the AxisDefinition Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_AxisDefinition = "Demo.CTT.Static.DAProfile.ArrayItemType.NDimensionArrayItemType.AxisDefinition";

        /// <summary>
        /// The identifier for the AxisScaleType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_AxisScaleType = "Demo.CTT.Static.DAProfile.ArrayItemType.NDimensionArrayItemType.AxisScaleType";

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_EngineeringUnits = "Demo.CTT.Static.DAProfile.ArrayItemType.NDimensionArrayItemType.EngineeringUnits";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_EURange = "Demo.CTT.Static.DAProfile.ArrayItemType.NDimensionArrayItemType.EURange";

        /// <summary>
        /// The identifier for the Title Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_Title = "Demo.CTT.Static.DAProfile.ArrayItemType.NDimensionArrayItemType.Title";

        /// <summary>
        /// The identifier for the XYArrayItemType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType = "Demo.CTT.Static.DAProfile.ArrayItemType.XYArrayItemType";

        /// <summary>
        /// The identifier for the AxisScaleType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_AxisScaleType = "Demo.CTT.Static.DAProfile.ArrayItemType.XYArrayItemType.AxisScaleType";

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_EngineeringUnits = "Demo.CTT.Static.DAProfile.ArrayItemType.XYArrayItemType.EngineeringUnits";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_EURange = "Demo.CTT.Static.DAProfile.ArrayItemType.XYArrayItemType.EURange";

        /// <summary>
        /// The identifier for the Title Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_Title = "Demo.CTT.Static.DAProfile.ArrayItemType.XYArrayItemType.Title";

        /// <summary>
        /// The identifier for the XAxisDefinition Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_XAxisDefinition = "Demo.CTT.Static.DAProfile.ArrayItemType.XYArrayItemType.XAxisDefinition";

        /// <summary>
        /// The identifier for the YArrayItemType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType = "Demo.CTT.Static.DAProfile.ArrayItemType.YArrayItemType";

        /// <summary>
        /// The identifier for the AxisScaleType Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_AxisScaleType = "Demo.CTT.Static.DAProfile.ArrayItemType.YArrayItemType.AxisScaleType";

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_EngineeringUnits = "Demo.CTT.Static.DAProfile.ArrayItemType.YArrayItemType.EngineeringUnits";

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_EURange = "Demo.CTT.Static.DAProfile.ArrayItemType.YArrayItemType.EURange";

        /// <summary>
        /// The identifier for the Title Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_Title = "Demo.CTT.Static.DAProfile.ArrayItemType.YArrayItemType.Title";

        /// <summary>
        /// The identifier for the XAxisDefinition Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_XAxisDefinition = "Demo.CTT.Static.DAProfile.ArrayItemType.YArrayItemType.XAxisDefinition";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_Byte = "Demo.CTT.DAProfile.DataItem.Byte";

        /// <summary>
        /// The identifier for the Definition Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_Byte_Definition = "Demo.CTT.DAProfile.DataItem.Byte.Definition";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_DateTime = "Demo.CTT.DAProfile.DataItem.DateTime";

        /// <summary>
        /// The identifier for the ValuePrecision Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_DateTime_ValuePrecision = "Demo.CTT.DAProfile.DataItem.DateTime.ValuePrecision";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_Double = "Demo.CTT.DAProfile.DataItem.Double";

        /// <summary>
        /// The identifier for the ValuePrecision Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_Double_ValuePrecision = "Demo.CTT.DAProfile.DataItem.Double.ValuePrecision";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_Float = "Demo.CTT.DAProfile.DataItem.Float";

        /// <summary>
        /// The identifier for the Definition Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_Float_Definition = "Demo.CTT.DAProfile.DataItem.Float.Definition";

        /// <summary>
        /// The identifier for the ValuePrecision Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_Float_ValuePrecision = "Demo.CTT.DAProfile.DataItem.Float.ValuePrecision";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_Int16 = "Demo.CTT.DAProfile.DataItem.Int16";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_Int32 = "Demo.CTT.DAProfile.DataItem.Int32";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_Int64 = "Demo.CTT.DAProfile.DataItem.Int64";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_SByte = "Demo.CTT.DAProfile.DataItem.SByte";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_String = "Demo.CTT.DAProfile.DataItem.String";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_UInt16 = "Demo.CTT.DAProfile.DataItem.UInt16";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_UInt32 = "Demo.CTT.DAProfile.DataItem.UInt32";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DataItem_UInt64 = "Demo.CTT.DAProfile.DataItem.UInt64";

        /// <summary>
        /// The identifier for the MultiStateDiscrete1 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete1 = "Demo.CTT.DAProfile.DiscreteType.MultiStateDiscrete1";

        /// <summary>
        /// The identifier for the EnumStrings Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete1_EnumStrings = 6124;

        /// <summary>
        /// The identifier for the MultiStateDiscrete2 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete2 = "Demo.CTT.DAProfile.DiscreteType.MultiStateDiscrete2";

        /// <summary>
        /// The identifier for the EnumStrings Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete2_EnumStrings = 6126;

        /// <summary>
        /// The identifier for the MultiStateDiscrete3 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete3 = "Demo.CTT.DAProfile.DiscreteType.MultiStateDiscrete3";

        /// <summary>
        /// The identifier for the EnumStrings Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete3_EnumStrings = 6128;

        /// <summary>
        /// The identifier for the MultiStateDiscrete4 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete4 = "Demo.CTT.DAProfile.DiscreteType.MultiStateDiscrete4";

        /// <summary>
        /// The identifier for the EnumStrings Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete4_EnumStrings = 6130;

        /// <summary>
        /// The identifier for the MultiStateDiscrete5 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete5 = "Demo.CTT.DAProfile.DiscreteType.MultiStateDiscrete5";

        /// <summary>
        /// The identifier for the EnumStrings Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete5_EnumStrings = 6132;

        /// <summary>
        /// The identifier for the TwoStateDiscrete1 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1 = "Demo.CTT.DAProfile.DiscreteType.TwoStateDiscrete1";

        /// <summary>
        /// The identifier for the FalseState Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1_FalseState = 6134;

        /// <summary>
        /// The identifier for the TrueState Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1_TrueState = 6135;

        /// <summary>
        /// The identifier for the TwoStateDiscrete2 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2 = "Demo.CTT.DAProfile.DiscreteType.TwoStateDiscrete2";

        /// <summary>
        /// The identifier for the FalseState Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2_FalseState = 6137;

        /// <summary>
        /// The identifier for the TrueState Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2_TrueState = 6138;

        /// <summary>
        /// The identifier for the TwoStateDiscrete3 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3 = "Demo.CTT.DAProfile.DiscreteType.TwoStateDiscrete3";

        /// <summary>
        /// The identifier for the FalseState Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3_FalseState = 6140;

        /// <summary>
        /// The identifier for the TrueState Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3_TrueState = 6141;

        /// <summary>
        /// The identifier for the TwoStateDiscrete4 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4 = "Demo.CTT.DAProfile.DiscreteType.TwoStateDiscrete4";

        /// <summary>
        /// The identifier for the FalseState Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4_FalseState = 6143;

        /// <summary>
        /// The identifier for the TrueState Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4_TrueState = 6144;

        /// <summary>
        /// The identifier for the TwoStateDiscrete5 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5 = "Demo.CTT.DAProfile.DiscreteType.TwoStateDiscrete5";

        /// <summary>
        /// The identifier for the FalseState Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5_FalseState = 6146;

        /// <summary>
        /// The identifier for the TrueState Object.
        /// </summary>
        public const uint Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5_TrueState = 6147;

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Byte";

        /// <summary>
        /// The identifier for the EnumValues Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte_EnumValues = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Byte.EnumValues";

        /// <summary>
        /// The identifier for the ValueAsText Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte_ValueAsText = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Byte.ValueAsText";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16 = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Int16";

        /// <summary>
        /// The identifier for the EnumValues Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16_EnumValues = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Int16.EnumValues";

        /// <summary>
        /// The identifier for the ValueAsText Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16_ValueAsText = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Int16.ValueAsText";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32 = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Int32";

        /// <summary>
        /// The identifier for the EnumValues Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32_EnumValues = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Int32.EnumValues";

        /// <summary>
        /// The identifier for the ValueAsText Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32_ValueAsText = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Int32.ValueAsText";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64 = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Int64";

        /// <summary>
        /// The identifier for the EnumValues Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64_EnumValues = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Int64.EnumValues";

        /// <summary>
        /// The identifier for the ValueAsText Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64_ValueAsText = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.Int64.ValueAsText";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.SByte";

        /// <summary>
        /// The identifier for the EnumValues Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte_EnumValues = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.SByte.EnumValues";

        /// <summary>
        /// The identifier for the ValueAsText Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte_ValueAsText = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.SByte.ValueAsText";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16 = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.UInt16";

        /// <summary>
        /// The identifier for the EnumValues Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16_EnumValues = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.UInt16.EnumValues";

        /// <summary>
        /// The identifier for the ValueAsText Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16_ValueAsText = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.UInt16.ValueAsText";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32 = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.UInt32";

        /// <summary>
        /// The identifier for the EnumValues Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32_EnumValues = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.UInt32.EnumValues";

        /// <summary>
        /// The identifier for the ValueAsText Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32_ValueAsText = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.UInt32.ValueAsText";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64 = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.UInt64";

        /// <summary>
        /// The identifier for the EnumValues Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64_EnumValues = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.UInt64.EnumValues";

        /// <summary>
        /// The identifier for the ValueAsText Object.
        /// </summary>
        public const String Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64_ValueAsText = "Demo.CTT.DAProfile.MultiStateValueDiscreteType.UInt64.ValueAsText";

        /// <summary>
        /// The identifier for the AccessLevel_None Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_None = "Demo.CTT.Static.HAProfile.AccessRights.AccessLevel_None";

        /// <summary>
        /// The identifier for the AccessLevel_ReadOnly Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_ReadOnly = "Demo.CTT.Static.HAProfile.AccessRights.AccessLevel_ReadOnly";

        /// <summary>
        /// The identifier for the AccessLevel_WriteOnly Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_WriteOnly = "Demo.CTT.Static.HAProfile.AccessRights.AccessLevel_WriteOnly";

        /// <summary>
        /// The identifier for the UserAccessLevel_None Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_None = "Demo.CTT.Static.HAProfile.AccessRights.UserAccessLevel_None";

        /// <summary>
        /// The identifier for the UserAccessLevel_ReadOnly Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_ReadOnly = "Demo.CTT.Static.HAProfile.AccessRights.UserAccessLevel_ReadOnly";

        /// <summary>
        /// The identifier for the UserAccessLevel_WriteOnly Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_WriteOnly = "Demo.CTT.Static.HAProfile.AccessRights.UserAccessLevel_WriteOnly";

        /// <summary>
        /// The identifier for the BooleanOne Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_BooleanOne = "Demo.CTT.Static.HAProfile.Aggregates.BooleanOne";

        /// <summary>
        /// The identifier for the BooleanTwo Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_BooleanTwo = "Demo.CTT.Static.HAProfile.Aggregates.BooleanTwo";

        /// <summary>
        /// The identifier for the DoubleOne Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_DoubleOne = "Demo.CTT.Static.HAProfile.Aggregates.DoubleOne";

        /// <summary>
        /// The identifier for the DoubleTwo Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_DoubleTwo = "Demo.CTT.Static.HAProfile.Aggregates.DoubleTwo";

        /// <summary>
        /// The identifier for the FloatOne Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_FloatOne = "Demo.CTT.Static.HAProfile.Aggregates.FloatOne";

        /// <summary>
        /// The identifier for the FloatTwo Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_FloatTwo = "Demo.CTT.Static.HAProfile.Aggregates.FloatTwo";

        /// <summary>
        /// The identifier for the IntegerOne Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_IntegerOne = "Demo.CTT.Static.HAProfile.Aggregates.IntegerOne";

        /// <summary>
        /// The identifier for the IntegerTwo Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_IntegerTwo = "Demo.CTT.Static.HAProfile.Aggregates.IntegerTwo";

        /// <summary>
        /// The identifier for the NonNumericOne Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_NonNumericOne = "Demo.CTT.Static.HAProfile.Aggregates.NonNumericOne";

        /// <summary>
        /// The identifier for the NonNumericTwo Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_NonNumericTwo = "Demo.CTT.Static.HAProfile.Aggregates.NonNumericTwo";

        /// <summary>
        /// The identifier for the StartOfBadDataBooleanOne Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataBooleanOne = "Demo.CTT.Static.HAProfile.Aggregates.StartOfBadDataBooleanOne";

        /// <summary>
        /// The identifier for the StartOfBadDataBooleanTwo Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataBooleanTwo = "Demo.CTT.Static.HAProfile.Aggregates.StartOfBadDataBooleanTwo";

        /// <summary>
        /// The identifier for the StartOfBadDataDoubleOne Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataDoubleOne = "Demo.CTT.Static.HAProfile.Aggregates.StartOfBadDataDoubleOne";

        /// <summary>
        /// The identifier for the StartOfBadDataDoubleTwo Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataDoubleTwo = "Demo.CTT.Static.HAProfile.Aggregates.StartOfBadDataDoubleTwo";

        /// <summary>
        /// The identifier for the StartOfBadDataFloatOne Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataFloatOne = "Demo.CTT.Static.HAProfile.Aggregates.StartOfBadDataFloatOne";

        /// <summary>
        /// The identifier for the StartOfBadDataFloatTwo Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataFloatTwo = "Demo.CTT.Static.HAProfile.Aggregates.StartOfBadDataFloatTwo";

        /// <summary>
        /// The identifier for the StartOfBadDataIntegerOne Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataIntegerOne = "Demo.CTT.Static.HAProfile.Aggregates.StartOfBadDataIntegerOne";

        /// <summary>
        /// The identifier for the StartOfBadDataIntegerTwo Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataIntegerTwo = "Demo.CTT.Static.HAProfile.Aggregates.StartOfBadDataIntegerTwo";

        /// <summary>
        /// The identifier for the StartOfBadDataNonNumericOne Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataNonNumericOne = "Demo.CTT.Static.HAProfile.Aggregates.StartOfBadDataNonNumericOne";

        /// <summary>
        /// The identifier for the StartOfBadDataNonNumericTwo Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataNonNumericTwo = "Demo.CTT.Static.HAProfile.Aggregates.StartOfBadDataNonNumericTwo";

        /// <summary>
        /// The identifier for the Bool Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Bool = "Demo.CTT.Static.HAProfile.Arrays.Bool";

        /// <summary>
        /// The identifier for the Bool2D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Bool2D = "Demo.CTT.Static.HAProfile.Arrays.Bool2D";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Byte = "Demo.CTT.Static.HAProfile.Arrays.Byte";

        /// <summary>
        /// The identifier for the Byte2D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Byte2D = "Demo.CTT.Static.HAProfile.Arrays.Byte2D";

        /// <summary>
        /// The identifier for the ByteString Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_ByteString = "Demo.CTT.Static.HAProfile.Arrays.ByteString";

        /// <summary>
        /// The identifier for the ByteString2D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_ByteString2D = "Demo.CTT.Static.HAProfile.Arrays.ByteString2D";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_DateTime = "Demo.CTT.Static.HAProfile.Arrays.DateTime";

        /// <summary>
        /// The identifier for the DateTime2D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_DateTime2D = "Demo.CTT.Static.HAProfile.Arrays.DateTime2D";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Double = "Demo.CTT.Static.HAProfile.Arrays.Double";

        /// <summary>
        /// The identifier for the Double2D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Double2D = "Demo.CTT.Static.HAProfile.Arrays.Double2D";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Float = "Demo.CTT.Static.HAProfile.Arrays.Float";

        /// <summary>
        /// The identifier for the Float2D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Float2D = "Demo.CTT.Static.HAProfile.Arrays.Float2D";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Int16 = "Demo.CTT.Static.HAProfile.Arrays.Int16";

        /// <summary>
        /// The identifier for the Int162D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Int162D = "Demo.CTT.Static.HAProfile.Arrays.Int162D";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Int32 = "Demo.CTT.Static.HAProfile.Arrays.Int32";

        /// <summary>
        /// The identifier for the Int322D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Int322D = "Demo.CTT.Static.HAProfile.Arrays.Int322D";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Int64 = "Demo.CTT.Static.HAProfile.Arrays.Int64";

        /// <summary>
        /// The identifier for the Int642D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_Int642D = "Demo.CTT.Static.HAProfile.Arrays.Int642D";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_SByte = "Demo.CTT.Static.HAProfile.Arrays.SByte";

        /// <summary>
        /// The identifier for the SByte2D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_SByte2D = "Demo.CTT.Static.HAProfile.Arrays.SByte2D";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_String = "Demo.CTT.Static.HAProfile.Arrays.String";

        /// <summary>
        /// The identifier for the String2D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_String2D = "Demo.CTT.Static.HAProfile.Arrays.String2D";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_UInt16 = "Demo.CTT.Static.HAProfile.Arrays.UInt16";

        /// <summary>
        /// The identifier for the UInt162D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_UInt162D = "Demo.CTT.Static.HAProfile.Arrays.UInt162D";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_UInt32 = "Demo.CTT.Static.HAProfile.Arrays.UInt32";

        /// <summary>
        /// The identifier for the UInt322D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_UInt322D = "Demo.CTT.Static.HAProfile.Arrays.UInt322D";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_UInt64 = "Demo.CTT.Static.HAProfile.Arrays.UInt64";

        /// <summary>
        /// The identifier for the UInt642D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_UInt642D = "Demo.CTT.Static.HAProfile.Arrays.UInt642D";

        /// <summary>
        /// The identifier for the XmlElement Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_XmlElement = "Demo.CTT.Static.HAProfile.Arrays.XmlElement";

        /// <summary>
        /// The identifier for the XmlElement2D Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Arrays_XmlElement2D = "Demo.CTT.Static.HAProfile.Arrays.XmlElement2D";

        /// <summary>
        /// The identifier for the NodeDoesNotSupportHistory Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_NodeDoesNotSupportHistory = "Demo.CTT.Static.HAProfile.NodeDoesNotSupportHistory";

        /// <summary>
        /// The identifier for the NodeDoesNotSupportSourceTimestamp Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_NodeDoesNotSupportSourceTimestamp = "Demo.CTT.Static.HAProfile.NodeDoesNotSupportSourceTimestamp";

        /// <summary>
        /// The identifier for the Bool Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_Bool = "Demo.CTT.Static.HAProfile.Scalar.Bool";

        /// <summary>
        /// The identifier for the Byte Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_Byte = "Demo.CTT.Static.HAProfile.Scalar.Byte";

        /// <summary>
        /// The identifier for the ByteString Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_ByteString = "Demo.CTT.Static.HAProfile.Scalar.ByteString";

        /// <summary>
        /// The identifier for the DateTime Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_DateTime = "Demo.CTT.Static.HAProfile.Scalar.DateTime";

        /// <summary>
        /// The identifier for the Double Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_Double = "Demo.CTT.Static.HAProfile.Scalar.Double";

        /// <summary>
        /// The identifier for the Float Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_Float = "Demo.CTT.Static.HAProfile.Scalar.Float";

        /// <summary>
        /// The identifier for the Int16 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_Int16 = "Demo.CTT.Static.HAProfile.Scalar.Int16";

        /// <summary>
        /// The identifier for the Int32 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_Int32 = "Demo.CTT.Static.HAProfile.Scalar.Int32";

        /// <summary>
        /// The identifier for the Int64 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_Int64 = "Demo.CTT.Static.HAProfile.Scalar.Int64";

        /// <summary>
        /// The identifier for the SByte Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_SByte = "Demo.CTT.Static.HAProfile.Scalar.SByte";

        /// <summary>
        /// The identifier for the String Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_String = "Demo.CTT.Static.HAProfile.Scalar.String";

        /// <summary>
        /// The identifier for the UInt16 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_UInt16 = "Demo.CTT.Static.HAProfile.Scalar.UInt16";

        /// <summary>
        /// The identifier for the UInt32 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_UInt32 = "Demo.CTT.Static.HAProfile.Scalar.UInt32";

        /// <summary>
        /// The identifier for the UInt64 Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_UInt64 = "Demo.CTT.Static.HAProfile.Scalar.UInt64";

        /// <summary>
        /// The identifier for the XmlElement Object.
        /// </summary>
        public const String Demo_CTT_Static_HA_Profile_Scalar_XmlElement = "Demo.CTT.Static.HAProfile.Scalar.XmlElement";

        /// <summary>
        /// The identifier for the LongDescription Object.
        /// </summary>
        public const String Demo_UnicodeTest_LongDescription = "Demo.UnicodeTest.LongDescription";

        /// <summary>
        /// The identifier for the MultiLingualDescription Object.
        /// </summary>
        public const String Demo_UnicodeTest_MultiLingualDescription = "Demo.UnicodeTest.MultiLingual";

        /// <summary>
        /// The identifier for the SpecialCharactersInDescription Object.
        /// </summary>
        public const String Demo_UnicodeTest_SpecialCharactersInDescription = "Demo.UnicodeTest.SpecialCharacters";

        /// <summary>
        /// The identifier for the Icon Object.
        /// </summary>
        public const String Demo_Icon_Icon = "Demo.Icon.Icon";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const String Demo_Images_Dynamic_SetAnimationSpeed_InputArguments = "Demo.Images.Dynamic.SetAnimationSpeed.InputArguments";

        /// <summary>
        /// The identifier for the WorkOrderVariable Object.
        /// </summary>
        public const String Demo_WorkOrder_WorkOrderVariable = "Demo.WorkOrder.WorkOrderVariable";

        /// <summary>
        /// The identifier for the AssetID Object.
        /// </summary>
        public const String Demo_WorkOrder_WorkOrderVariable_AssetID = "Demo.WorkOrder.WorkOrderVariable.AssetID";

        /// <summary>
        /// The identifier for the ID Object.
        /// </summary>
        public const String Demo_WorkOrder_WorkOrderVariable_ID = "Demo.WorkOrder.WorkOrderVariable.ID";

        /// <summary>
        /// The identifier for the StartTime Object.
        /// </summary>
        public const String Demo_WorkOrder_WorkOrderVariable_StartTime = "Demo.WorkOrder.WorkOrderVariable.StartTime";

        /// <summary>
        /// The identifier for the StatusComments Object.
        /// </summary>
        public const String Demo_WorkOrder_WorkOrderVariable_StatusComments = "Demo.WorkOrder.WorkOrderVariable.StatusComments";

        /// <summary>
        /// The identifier for the WorkOrderVariable2 Object.
        /// </summary>
        public const String Demo_WorkOrder_WorkOrderVariable2 = "Demo.WorkOrder.WorkOrderVariable2";

        /// <summary>
        /// The identifier for the AssetID Object.
        /// </summary>
        public const String Demo_WorkOrder_WorkOrderVariable2_AssetID = "Demo.WorkOrder.WorkOrderVariable2.AssetID";

        /// <summary>
        /// The identifier for the ID Object.
        /// </summary>
        public const String Demo_WorkOrder_WorkOrderVariable2_ID = "Demo.WorkOrder.WorkOrderVariable2.ID";

        /// <summary>
        /// The identifier for the StartTime Object.
        /// </summary>
        public const String Demo_WorkOrder_WorkOrderVariable2_StartTime = "Demo.WorkOrder.WorkOrderVariable2.StartTime";

        /// <summary>
        /// The identifier for the StatusComments Object.
        /// </summary>
        public const String Demo_WorkOrder_WorkOrderVariable2_StatusComments = "Demo.WorkOrder.WorkOrderVariable2.StatusComments";

        /// <summary>
        /// The identifier for the AutoDelete Object.
        /// </summary>
        public const String Demo_StateMachines_Program_AutoDelete = "Demo.StateMachines.Program.AutoDelete";

        /// <summary>
        /// The identifier for the CurrentState Object.
        /// </summary>
        public const String Demo_StateMachines_Program_CurrentState = "Demo.StateMachines.Program.CurrentState";

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const String Demo_StateMachines_Program_CurrentState_Id = "Demo.StateMachines.Program.CurrentState.Id";

        /// <summary>
        /// The identifier for the Number Object.
        /// </summary>
        public const String Demo_StateMachines_Program_CurrentState_Number = "Demo.StateMachines.Program.CurrentState.Number";

        /// <summary>
        /// The identifier for the Deletable Object.
        /// </summary>
        public const String Demo_StateMachines_Program_Deletable = "Demo.StateMachines.Program.Deletable";

        /// <summary>
        /// The identifier for the LastTransition Object.
        /// </summary>
        public const String Demo_StateMachines_Program_LastTransition = "Demo.StateMachines.Program.LastTransition";

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const String Demo_StateMachines_Program_LastTransition_Id = "Demo.StateMachines.Program.LastTransition.Id";

        /// <summary>
        /// The identifier for the Number Object.
        /// </summary>
        public const String Demo_StateMachines_Program_LastTransition_Number = "Demo.StateMachines.Program.LastTransition.Number";

        /// <summary>
        /// The identifier for the TransitionTime Object.
        /// </summary>
        public const String Demo_StateMachines_Program_LastTransition_TransitionTime = "Demo.StateMachines.Program.LastTransition.TransitionTime";

        /// <summary>
        /// The identifier for the RecycleCount Object.
        /// </summary>
        public const String Demo_StateMachines_Program_RecycleCount = "Demo.StateMachines.Program.RecycleCount";

        /// <summary>
        /// The identifier for the Value Object.
        /// </summary>
        public const String Demo_StateMachines_Program_Value = "Demo.StateMachines.Program.Value";

        /// <summary>
        /// The identifier for the SlowAsynchronousAPI Object.
        /// </summary>
        public const String Demo_SpecialVariables_SlowAsynchronousAPI = "Demo.SpecialVariables.SlowAsynchronousAPI";

        /// <summary>
        /// The identifier for the SlowSynchronousAPI Object.
        /// </summary>
        public const String Demo_SpecialVariables_SlowSynchronousAPI = "Demo.SpecialVariables.SlowSynchronousAPI";

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint Demo_SetSimulationSpeed_InputArguments = 6249;

        /// <summary>
        /// The identifier for the SimulationActive Object.
        /// </summary>
        public const String Demo_SimulationActive = "Demo.SimulationActive";

        /// <summary>
        /// The identifier for the SimulationSpeed Object.
        /// </summary>
        public const String Demo_SimulationSpeed = "Demo.SimulationSpeed";

        /// <summary>
        /// The identifier for the IsNamespaceSubset Object.
        /// </summary>
        public const uint Namespaces_http___www_unifiedautomation_com_DemoServer__IsNamespaceSubset = 6050;

        /// <summary>
        /// The identifier for the NamespacePublicationDate Object.
        /// </summary>
        public const uint Namespaces_http___www_unifiedautomation_com_DemoServer__NamespacePublicationDate = 6051;

        /// <summary>
        /// The identifier for the NamespaceUri Object.
        /// </summary>
        public const uint Namespaces_http___www_unifiedautomation_com_DemoServer__NamespaceUri = 6052;

        /// <summary>
        /// The identifier for the NamespaceVersion Object.
        /// </summary>
        public const uint Namespaces_http___www_unifiedautomation_com_DemoServer__NamespaceVersion = 6053;

        /// <summary>
        /// The identifier for the StaticNodeIdTypes Object.
        /// </summary>
        public const uint Namespaces_http___www_unifiedautomation_com_DemoServer__StaticNodeIdTypes = 6069;

        /// <summary>
        /// The identifier for the StaticNumericNodeIdRange Object.
        /// </summary>
        public const uint Namespaces_http___www_unifiedautomation_com_DemoServer__StaticNumericNodeIdRange = 6055;

        /// <summary>
        /// The identifier for the StaticStringNodeIdPattern Object.
        /// </summary>
        public const uint Namespaces_http___www_unifiedautomation_com_DemoServer__StaticStringNodeIdPattern = 6056;

    }
    #endregion

    #region VariableTypes Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class VariableTypes
    {
        /// <summary>
        /// The identifier for the WorkOrderVariableType VariableType.
        /// </summary>
        public const uint WorkOrderVariableType = 2001;

    }
    #endregion

    #region DataType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all DataTypes in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class DataTypeIds
    {
        /// <summary>
        /// The identifier for the HeaterStatus DataType.
        /// </summary>
        public static readonly ExpandedNodeId HeaterStatus = new ExpandedNodeId(DataTypes.HeaterStatus, Namespaces.Model);

        /// <summary>
        /// The identifier for the Priority DataType.
        /// </summary>
        public static readonly ExpandedNodeId Priority = new ExpandedNodeId(DataTypes.Priority, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetByte DataType.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetByte = new ExpandedNodeId(DataTypes.OptionSetByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetUInt16 DataType.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetUInt16 = new ExpandedNodeId(DataTypes.OptionSetUInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetUInt32 DataType.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetUInt32 = new ExpandedNodeId(DataTypes.OptionSetUInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetUInt64 DataType.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetUInt64 = new ExpandedNodeId(DataTypes.OptionSetUInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the AbstractBaseType DataType.
        /// </summary>
        public static readonly ExpandedNodeId AbstractBaseType = new ExpandedNodeId(DataTypes.AbstractBaseType, Namespaces.Model);

        /// <summary>
        /// The identifier for the ConcreteSubType DataType.
        /// </summary>
        public static readonly ExpandedNodeId ConcreteSubType = new ExpandedNodeId(DataTypes.ConcreteSubType, Namespaces.Model);

        /// <summary>
        /// The identifier for the ExtendedSubType DataType.
        /// </summary>
        public static readonly ExpandedNodeId ExtendedSubType = new ExpandedNodeId(DataTypes.ExtendedSubType, Namespaces.Model);

        /// <summary>
        /// The identifier for the AccessRights DataType.
        /// </summary>
        public static readonly ExpandedNodeId AccessRights = new ExpandedNodeId(DataTypes.AccessRights, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetBase DataType.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetBase = new ExpandedNodeId(DataTypes.OptionSetBase, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithAbstractBaseTypes DataType.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithAbstractBaseTypes = new ExpandedNodeId(DataTypes.StructureWithAbstractBaseTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithAllowSubtypes DataType.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithAllowSubtypes = new ExpandedNodeId(DataTypes.StructureWithAllowSubtypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithDerivedStructures DataType.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithDerivedStructures = new ExpandedNodeId(DataTypes.StructureWithDerivedStructures, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithDifferentDataTypes DataType.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithDifferentDataTypes = new ExpandedNodeId(DataTypes.StructureWithDifferentDataTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithOptionalFields DataType.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithOptionalFields = new ExpandedNodeId(DataTypes.StructureWithOptionalFields, Namespaces.Model);

        /// <summary>
        /// The identifier for the UnionTest DataType.
        /// </summary>
        public static readonly ExpandedNodeId UnionTest = new ExpandedNodeId(DataTypes.UnionTest, Namespaces.Model);

        /// <summary>
        /// The identifier for the Vector DataType.
        /// </summary>
        public static readonly ExpandedNodeId Vector = new ExpandedNodeId(DataTypes.Vector, Namespaces.Model);

        /// <summary>
        /// The identifier for the WorkOrderStatusType DataType.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderStatusType = new ExpandedNodeId(DataTypes.WorkOrderStatusType, Namespaces.Model);

        /// <summary>
        /// The identifier for the WorkOrderType DataType.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderType = new ExpandedNodeId(DataTypes.WorkOrderType, Namespaces.Model);

    }
    #endregion

    #region Method Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Methods in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class MethodIds
    {
        /// <summary>
        /// The identifier for the BoilerType_Fill Method.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_Fill = new ExpandedNodeId(Methods.BoilerType_Fill, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_Heat Method.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_Heat = new ExpandedNodeId(Methods.BoilerType_Heat, Namespaces.Model);

        /// <summary>
        /// The identifier for the CountdownStateMachineType_Halt Method.
        /// </summary>
        public static readonly ExpandedNodeId CountdownStateMachineType_Halt = new ExpandedNodeId(Methods.CountdownStateMachineType_Halt, Namespaces.Model);

        /// <summary>
        /// The identifier for the CountdownStateMachineType_Reset Method.
        /// </summary>
        public static readonly ExpandedNodeId CountdownStateMachineType_Reset = new ExpandedNodeId(Methods.CountdownStateMachineType_Reset, Namespaces.Model);

        /// <summary>
        /// The identifier for the CountdownStateMachineType_Resume Method.
        /// </summary>
        public static readonly ExpandedNodeId CountdownStateMachineType_Resume = new ExpandedNodeId(Methods.CountdownStateMachineType_Resume, Namespaces.Model);

        /// <summary>
        /// The identifier for the CountdownStateMachineType_Start Method.
        /// </summary>
        public static readonly ExpandedNodeId CountdownStateMachineType_Start = new ExpandedNodeId(Methods.CountdownStateMachineType_Start, Namespaces.Model);

        /// <summary>
        /// The identifier for the CountdownStateMachineType_Suspend Method.
        /// </summary>
        public static readonly ExpandedNodeId CountdownStateMachineType_Suspend = new ExpandedNodeId(Methods.CountdownStateMachineType_Suspend, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_History_StartLogging Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_History_StartLogging = new ExpandedNodeId(Methods.Demo_History_StartLogging, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_History_StopLogging Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_History_StopLogging = new ExpandedNodeId(Methods.Demo_History_StopLogging, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_DoSomethingAfter10s Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_DoSomethingAfter10s = new ExpandedNodeId(Methods.Demo_Method_DoSomethingAfter10s, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_EnumTest Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_EnumTest = new ExpandedNodeId(Methods.Demo_Method_EnumTest, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_Multiply Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_Multiply = new ExpandedNodeId(Methods.Demo_Method_Multiply, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetBaseTest Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetBaseTest = new ExpandedNodeId(Methods.Demo_Method_OptionSetBaseTest, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetByteTest Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetByteTest = new ExpandedNodeId(Methods.Demo_Method_OptionSetByteTest, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetUInt16Test Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetUInt16Test = new ExpandedNodeId(Methods.Demo_Method_OptionSetUInt16Test, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetUInt32Test Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetUInt32Test = new ExpandedNodeId(Methods.Demo_Method_OptionSetUInt32Test, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetUInt64Test Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetUInt64Test = new ExpandedNodeId(Methods.Demo_Method_OptionSetUInt64Test, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_StructureWithAbstractBaseTypesTest Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_StructureWithAbstractBaseTypesTest = new ExpandedNodeId(Methods.Demo_Method_StructureWithAbstractBaseTypesTest, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_StructureWithDerivedStructuresTest Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_StructureWithDerivedStructuresTest = new ExpandedNodeId(Methods.Demo_Method_StructureWithDerivedStructuresTest, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_StructureWithDifferentDataTypesTest Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_StructureWithDifferentDataTypesTest = new ExpandedNodeId(Methods.Demo_Method_StructureWithDifferentDataTypesTest, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_VectorAdd Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_VectorAdd = new ExpandedNodeId(Methods.Demo_Method_VectorAdd, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events_TriggerMultipleEvents Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events_TriggerMultipleEvents = new ExpandedNodeId(Methods.Demo_Events_TriggerMultipleEvents, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_DynamicNodes_CreateDynamicNode Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_DynamicNodes_CreateDynamicNode = new ExpandedNodeId(Methods.Demo_DynamicNodes_CreateDynamicNode, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_DynamicNodes_DeleteDynamicNode Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_DynamicNodes_DeleteDynamicNode = new ExpandedNodeId(Methods.Demo_DynamicNodes_DeleteDynamicNode, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_Fill Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_Fill = new ExpandedNodeId(Methods.Demo_BoilerDemo_Boiler1_Fill, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_Heat Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_Heat = new ExpandedNodeId(Methods.Demo_BoilerDemo_Boiler1_Heat, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Methods_MethodI Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Methods_MethodI = new ExpandedNodeId(Methods.Demo_CTT_Methods_MethodI, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Methods_MethodIO Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Methods_MethodIO = new ExpandedNodeId(Methods.Demo_CTT_Methods_MethodIO, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Methods_MethodNoArgs Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Methods_MethodNoArgs = new ExpandedNodeId(Methods.Demo_CTT_Methods_MethodNoArgs, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Methods_MethodO Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Methods_MethodO = new ExpandedNodeId(Methods.Demo_CTT_Methods_MethodO, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_NodeClasses_Method Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_NodeClasses_Method = new ExpandedNodeId(Methods.Demo_CTT_NodeClasses_Method, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences2_Method1 Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences2_Method1 = new ExpandedNodeId(Methods.Demo_CTT_References_Has3ForwardReferences2_Method1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences2_Method2 Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences2_Method2 = new ExpandedNodeId(Methods.Demo_CTT_References_Has3ForwardReferences2_Method2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences2_Method3 Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences2_Method3 = new ExpandedNodeId(Methods.Demo_CTT_References_Has3ForwardReferences2_Method3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences5_ReferencedNode3 Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences5_ReferencedNode3 = new ExpandedNodeId(Methods.Demo_CTT_References_Has3ForwardReferences5_ReferencedNode3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Images_Dynamic_SetAnimationSpeed Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Images_Dynamic_SetAnimationSpeed = new ExpandedNodeId(Methods.Demo_Images_Dynamic_SetAnimationSpeed, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_Halt Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_Halt = new ExpandedNodeId(Methods.Demo_StateMachines_Program_Halt, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_Reset Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_Reset = new ExpandedNodeId(Methods.Demo_StateMachines_Program_Reset, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_Resume Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_Resume = new ExpandedNodeId(Methods.Demo_StateMachines_Program_Resume, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_Start Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_Start = new ExpandedNodeId(Methods.Demo_StateMachines_Program_Start, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_Suspend Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_Suspend = new ExpandedNodeId(Methods.Demo_StateMachines_Program_Suspend, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_SetSimulationSpeed Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_SetSimulationSpeed = new ExpandedNodeId(Methods.Demo_SetSimulationSpeed, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StartSimulation Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StartSimulation = new ExpandedNodeId(Methods.Demo_StartSimulation, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StopSimulation Method.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StopSimulation = new ExpandedNodeId(Methods.Demo_StopSimulation, Namespaces.Model);

    }
    #endregion

    #region Object Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Objects in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class ObjectIds
    {
        /// <summary>
        /// The identifier for the BoilerType_FillLevelSensor Object.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_FillLevelSensor = new ExpandedNodeId(Objects.BoilerType_FillLevelSensor, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_TemperatureSensor Object.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_TemperatureSensor = new ExpandedNodeId(Objects.BoilerType_TemperatureSensor, Namespaces.Model);

        /// <summary>
        /// The identifier for the MachineType_TemperatureSensor Object.
        /// </summary>
        public static readonly ExpandedNodeId MachineType_TemperatureSensor = new ExpandedNodeId(Objects.MachineType_TemperatureSensor, Namespaces.Model);

        /// <summary>
        /// The identifier for the ConcreteSubType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ConcreteSubType_Encoding_DefaultBinary = new ExpandedNodeId(Objects.ConcreteSubType_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the ConcreteSubType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ConcreteSubType_Encoding_DefaultXml = new ExpandedNodeId(Objects.ConcreteSubType_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the ExtendedSubType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ExtendedSubType_Encoding_DefaultBinary = new ExpandedNodeId(Objects.ExtendedSubType_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the ExtendedSubType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ExtendedSubType_Encoding_DefaultXml = new ExpandedNodeId(Objects.ExtendedSubType_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the AbstractBaseType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId AbstractBaseType_Encoding_DefaultBinary = new ExpandedNodeId(Objects.AbstractBaseType_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the AbstractBaseType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId AbstractBaseType_Encoding_DefaultXml = new ExpandedNodeId(Objects.AbstractBaseType_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the AccessRights_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId AccessRights_Encoding_DefaultBinary = new ExpandedNodeId(Objects.AccessRights_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the AccessRights_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId AccessRights_Encoding_DefaultXml = new ExpandedNodeId(Objects.AccessRights_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetBase_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetBase_Encoding_DefaultBinary = new ExpandedNodeId(Objects.OptionSetBase_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetBase_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetBase_Encoding_DefaultXml = new ExpandedNodeId(Objects.OptionSetBase_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithAbstractBaseTypes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithAbstractBaseTypes_Encoding_DefaultBinary = new ExpandedNodeId(Objects.StructureWithAbstractBaseTypes_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithAbstractBaseTypes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithAbstractBaseTypes_Encoding_DefaultXml = new ExpandedNodeId(Objects.StructureWithAbstractBaseTypes_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithAllowSubtypes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithAllowSubtypes_Encoding_DefaultBinary = new ExpandedNodeId(Objects.StructureWithAllowSubtypes_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithAllowSubtypes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithAllowSubtypes_Encoding_DefaultXml = new ExpandedNodeId(Objects.StructureWithAllowSubtypes_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithDerivedStructures_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithDerivedStructures_Encoding_DefaultBinary = new ExpandedNodeId(Objects.StructureWithDerivedStructures_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithDerivedStructures_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithDerivedStructures_Encoding_DefaultXml = new ExpandedNodeId(Objects.StructureWithDerivedStructures_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithDifferentDataTypes_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithDifferentDataTypes_Encoding_DefaultBinary = new ExpandedNodeId(Objects.StructureWithDifferentDataTypes_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithDifferentDataTypes_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithDifferentDataTypes_Encoding_DefaultXml = new ExpandedNodeId(Objects.StructureWithDifferentDataTypes_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithOptionalFields_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithOptionalFields_Encoding_DefaultBinary = new ExpandedNodeId(Objects.StructureWithOptionalFields_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the StructureWithOptionalFields_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId StructureWithOptionalFields_Encoding_DefaultXml = new ExpandedNodeId(Objects.StructureWithOptionalFields_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the UnionTest_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId UnionTest_Encoding_DefaultBinary = new ExpandedNodeId(Objects.UnionTest_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the UnionTest_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId UnionTest_Encoding_DefaultXml = new ExpandedNodeId(Objects.UnionTest_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the Vector_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId Vector_Encoding_DefaultBinary = new ExpandedNodeId(Objects.Vector_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the Vector_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId Vector_Encoding_DefaultXml = new ExpandedNodeId(Objects.Vector_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the WorkOrderStatusType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderStatusType_Encoding_DefaultBinary = new ExpandedNodeId(Objects.WorkOrderStatusType_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the WorkOrderStatusType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderStatusType_Encoding_DefaultXml = new ExpandedNodeId(Objects.WorkOrderStatusType_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the WorkOrderType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderType_Encoding_DefaultBinary = new ExpandedNodeId(Objects.WorkOrderType_Encoding_DefaultBinary, Namespaces.Model);

        /// <summary>
        /// The identifier for the WorkOrderType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderType_Encoding_DefaultXml = new ExpandedNodeId(Objects.WorkOrderType_Encoding_DefaultXml, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo = new ExpandedNodeId(Objects.Demo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static = new ExpandedNodeId(Objects.Demo_Static, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays = new ExpandedNodeId(Objects.Demo_Static_Arrays, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix = new ExpandedNodeId(Objects.Demo_Static_Matrix, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar = new ExpandedNodeId(Objects.Demo_Static_Scalar, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_OptionSets Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_OptionSets = new ExpandedNodeId(Objects.Demo_Static_Scalar_OptionSets, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures = new ExpandedNodeId(Objects.Demo_Static_Scalar_Structures, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic = new ExpandedNodeId(Objects.Demo_Dynamic, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays = new ExpandedNodeId(Objects.Demo_Dynamic_Arrays, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar = new ExpandedNodeId(Objects.Demo_Dynamic_Scalar, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_History Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_History = new ExpandedNodeId(Objects.Demo_History, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method = new ExpandedNodeId(Objects.Demo_Method, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events = new ExpandedNodeId(Objects.Demo_Events, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events_Machine Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events_Machine = new ExpandedNodeId(Objects.Demo_Events_Machine, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events_Machine_TemperatureSensor Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events_Machine_TemperatureSensor = new ExpandedNodeId(Objects.Demo_Events_Machine_TemperatureSensor, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events_SampleEventNotifier Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events_SampleEventNotifier = new ExpandedNodeId(Objects.Demo_Events_SampleEventNotifier, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights = new ExpandedNodeId(Objects.Demo_AccessRights, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_All Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_All = new ExpandedNodeId(Objects.Demo_AccessRights_Access_All, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_John Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_John = new ExpandedNodeId(Objects.Demo_AccessRights_Access_John, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_Operators Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_Operators = new ExpandedNodeId(Objects.Demo_AccessRights_Access_Operators, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Browse_All Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Browse_All = new ExpandedNodeId(Objects.Demo_AccessRights_Browse_All, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Browse_John Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Browse_John = new ExpandedNodeId(Objects.Demo_AccessRights_Browse_John, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Browse_Operators Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Browse_Operators = new ExpandedNodeId(Objects.Demo_AccessRights_Browse_Operators, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Massfolder_Static Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Massfolder_Static = new ExpandedNodeId(Objects.Demo_Massfolder_Static, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Massfolder_Dynamic Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Massfolder_Dynamic = new ExpandedNodeId(Objects.Demo_Massfolder_Dynamic, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_DynamicNodes Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_DynamicNodes = new ExpandedNodeId(Objects.Demo_DynamicNodes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo = new ExpandedNodeId(Objects.Demo_BoilerDemo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1 = new ExpandedNodeId(Objects.Demo_BoilerDemo_Boiler1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_FillLevelSensor Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_FillLevelSensor = new ExpandedNodeId(Objects.Demo_BoilerDemo_Boiler1_FillLevelSensor, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_TemperatureSensor Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_TemperatureSensor = new ExpandedNodeId(Objects.Demo_BoilerDemo_Boiler1_TemperatureSensor, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT = new ExpandedNodeId(Objects.Demo_CTT, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Events Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Events = new ExpandedNodeId(Objects.Demo_CTT_Events, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Methods Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Methods = new ExpandedNodeId(Objects.Demo_CTT_Methods, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_NodeClasses Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_NodeClasses = new ExpandedNodeId(Objects.Demo_CTT_NodeClasses, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_NodeClasses_Object Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_NodeClasses_Object = new ExpandedNodeId(Objects.Demo_CTT_NodeClasses_Object, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_NodeManagement Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_NodeManagement = new ExpandedNodeId(Objects.Demo_CTT_NodeManagement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths = new ExpandedNodeId(Objects.Demo_CTT_Paths, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths_folder1 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths_folder1 = new ExpandedNodeId(Objects.Demo_CTT_Paths_folder1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths_folder1_folder2 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths_folder1_folder2 = new ExpandedNodeId(Objects.Demo_CTT_Paths_folder1_folder2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths_folder1_folder2_folder3 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths_folder1_folder2_folder3 = new ExpandedNodeId(Objects.Demo_CTT_Paths_folder1_folder2_folder3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths_folder1_folder2_folder3_folder4 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths_folder1_folder2_folder3_folder4 = new ExpandedNodeId(Objects.Demo_CTT_Paths_folder1_folder2_folder3_folder4, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5 = new ExpandedNodeId(Objects.Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6 = new ExpandedNodeId(Objects.Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7 = new ExpandedNodeId(Objects.Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8 = new ExpandedNodeId(Objects.Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8_folder9 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8_folder9 = new ExpandedNodeId(Objects.Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8_folder9, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8_folder9_folder10 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8_folder9_folder10 = new ExpandedNodeId(Objects.Demo_CTT_Paths_folder1_folder2_folder3_folder4_folder5_folder6_folder7_folder8_folder9_folder10, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References = new ExpandedNodeId(Objects.Demo_CTT_References, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences1 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences1 = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences2 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences2 = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences2_Object Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences2_Object = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences2_Object, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences3 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences3 = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences3_ReferencedNode1 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences3_ReferencedNode1 = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences3_ReferencedNode1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences3_ReferencedNode1_Has3InverseReferences Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences3_ReferencedNode1_Has3InverseReferences = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences3_ReferencedNode1_Has3InverseReferences, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences3_ReferencedNode2 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences3_ReferencedNode2 = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences3_ReferencedNode2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences3_ReferencedNode3 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences3_ReferencedNode3 = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences3_ReferencedNode3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences4 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences4 = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences4, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences5 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences5 = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences5, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences5_ReferencedNode1 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences5_ReferencedNode1 = new ExpandedNodeId(Objects.Demo_CTT_References_Has3ForwardReferences5_ReferencedNode1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_HasInverseAndForwardReferences Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_HasInverseAndForwardReferences = new ExpandedNodeId(Objects.Demo_CTT_References_HasInverseAndForwardReferences, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType = new ExpandedNodeId(Objects.Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_SecurityAccess Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_SecurityAccess = new ExpandedNodeId(Objects.Demo_CTT_SecurityAccess, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static = new ExpandedNodeId(Objects.Demo_CTT_Static, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles = new ExpandedNodeId(Objects.Demo_CTT_Static_All_Profiles, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays = new ExpandedNodeId(Objects.Demo_CTT_Static_All_Profiles_Arrays, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays = new ExpandedNodeId(Objects.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar = new ExpandedNodeId(Objects.Demo_CTT_Static_All_Profiles_Scalar, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile = new ExpandedNodeId(Objects.Demo_CTT_Static_DA_Profile, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType = new ExpandedNodeId(Objects.Demo_CTT_Static_DA_Profile_AnalogType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays = new ExpandedNodeId(Objects.Demo_CTT_Static_DA_Profile_AnalogType_Arrays, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType = new ExpandedNodeId(Objects.Demo_CTT_Static_DA_Profile_ArrayItemType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem = new ExpandedNodeId(Objects.Demo_CTT_Static_DA_Profile_DataItem, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType = new ExpandedNodeId(Objects.Demo_CTT_Static_DA_Profile_DiscreteType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType = new ExpandedNodeId(Objects.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile = new ExpandedNodeId(Objects.Demo_CTT_Static_HA_Profile, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_AccessRights Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_AccessRights = new ExpandedNodeId(Objects.Demo_CTT_Static_HA_Profile_AccessRights, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates = new ExpandedNodeId(Objects.Demo_CTT_Static_HA_Profile_Aggregates, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays = new ExpandedNodeId(Objects.Demo_CTT_Static_HA_Profile_Arrays, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar = new ExpandedNodeId(Objects.Demo_CTT_Static_HA_Profile_Scalar, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_UnicodeTest Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_UnicodeTest = new ExpandedNodeId(Objects.Demo_UnicodeTest, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_UnicodeTest_Die_heisse_Zypernsonne_quaelte_Max_und_Victoria_ja_boese_auf_dem_Weg_bis_zur_Kueste Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_UnicodeTest_Die_heisse_Zypernsonne_quaelte_Max_und_Victoria_ja_boese_auf_dem_Weg_bis_zur_Kueste = new ExpandedNodeId(Objects.Demo_UnicodeTest_Die_heisse_Zypernsonne_quaelte_Max_und_Victoria_ja_boese_auf_dem_Weg_bis_zur_Kueste, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_UnicodeTest_Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_UnicodeTest_Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern = new ExpandedNodeId(Objects.Demo_UnicodeTest_Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_UnicodeTest_The_quick_brown_fox_jumps_over_the_lazy_dog Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_UnicodeTest_The_quick_brown_fox_jumps_over_the_lazy_dog = new ExpandedNodeId(Objects.Demo_UnicodeTest_The_quick_brown_fox_jumps_over_the_lazy_dog, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_UnicodeTest_Voyez_le_brick_g_ant_que_j_examine_pr_s_du_wharf Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_UnicodeTest_Voyez_le_brick_g_ant_que_j_examine_pr_s_du_wharf = new ExpandedNodeId(Objects.Demo_UnicodeTest_Voyez_le_brick_g_ant_que_j_examine_pr_s_du_wharf, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_UnicodeTest_Node5016 Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_UnicodeTest_Node5016 = new ExpandedNodeId(Objects.Demo_UnicodeTest_Node5016, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Icon Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Icon = new ExpandedNodeId(Objects.Demo_Icon, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Images Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Images = new ExpandedNodeId(Objects.Demo_Images, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Images_Dynamic Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Images_Dynamic = new ExpandedNodeId(Objects.Demo_Images_Dynamic, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Images_Static Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Images_Static = new ExpandedNodeId(Objects.Demo_Images_Static, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Files Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Files = new ExpandedNodeId(Objects.Demo_Files, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder = new ExpandedNodeId(Objects.Demo_WorkOrder, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines = new ExpandedNodeId(Objects.Demo_StateMachines, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program = new ExpandedNodeId(Objects.Demo_StateMachines_Program, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_SpecialVariables Object.
        /// </summary>
        public static readonly ExpandedNodeId Demo_SpecialVariables = new ExpandedNodeId(Objects.Demo_SpecialVariables, Namespaces.Model);

        /// <summary>
        /// The identifier for the Namespaces_http___www_unifiedautomation_com_DemoServer_ Object.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___www_unifiedautomation_com_DemoServer_ = new ExpandedNodeId(Objects.Namespaces_http___www_unifiedautomation_com_DemoServer_, Namespaces.Model);

    }
    #endregion

    #region ObjectType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Objects in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class ObjectTypeIds
    {
        /// <summary>
        /// The identifier for the SampleEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType = new ExpandedNodeId(ObjectTypes.SampleEventType, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType = new ExpandedNodeId(ObjectTypes.BoilerType, Namespaces.Model);

        /// <summary>
        /// The identifier for the FillLevelSensorType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId FillLevelSensorType = new ExpandedNodeId(ObjectTypes.FillLevelSensorType, Namespaces.Model);

        /// <summary>
        /// The identifier for the MachineType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId MachineType = new ExpandedNodeId(ObjectTypes.MachineType, Namespaces.Model);

        /// <summary>
        /// The identifier for the CountdownStateMachineType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CountdownStateMachineType = new ExpandedNodeId(ObjectTypes.CountdownStateMachineType, Namespaces.Model);

        /// <summary>
        /// The identifier for the TemperatureSensorType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType = new ExpandedNodeId(ObjectTypes.TemperatureSensorType, Namespaces.Model);

    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all ReferenceTypes in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class ReferenceTypeIds
    {
        /// <summary>
        /// The identifier for the TriggersEvent ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId TriggersEvent = new ExpandedNodeId(ReferenceTypes.TriggersEvent, Namespaces.Model);

    }
    #endregion

    #region Variable Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all Variables in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class VariableIds
    {
        /// <summary>
        /// The identifier for the WorkOrderVariableType_AssetID Variable.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderVariableType_AssetID = new ExpandedNodeId(Variables.WorkOrderVariableType_AssetID, Namespaces.Model);

        /// <summary>
        /// The identifier for the WorkOrderVariableType_ID Variable.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderVariableType_ID = new ExpandedNodeId(Variables.WorkOrderVariableType_ID, Namespaces.Model);

        /// <summary>
        /// The identifier for the WorkOrderVariableType_StartTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderVariableType_StartTime = new ExpandedNodeId(Variables.WorkOrderVariableType_StartTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the WorkOrderVariableType_StatusComments Variable.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderVariableType_StatusComments = new ExpandedNodeId(Variables.WorkOrderVariableType_StatusComments, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_Boolean Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_Boolean = new ExpandedNodeId(Variables.SampleEventType_Boolean, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_Byte = new ExpandedNodeId(Variables.SampleEventType_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_ByteString = new ExpandedNodeId(Variables.SampleEventType_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_DateTime = new ExpandedNodeId(Variables.SampleEventType_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_Double = new ExpandedNodeId(Variables.SampleEventType_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_Enumeration Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_Enumeration = new ExpandedNodeId(Variables.SampleEventType_Enumeration, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_ExpandedNodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_ExpandedNodeId = new ExpandedNodeId(Variables.SampleEventType_ExpandedNodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_Float = new ExpandedNodeId(Variables.SampleEventType_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_Guid Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_Guid = new ExpandedNodeId(Variables.SampleEventType_Guid, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_Int16 = new ExpandedNodeId(Variables.SampleEventType_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_Int32 = new ExpandedNodeId(Variables.SampleEventType_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_Int64 = new ExpandedNodeId(Variables.SampleEventType_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_LocalizedText Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_LocalizedText = new ExpandedNodeId(Variables.SampleEventType_LocalizedText, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_NodeIdNode Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_NodeIdNode = new ExpandedNodeId(Variables.SampleEventType_NodeIdNode, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_OptionSetBase Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_OptionSetBase = new ExpandedNodeId(Variables.SampleEventType_OptionSetBase, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_OptionSetBaseArray Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_OptionSetBaseArray = new ExpandedNodeId(Variables.SampleEventType_OptionSetBaseArray, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_OptionSetByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_OptionSetByte = new ExpandedNodeId(Variables.SampleEventType_OptionSetByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_OptionSetUInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_OptionSetUInt16 = new ExpandedNodeId(Variables.SampleEventType_OptionSetUInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_OptionSetUInt16Array Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_OptionSetUInt16Array = new ExpandedNodeId(Variables.SampleEventType_OptionSetUInt16Array, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_OptionSetUInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_OptionSetUInt32 = new ExpandedNodeId(Variables.SampleEventType_OptionSetUInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_OptionSetUInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_OptionSetUInt64 = new ExpandedNodeId(Variables.SampleEventType_OptionSetUInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_QualifiedName Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_QualifiedName = new ExpandedNodeId(Variables.SampleEventType_QualifiedName, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_SByte = new ExpandedNodeId(Variables.SampleEventType_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_StatusCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_StatusCode = new ExpandedNodeId(Variables.SampleEventType_StatusCode, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_String = new ExpandedNodeId(Variables.SampleEventType_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_Structure Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_Structure = new ExpandedNodeId(Variables.SampleEventType_Structure, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_StructureArray Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_StructureArray = new ExpandedNodeId(Variables.SampleEventType_StructureArray, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_StructureWithAbstractBaseTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_StructureWithAbstractBaseTypes = new ExpandedNodeId(Variables.SampleEventType_StructureWithAbstractBaseTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_UInt16 = new ExpandedNodeId(Variables.SampleEventType_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_UInt32 = new ExpandedNodeId(Variables.SampleEventType_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_UInt64 = new ExpandedNodeId(Variables.SampleEventType_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the SampleEventType_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId SampleEventType_XmlElement = new ExpandedNodeId(Variables.SampleEventType_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_Fill_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_Fill_InputArguments = new ExpandedNodeId(Variables.BoilerType_Fill_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the FillLevelSensorType_FillLevel Variable.
        /// </summary>
        public static readonly ExpandedNodeId FillLevelSensorType_FillLevel = new ExpandedNodeId(Variables.FillLevelSensorType_FillLevel, Namespaces.Model);

        /// <summary>
        /// The identifier for the FillLevelSensorType_FillLevel_Definition Variable.
        /// </summary>
        public static readonly ExpandedNodeId FillLevelSensorType_FillLevel_Definition = new ExpandedNodeId(Variables.FillLevelSensorType_FillLevel_Definition, Namespaces.Model);

        /// <summary>
        /// The identifier for the FillLevelSensorType_FillLevel_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId FillLevelSensorType_FillLevel_EngineeringUnits = new ExpandedNodeId(Variables.FillLevelSensorType_FillLevel_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the FillLevelSensorType_FillLevel_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId FillLevelSensorType_FillLevel_EURange = new ExpandedNodeId(Variables.FillLevelSensorType_FillLevel_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the FillLevelSensorType_FillLevel_InstrumentRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId FillLevelSensorType_FillLevel_InstrumentRange = new ExpandedNodeId(Variables.FillLevelSensorType_FillLevel_InstrumentRange, Namespaces.Model);

        /// <summary>
        /// The identifier for the FillLevelSensorType_FillLevel_ValuePrecision Variable.
        /// </summary>
        public static readonly ExpandedNodeId FillLevelSensorType_FillLevel_ValuePrecision = new ExpandedNodeId(Variables.FillLevelSensorType_FillLevel_ValuePrecision, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_FillLevelSensor_FillLevel Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_FillLevelSensor_FillLevel = new ExpandedNodeId(Variables.BoilerType_FillLevelSensor_FillLevel, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_FillLevelSensor_FillLevel_Definition Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_FillLevelSensor_FillLevel_Definition = new ExpandedNodeId(Variables.BoilerType_FillLevelSensor_FillLevel_Definition, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_FillLevelSensor_FillLevel_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_FillLevelSensor_FillLevel_EngineeringUnits = new ExpandedNodeId(Variables.BoilerType_FillLevelSensor_FillLevel_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_FillLevelSensor_FillLevel_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_FillLevelSensor_FillLevel_EURange = new ExpandedNodeId(Variables.BoilerType_FillLevelSensor_FillLevel_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_FillLevelSensor_FillLevel_InstrumentRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_FillLevelSensor_FillLevel_InstrumentRange = new ExpandedNodeId(Variables.BoilerType_FillLevelSensor_FillLevel_InstrumentRange, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_FillLevelSensor_FillLevel_ValuePrecision Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_FillLevelSensor_FillLevel_ValuePrecision = new ExpandedNodeId(Variables.BoilerType_FillLevelSensor_FillLevel_ValuePrecision, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_FillLevelSetPoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_FillLevelSetPoint = new ExpandedNodeId(Variables.BoilerType_FillLevelSetPoint, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_Heat_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_Heat_InputArguments = new ExpandedNodeId(Variables.BoilerType_Heat_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_HeaterStatus Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_HeaterStatus = new ExpandedNodeId(Variables.BoilerType_HeaterStatus, Namespaces.Model);

        /// <summary>
        /// The identifier for the TemperatureSensorType_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType_Temperature = new ExpandedNodeId(Variables.TemperatureSensorType_Temperature, Namespaces.Model);

        /// <summary>
        /// The identifier for the TemperatureSensorType_Temperature_Definition Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType_Temperature_Definition = new ExpandedNodeId(Variables.TemperatureSensorType_Temperature_Definition, Namespaces.Model);

        /// <summary>
        /// The identifier for the TemperatureSensorType_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType_Temperature_EngineeringUnits = new ExpandedNodeId(Variables.TemperatureSensorType_Temperature_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the TemperatureSensorType_Temperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType_Temperature_EURange = new ExpandedNodeId(Variables.TemperatureSensorType_Temperature_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the TemperatureSensorType_Temperature_InstrumentRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType_Temperature_InstrumentRange = new ExpandedNodeId(Variables.TemperatureSensorType_Temperature_InstrumentRange, Namespaces.Model);

        /// <summary>
        /// The identifier for the TemperatureSensorType_Temperature_ValuePrecision Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType_Temperature_ValuePrecision = new ExpandedNodeId(Variables.TemperatureSensorType_Temperature_ValuePrecision, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_TemperatureSensor_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_TemperatureSensor_Temperature = new ExpandedNodeId(Variables.BoilerType_TemperatureSensor_Temperature, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_TemperatureSensor_Temperature_Definition Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_TemperatureSensor_Temperature_Definition = new ExpandedNodeId(Variables.BoilerType_TemperatureSensor_Temperature_Definition, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_TemperatureSensor_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_TemperatureSensor_Temperature_EngineeringUnits = new ExpandedNodeId(Variables.BoilerType_TemperatureSensor_Temperature_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_TemperatureSensor_Temperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_TemperatureSensor_Temperature_EURange = new ExpandedNodeId(Variables.BoilerType_TemperatureSensor_Temperature_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_TemperatureSensor_Temperature_InstrumentRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_TemperatureSensor_Temperature_InstrumentRange = new ExpandedNodeId(Variables.BoilerType_TemperatureSensor_Temperature_InstrumentRange, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_TemperatureSensor_Temperature_ValuePrecision Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_TemperatureSensor_Temperature_ValuePrecision = new ExpandedNodeId(Variables.BoilerType_TemperatureSensor_Temperature_ValuePrecision, Namespaces.Model);

        /// <summary>
        /// The identifier for the BoilerType_TemperatureSetPoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId BoilerType_TemperatureSetPoint = new ExpandedNodeId(Variables.BoilerType_TemperatureSetPoint, Namespaces.Model);

        /// <summary>
        /// The identifier for the MachineType_HeaterSwitch Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineType_HeaterSwitch = new ExpandedNodeId(Variables.MachineType_HeaterSwitch, Namespaces.Model);

        /// <summary>
        /// The identifier for the MachineType_TemperatureSensor_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineType_TemperatureSensor_Temperature = new ExpandedNodeId(Variables.MachineType_TemperatureSensor_Temperature, Namespaces.Model);

        /// <summary>
        /// The identifier for the MachineType_TemperatureSensor_Temperature_Definition Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineType_TemperatureSensor_Temperature_Definition = new ExpandedNodeId(Variables.MachineType_TemperatureSensor_Temperature_Definition, Namespaces.Model);

        /// <summary>
        /// The identifier for the MachineType_TemperatureSensor_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineType_TemperatureSensor_Temperature_EngineeringUnits = new ExpandedNodeId(Variables.MachineType_TemperatureSensor_Temperature_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the MachineType_TemperatureSensor_Temperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineType_TemperatureSensor_Temperature_EURange = new ExpandedNodeId(Variables.MachineType_TemperatureSensor_Temperature_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the MachineType_TemperatureSensor_Temperature_InstrumentRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineType_TemperatureSensor_Temperature_InstrumentRange = new ExpandedNodeId(Variables.MachineType_TemperatureSensor_Temperature_InstrumentRange, Namespaces.Model);

        /// <summary>
        /// The identifier for the MachineType_TemperatureSensor_Temperature_ValuePrecision Variable.
        /// </summary>
        public static readonly ExpandedNodeId MachineType_TemperatureSensor_Temperature_ValuePrecision = new ExpandedNodeId(Variables.MachineType_TemperatureSensor_Temperature_ValuePrecision, Namespaces.Model);

        /// <summary>
        /// The identifier for the CountdownStateMachineType_Value Variable.
        /// </summary>
        public static readonly ExpandedNodeId CountdownStateMachineType_Value = new ExpandedNodeId(Variables.CountdownStateMachineType_Value, Namespaces.Model);

        /// <summary>
        /// The identifier for the HeaterStatus_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterStatus_EnumStrings = new ExpandedNodeId(Variables.HeaterStatus_EnumStrings, Namespaces.Model);

        /// <summary>
        /// The identifier for the Priority_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId Priority_EnumValues = new ExpandedNodeId(Variables.Priority_EnumValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetByte_OptionSetValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetByte_OptionSetValues = new ExpandedNodeId(Variables.OptionSetByte_OptionSetValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetUInt16_OptionSetValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetUInt16_OptionSetValues = new ExpandedNodeId(Variables.OptionSetUInt16_OptionSetValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetUInt32_OptionSetValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetUInt32_OptionSetValues = new ExpandedNodeId(Variables.OptionSetUInt32_OptionSetValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetUInt64_OptionSetValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetUInt64_OptionSetValues = new ExpandedNodeId(Variables.OptionSetUInt64_OptionSetValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_ConcreteSubType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_ConcreteSubType = new ExpandedNodeId(Variables.Model_BinarySchema_ConcreteSubType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_ConcreteSubType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_ConcreteSubType = new ExpandedNodeId(Variables.Model_XmlSchema_ConcreteSubType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_ExtendedSubType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_ExtendedSubType = new ExpandedNodeId(Variables.Model_BinarySchema_ExtendedSubType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_ExtendedSubType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_ExtendedSubType = new ExpandedNodeId(Variables.Model_XmlSchema_ExtendedSubType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_AbstractBaseType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_AbstractBaseType = new ExpandedNodeId(Variables.Model_BinarySchema_AbstractBaseType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_AbstractBaseType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_AbstractBaseType = new ExpandedNodeId(Variables.Model_XmlSchema_AbstractBaseType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_AccessRights Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_AccessRights = new ExpandedNodeId(Variables.Model_BinarySchema_AccessRights, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_AccessRights Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_AccessRights = new ExpandedNodeId(Variables.Model_XmlSchema_AccessRights, Namespaces.Model);

        /// <summary>
        /// The identifier for the AccessRights_OptionSetValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId AccessRights_OptionSetValues = new ExpandedNodeId(Variables.AccessRights_OptionSetValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_OptionSetBase Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_OptionSetBase = new ExpandedNodeId(Variables.Model_BinarySchema_OptionSetBase, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_OptionSetBase Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_OptionSetBase = new ExpandedNodeId(Variables.Model_XmlSchema_OptionSetBase, Namespaces.Model);

        /// <summary>
        /// The identifier for the OptionSetBase_OptionSetValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId OptionSetBase_OptionSetValues = new ExpandedNodeId(Variables.OptionSetBase_OptionSetValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_StructureWithAbstractBaseTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_StructureWithAbstractBaseTypes = new ExpandedNodeId(Variables.Model_BinarySchema_StructureWithAbstractBaseTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_StructureWithAbstractBaseTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_StructureWithAbstractBaseTypes = new ExpandedNodeId(Variables.Model_XmlSchema_StructureWithAbstractBaseTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_StructureWithAllowSubtypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_StructureWithAllowSubtypes = new ExpandedNodeId(Variables.Model_BinarySchema_StructureWithAllowSubtypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_StructureWithAllowSubtypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_StructureWithAllowSubtypes = new ExpandedNodeId(Variables.Model_XmlSchema_StructureWithAllowSubtypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_StructureWithDerivedStructures Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_StructureWithDerivedStructures = new ExpandedNodeId(Variables.Model_BinarySchema_StructureWithDerivedStructures, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_StructureWithDerivedStructures Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_StructureWithDerivedStructures = new ExpandedNodeId(Variables.Model_XmlSchema_StructureWithDerivedStructures, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_StructureWithDifferentDataTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_StructureWithDifferentDataTypes = new ExpandedNodeId(Variables.Model_BinarySchema_StructureWithDifferentDataTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_StructureWithDifferentDataTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_StructureWithDifferentDataTypes = new ExpandedNodeId(Variables.Model_XmlSchema_StructureWithDifferentDataTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_StructureWithOptionalFields Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_StructureWithOptionalFields = new ExpandedNodeId(Variables.Model_BinarySchema_StructureWithOptionalFields, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_StructureWithOptionalFields Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_StructureWithOptionalFields = new ExpandedNodeId(Variables.Model_XmlSchema_StructureWithOptionalFields, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_UnionTest Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_UnionTest = new ExpandedNodeId(Variables.Model_BinarySchema_UnionTest, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_UnionTest Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_UnionTest = new ExpandedNodeId(Variables.Model_XmlSchema_UnionTest, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_Vector Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_Vector = new ExpandedNodeId(Variables.Model_BinarySchema_Vector, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_Vector Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_Vector = new ExpandedNodeId(Variables.Model_XmlSchema_Vector, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_WorkOrderStatusType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_WorkOrderStatusType = new ExpandedNodeId(Variables.Model_BinarySchema_WorkOrderStatusType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_WorkOrderStatusType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_WorkOrderStatusType = new ExpandedNodeId(Variables.Model_XmlSchema_WorkOrderStatusType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_BinarySchema_WorkOrderType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_BinarySchema_WorkOrderType = new ExpandedNodeId(Variables.Model_BinarySchema_WorkOrderType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Model_XmlSchema_WorkOrderType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Model_XmlSchema_WorkOrderType = new ExpandedNodeId(Variables.Model_XmlSchema_WorkOrderType, Namespaces.Model);

        /// <summary>
        /// The identifier for the OPCBinarySchema_TypeSystem_Model_BinarySchema Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCBinarySchema_TypeSystem_Model_BinarySchema = new ExpandedNodeId(Variables.OPCBinarySchema_TypeSystem_Model_BinarySchema, Namespaces.Model);

        /// <summary>
        /// The identifier for the OPCBinarySchema_TypeSystem_Model_BinarySchema_Deprecated Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCBinarySchema_TypeSystem_Model_BinarySchema_Deprecated = new ExpandedNodeId(Variables.OPCBinarySchema_TypeSystem_Model_BinarySchema_Deprecated, Namespaces.Model);

        /// <summary>
        /// The identifier for the OPCBinarySchema_TypeSystem_Model_BinarySchema_NamespaceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId OPCBinarySchema_TypeSystem_Model_BinarySchema_NamespaceUri = new ExpandedNodeId(Variables.OPCBinarySchema_TypeSystem_Model_BinarySchema_NamespaceUri, Namespaces.Model);

        /// <summary>
        /// The identifier for the XmlSchema_TypeSystem_Model_XmlSchema Variable.
        /// </summary>
        public static readonly ExpandedNodeId XmlSchema_TypeSystem_Model_XmlSchema = new ExpandedNodeId(Variables.XmlSchema_TypeSystem_Model_XmlSchema, Namespaces.Model);

        /// <summary>
        /// The identifier for the XmlSchema_TypeSystem_Model_XmlSchema_Deprecated Variable.
        /// </summary>
        public static readonly ExpandedNodeId XmlSchema_TypeSystem_Model_XmlSchema_Deprecated = new ExpandedNodeId(Variables.XmlSchema_TypeSystem_Model_XmlSchema_Deprecated, Namespaces.Model);

        /// <summary>
        /// The identifier for the XmlSchema_TypeSystem_Model_XmlSchema_NamespaceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId XmlSchema_TypeSystem_Model_XmlSchema_NamespaceUri = new ExpandedNodeId(Variables.XmlSchema_TypeSystem_Model_XmlSchema_NamespaceUri, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_BaseDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_BaseDataType = new ExpandedNodeId(Variables.Demo_Static_Arrays_BaseDataType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Boolean Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Boolean = new ExpandedNodeId(Variables.Demo_Static_Arrays_Boolean, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Byte = new ExpandedNodeId(Variables.Demo_Static_Arrays_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_ByteString = new ExpandedNodeId(Variables.Demo_Static_Arrays_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_DateTime = new ExpandedNodeId(Variables.Demo_Static_Arrays_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Double = new ExpandedNodeId(Variables.Demo_Static_Arrays_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Duration Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Duration = new ExpandedNodeId(Variables.Demo_Static_Arrays_Duration, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Enumeration Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Enumeration = new ExpandedNodeId(Variables.Demo_Static_Arrays_Enumeration, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_ExpandedNodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_ExpandedNodeId = new ExpandedNodeId(Variables.Demo_Static_Arrays_ExpandedNodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Float = new ExpandedNodeId(Variables.Demo_Static_Arrays_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Guid Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Guid = new ExpandedNodeId(Variables.Demo_Static_Arrays_Guid, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_ImagePNG Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_ImagePNG = new ExpandedNodeId(Variables.Demo_Static_Arrays_ImagePNG, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Int16 = new ExpandedNodeId(Variables.Demo_Static_Arrays_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Int32 = new ExpandedNodeId(Variables.Demo_Static_Arrays_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Int64 = new ExpandedNodeId(Variables.Demo_Static_Arrays_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Integer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Integer = new ExpandedNodeId(Variables.Demo_Static_Arrays_Integer, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_LocalizedText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_LocalizedText = new ExpandedNodeId(Variables.Demo_Static_Arrays_LocalizedText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_NodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_NodeId = new ExpandedNodeId(Variables.Demo_Static_Arrays_NodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Number Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Number = new ExpandedNodeId(Variables.Demo_Static_Arrays_Number, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_NumericRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_NumericRange = new ExpandedNodeId(Variables.Demo_Static_Arrays_NumericRange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_QualifiedName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_QualifiedName = new ExpandedNodeId(Variables.Demo_Static_Arrays_QualifiedName, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_SByte = new ExpandedNodeId(Variables.Demo_Static_Arrays_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_ServerState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_ServerState = new ExpandedNodeId(Variables.Demo_Static_Arrays_ServerState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_StatusCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_StatusCode = new ExpandedNodeId(Variables.Demo_Static_Arrays_StatusCode, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_String = new ExpandedNodeId(Variables.Demo_Static_Arrays_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Structure Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Structure = new ExpandedNodeId(Variables.Demo_Static_Arrays_Structure, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_UInt16 = new ExpandedNodeId(Variables.Demo_Static_Arrays_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_UInt32 = new ExpandedNodeId(Variables.Demo_Static_Arrays_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_UInt64 = new ExpandedNodeId(Variables.Demo_Static_Arrays_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_UInteger Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_UInteger = new ExpandedNodeId(Variables.Demo_Static_Arrays_UInteger, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_UtcTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_UtcTime = new ExpandedNodeId(Variables.Demo_Static_Arrays_UtcTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_Vector Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_Vector = new ExpandedNodeId(Variables.Demo_Static_Arrays_Vector, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_WorkOrder Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_WorkOrder = new ExpandedNodeId(Variables.Demo_Static_Arrays_WorkOrder, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Arrays_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Arrays_XmlElement = new ExpandedNodeId(Variables.Demo_Static_Arrays_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_Boolean Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_Boolean = new ExpandedNodeId(Variables.Demo_Static_Matrix_Boolean, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_Byte = new ExpandedNodeId(Variables.Demo_Static_Matrix_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_ByteString = new ExpandedNodeId(Variables.Demo_Static_Matrix_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_DateTime = new ExpandedNodeId(Variables.Demo_Static_Matrix_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_Double = new ExpandedNodeId(Variables.Demo_Static_Matrix_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_ExpandedNodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_ExpandedNodeId = new ExpandedNodeId(Variables.Demo_Static_Matrix_ExpandedNodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_Float = new ExpandedNodeId(Variables.Demo_Static_Matrix_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_Guid Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_Guid = new ExpandedNodeId(Variables.Demo_Static_Matrix_Guid, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_Int16 = new ExpandedNodeId(Variables.Demo_Static_Matrix_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_Int32 = new ExpandedNodeId(Variables.Demo_Static_Matrix_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_Int64 = new ExpandedNodeId(Variables.Demo_Static_Matrix_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_LocalizedText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_LocalizedText = new ExpandedNodeId(Variables.Demo_Static_Matrix_LocalizedText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_NodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_NodeId = new ExpandedNodeId(Variables.Demo_Static_Matrix_NodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_QualifiedName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_QualifiedName = new ExpandedNodeId(Variables.Demo_Static_Matrix_QualifiedName, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_SByte = new ExpandedNodeId(Variables.Demo_Static_Matrix_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_StatusCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_StatusCode = new ExpandedNodeId(Variables.Demo_Static_Matrix_StatusCode, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_String = new ExpandedNodeId(Variables.Demo_Static_Matrix_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_UInt16 = new ExpandedNodeId(Variables.Demo_Static_Matrix_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_UInt32 = new ExpandedNodeId(Variables.Demo_Static_Matrix_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_UInt64 = new ExpandedNodeId(Variables.Demo_Static_Matrix_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_Vector Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_Vector = new ExpandedNodeId(Variables.Demo_Static_Matrix_Vector, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Matrix_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Matrix_XmlElement = new ExpandedNodeId(Variables.Demo_Static_Matrix_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_BaseDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_BaseDataType = new ExpandedNodeId(Variables.Demo_Static_Scalar_BaseDataType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Boolean Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Boolean = new ExpandedNodeId(Variables.Demo_Static_Scalar_Boolean, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Byte = new ExpandedNodeId(Variables.Demo_Static_Scalar_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_ByteString = new ExpandedNodeId(Variables.Demo_Static_Scalar_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_DateTime = new ExpandedNodeId(Variables.Demo_Static_Scalar_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Double = new ExpandedNodeId(Variables.Demo_Static_Scalar_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Duration Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Duration = new ExpandedNodeId(Variables.Demo_Static_Scalar_Duration, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_ExpandedNodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_ExpandedNodeId = new ExpandedNodeId(Variables.Demo_Static_Scalar_ExpandedNodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Float = new ExpandedNodeId(Variables.Demo_Static_Scalar_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Guid Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Guid = new ExpandedNodeId(Variables.Demo_Static_Scalar_Guid, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_HeaterStatus Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_HeaterStatus = new ExpandedNodeId(Variables.Demo_Static_Scalar_HeaterStatus, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_ImagePNG Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_ImagePNG = new ExpandedNodeId(Variables.Demo_Static_Scalar_ImagePNG, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Int16 = new ExpandedNodeId(Variables.Demo_Static_Scalar_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Int32 = new ExpandedNodeId(Variables.Demo_Static_Scalar_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Int64 = new ExpandedNodeId(Variables.Demo_Static_Scalar_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Integer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Integer = new ExpandedNodeId(Variables.Demo_Static_Scalar_Integer, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_LocalizedText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_LocalizedText = new ExpandedNodeId(Variables.Demo_Static_Scalar_LocalizedText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_NodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_NodeId = new ExpandedNodeId(Variables.Demo_Static_Scalar_NodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Number Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Number = new ExpandedNodeId(Variables.Demo_Static_Scalar_Number, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_NumericRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_NumericRange = new ExpandedNodeId(Variables.Demo_Static_Scalar_NumericRange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_OptionSets_OptionSet Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_OptionSets_OptionSet = new ExpandedNodeId(Variables.Demo_Static_Scalar_OptionSets_OptionSet, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_OptionSets_OptionSetBase Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_OptionSets_OptionSetBase = new ExpandedNodeId(Variables.Demo_Static_Scalar_OptionSets_OptionSetBase, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_OptionSets_OptionSetByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_OptionSets_OptionSetByte = new ExpandedNodeId(Variables.Demo_Static_Scalar_OptionSets_OptionSetByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_OptionSets_OptionSetUInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_OptionSets_OptionSetUInt16 = new ExpandedNodeId(Variables.Demo_Static_Scalar_OptionSets_OptionSetUInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_OptionSets_OptionSetUInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_OptionSets_OptionSetUInt32 = new ExpandedNodeId(Variables.Demo_Static_Scalar_OptionSets_OptionSetUInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_OptionSets_OptionSetUInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_OptionSets_OptionSetUInt64 = new ExpandedNodeId(Variables.Demo_Static_Scalar_OptionSets_OptionSetUInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Priority Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Priority = new ExpandedNodeId(Variables.Demo_Static_Scalar_Priority, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_QualifiedName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_QualifiedName = new ExpandedNodeId(Variables.Demo_Static_Scalar_QualifiedName, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_SByte = new ExpandedNodeId(Variables.Demo_Static_Scalar_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_ServerState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_ServerState = new ExpandedNodeId(Variables.Demo_Static_Scalar_ServerState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_StatusCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_StatusCode = new ExpandedNodeId(Variables.Demo_Static_Scalar_StatusCode, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_String = new ExpandedNodeId(Variables.Demo_Static_Scalar_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures_AbstractBaseTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures_AbstractBaseTypes = new ExpandedNodeId(Variables.Demo_Static_Scalar_Structures_AbstractBaseTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures_DerivedStructures Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures_DerivedStructures = new ExpandedNodeId(Variables.Demo_Static_Scalar_Structures_DerivedStructures, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures_DifferentDataTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures_DifferentDataTypes = new ExpandedNodeId(Variables.Demo_Static_Scalar_Structures_DifferentDataTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures_OptionalFields Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures_OptionalFields = new ExpandedNodeId(Variables.Demo_Static_Scalar_Structures_OptionalFields, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures_Structure Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures_Structure = new ExpandedNodeId(Variables.Demo_Static_Scalar_Structures_Structure, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures_StructureWithAbstractBaseTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures_StructureWithAbstractBaseTypes = new ExpandedNodeId(Variables.Demo_Static_Scalar_Structures_StructureWithAbstractBaseTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures_StructureWithAllowSubtypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures_StructureWithAllowSubtypes = new ExpandedNodeId(Variables.Demo_Static_Scalar_Structures_StructureWithAllowSubtypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures_Union Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures_Union = new ExpandedNodeId(Variables.Demo_Static_Scalar_Structures_Union, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures_Vector Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures_Vector = new ExpandedNodeId(Variables.Demo_Static_Scalar_Structures_Vector, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_Structures_WorkOrder Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_Structures_WorkOrder = new ExpandedNodeId(Variables.Demo_Static_Scalar_Structures_WorkOrder, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_UInt16 = new ExpandedNodeId(Variables.Demo_Static_Scalar_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_UInt32 = new ExpandedNodeId(Variables.Demo_Static_Scalar_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_UInt64 = new ExpandedNodeId(Variables.Demo_Static_Scalar_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_UInteger Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_UInteger = new ExpandedNodeId(Variables.Demo_Static_Scalar_UInteger, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_UtcTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_UtcTime = new ExpandedNodeId(Variables.Demo_Static_Scalar_UtcTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Static_Scalar_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Static_Scalar_XmlElement = new ExpandedNodeId(Variables.Demo_Static_Scalar_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_Boolean Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_Boolean = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_Boolean, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_Byte = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_ByteString = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_DateTime = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_Double = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_ExpandedNodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_ExpandedNodeId = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_ExpandedNodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_Float = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_Guid Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_Guid = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_Guid, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_Int16 = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_Int32 = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_Int64 = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_LocalizedText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_LocalizedText = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_LocalizedText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_NodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_NodeId = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_NodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_QualifiedName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_QualifiedName = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_QualifiedName, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_SByte = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_StatusCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_StatusCode = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_StatusCode, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_String = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_UInt16 = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_UInt32 = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_UInt64 = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Arrays_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Arrays_XmlElement = new ExpandedNodeId(Variables.Demo_Dynamic_Arrays_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_Boolean Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_Boolean = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_Boolean, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_Byte = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_ByteString = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_DateTime = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_Double = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_ExpandedNodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_ExpandedNodeId = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_ExpandedNodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_Float = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_Guid Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_Guid = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_Guid, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_ImageGIF Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_ImageGIF = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_ImageGIF, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_Int16 = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_Int32 = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_Int64 = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_LocalizedText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_LocalizedText = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_LocalizedText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_NodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_NodeId = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_NodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_QualifiedName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_QualifiedName = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_QualifiedName, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_Quality_DynamicValue Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_Quality_DynamicValue = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_Quality_DynamicValue, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_Quality_StaticValue Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_Quality_StaticValue = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_Quality_StaticValue, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_SByte = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_StatusCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_StatusCode = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_StatusCode, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_String = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_UInt16 = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_UInt32 = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_UInt64 = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Dynamic_Scalar_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Dynamic_Scalar_XmlElement = new ExpandedNodeId(Variables.Demo_Dynamic_Scalar_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_History_ByteWithHistory Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_History_ByteWithHistory = new ExpandedNodeId(Variables.Demo_History_ByteWithHistory, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_History_DataLoggerActive Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_History_DataLoggerActive = new ExpandedNodeId(Variables.Demo_History_DataLoggerActive, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_History_DoubleWithHistory Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_History_DoubleWithHistory = new ExpandedNodeId(Variables.Demo_History_DoubleWithHistory, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_History_Historian_1 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_History_Historian_1 = new ExpandedNodeId(Variables.Demo_History_Historian_1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_History_Historian_2 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_History_Historian_2 = new ExpandedNodeId(Variables.Demo_History_Historian_2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_History_Historian_3 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_History_Historian_3 = new ExpandedNodeId(Variables.Demo_History_Historian_3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_History_Historian_4 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_History_Historian_4 = new ExpandedNodeId(Variables.Demo_History_Historian_4, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_EnumTest_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_EnumTest_InputArguments = new ExpandedNodeId(Variables.Demo_Method_EnumTest_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_EnumTest_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_EnumTest_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_EnumTest_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_Multiply_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_Multiply_InputArguments = new ExpandedNodeId(Variables.Demo_Method_Multiply_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_Multiply_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_Multiply_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_Multiply_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetBaseTest_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetBaseTest_InputArguments = new ExpandedNodeId(Variables.Demo_Method_OptionSetBaseTest_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetBaseTest_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetBaseTest_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_OptionSetBaseTest_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetByteTest_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetByteTest_InputArguments = new ExpandedNodeId(Variables.Demo_Method_OptionSetByteTest_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetByteTest_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetByteTest_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_OptionSetByteTest_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetUInt16Test_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetUInt16Test_InputArguments = new ExpandedNodeId(Variables.Demo_Method_OptionSetUInt16Test_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetUInt16Test_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetUInt16Test_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_OptionSetUInt16Test_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetUInt32Test_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetUInt32Test_InputArguments = new ExpandedNodeId(Variables.Demo_Method_OptionSetUInt32Test_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetUInt32Test_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetUInt32Test_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_OptionSetUInt32Test_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetUInt64Test_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetUInt64Test_InputArguments = new ExpandedNodeId(Variables.Demo_Method_OptionSetUInt64Test_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_OptionSetUInt64Test_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_OptionSetUInt64Test_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_OptionSetUInt64Test_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_StructureWithAbstractBaseTypesTest_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_StructureWithAbstractBaseTypesTest_InputArguments = new ExpandedNodeId(Variables.Demo_Method_StructureWithAbstractBaseTypesTest_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_StructureWithAbstractBaseTypesTest_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_StructureWithAbstractBaseTypesTest_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_StructureWithAbstractBaseTypesTest_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_StructureWithDerivedStructuresTest_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_StructureWithDerivedStructuresTest_InputArguments = new ExpandedNodeId(Variables.Demo_Method_StructureWithDerivedStructuresTest_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_StructureWithDerivedStructuresTest_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_StructureWithDerivedStructuresTest_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_StructureWithDerivedStructuresTest_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_StructureWithDifferentDataTypesTest_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_StructureWithDifferentDataTypesTest_InputArguments = new ExpandedNodeId(Variables.Demo_Method_StructureWithDifferentDataTypesTest_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_StructureWithDifferentDataTypesTest_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_StructureWithDifferentDataTypesTest_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_StructureWithDifferentDataTypesTest_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_VectorAdd_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_VectorAdd_InputArguments = new ExpandedNodeId(Variables.Demo_Method_VectorAdd_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Method_VectorAdd_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Method_VectorAdd_OutputArguments = new ExpandedNodeId(Variables.Demo_Method_VectorAdd_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events_Machine_HeaterSwitch Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events_Machine_HeaterSwitch = new ExpandedNodeId(Variables.Demo_Events_Machine_HeaterSwitch, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events_Machine_TemperatureSensor_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events_Machine_TemperatureSensor_Temperature = new ExpandedNodeId(Variables.Demo_Events_Machine_TemperatureSensor_Temperature, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events_Machine_TemperatureSensor_Temperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events_Machine_TemperatureSensor_Temperature_EURange = new ExpandedNodeId(Variables.Demo_Events_Machine_TemperatureSensor_Temperature_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events_Trigger_BaseEvent Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events_Trigger_BaseEvent = new ExpandedNodeId(Variables.Demo_Events_Trigger_BaseEvent, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events_Trigger_SampleEvent Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events_Trigger_SampleEvent = new ExpandedNodeId(Variables.Demo_Events_Trigger_SampleEvent, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Events_TriggerMultipleEvents_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Events_TriggerMultipleEvents_InputArguments = new ExpandedNodeId(Variables.Demo_Events_TriggerMultipleEvents_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_All_All_RO Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_All_All_RO = new ExpandedNodeId(Variables.Demo_AccessRights_Access_All_All_RO, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_All_All_RW Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_All_All_RW = new ExpandedNodeId(Variables.Demo_AccessRights_Access_All_All_RW, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_All_All_WO Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_All_All_WO = new ExpandedNodeId(Variables.Demo_AccessRights_Access_All_All_WO, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_John_All_RO_John_RW Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_John_All_RO_John_RW = new ExpandedNodeId(Variables.Demo_AccessRights_Access_John_All_RO_John_RW, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_John_All_WO_John_RW Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_John_All_WO_John_RW = new ExpandedNodeId(Variables.Demo_AccessRights_Access_John_All_WO_John_RW, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_John_John_RO Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_John_John_RO = new ExpandedNodeId(Variables.Demo_AccessRights_Access_John_John_RO, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_John_John_RW Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_John_John_RW = new ExpandedNodeId(Variables.Demo_AccessRights_Access_John_John_RW, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_John_John_WO Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_John_John_WO = new ExpandedNodeId(Variables.Demo_AccessRights_Access_John_John_WO, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_Operators_All_RO_Operators_RW Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_Operators_All_RO_Operators_RW = new ExpandedNodeId(Variables.Demo_AccessRights_Access_Operators_All_RO_Operators_RW, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_Operators_All_WO_Operators_RW Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_Operators_All_WO_Operators_RW = new ExpandedNodeId(Variables.Demo_AccessRights_Access_Operators_All_WO_Operators_RW, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_Operators_Operators_RO Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_Operators_Operators_RO = new ExpandedNodeId(Variables.Demo_AccessRights_Access_Operators_Operators_RO, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_Operators_Operators_RW Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_Operators_Operators_RW = new ExpandedNodeId(Variables.Demo_AccessRights_Access_Operators_Operators_RW, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_AccessRights_Access_Operators_Operators_WO Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_AccessRights_Access_Operators_Operators_WO = new ExpandedNodeId(Variables.Demo_AccessRights_Access_Operators_Operators_WO, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_DynamicNodes_NodeVersion Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_DynamicNodes_NodeVersion = new ExpandedNodeId(Variables.Demo_DynamicNodes_NodeVersion, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_Fill_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_Fill_InputArguments = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_Fill_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel_EngineeringUnits = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel_EURange = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_FillLevelSensor_FillLevel_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_FillLevelSetPoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_FillLevelSetPoint = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_FillLevelSetPoint, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_Heat_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_Heat_InputArguments = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_Heat_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_HeaterStatus Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_HeaterStatus = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_HeaterStatus, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature_EngineeringUnits = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature_EURange = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_TemperatureSensor_Temperature_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_BoilerDemo_Boiler1_TemperatureSetPoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_BoilerDemo_Boiler1_TemperatureSetPoint = new ExpandedNodeId(Variables.Demo_BoilerDemo_Boiler1_TemperatureSetPoint, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Events_TriggerNode01 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Events_TriggerNode01 = new ExpandedNodeId(Variables.Demo_CTT_Events_TriggerNode01, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Events_TriggerNode02 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Events_TriggerNode02 = new ExpandedNodeId(Variables.Demo_CTT_Events_TriggerNode02, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Methods_MethodI_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Methods_MethodI_InputArguments = new ExpandedNodeId(Variables.Demo_CTT_Methods_MethodI_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Methods_MethodIO_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Methods_MethodIO_InputArguments = new ExpandedNodeId(Variables.Demo_CTT_Methods_MethodIO_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Methods_MethodIO_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Methods_MethodIO_OutputArguments = new ExpandedNodeId(Variables.Demo_CTT_Methods_MethodIO_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Methods_MethodO_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Methods_MethodO_OutputArguments = new ExpandedNodeId(Variables.Demo_CTT_Methods_MethodO_OutputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_NodeClasses_Variable Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_NodeClasses_Variable = new ExpandedNodeId(Variables.Demo_CTT_NodeClasses_Variable, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_NodeManagement_RootNode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_NodeManagement_RootNode = new ExpandedNodeId(Variables.Demo_CTT_NodeManagement_RootNode, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences1_ReferencedNode1 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences1_ReferencedNode1 = new ExpandedNodeId(Variables.Demo_CTT_References_Has3ForwardReferences1_ReferencedNode1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences1_ReferencedNode2 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences1_ReferencedNode2 = new ExpandedNodeId(Variables.Demo_CTT_References_Has3ForwardReferences1_ReferencedNode2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences1_ReferencedNode3 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences1_ReferencedNode3 = new ExpandedNodeId(Variables.Demo_CTT_References_Has3ForwardReferences1_ReferencedNode3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences2_BaseDataVariable Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences2_BaseDataVariable = new ExpandedNodeId(Variables.Demo_CTT_References_Has3ForwardReferences2_BaseDataVariable, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences2_Property Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences2_Property = new ExpandedNodeId(Variables.Demo_CTT_References_Has3ForwardReferences2_Property, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences4_ReferencedNode1 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences4_ReferencedNode1 = new ExpandedNodeId(Variables.Demo_CTT_References_Has3ForwardReferences4_ReferencedNode1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences4_ReferencedNode2 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences4_ReferencedNode2 = new ExpandedNodeId(Variables.Demo_CTT_References_Has3ForwardReferences4_ReferencedNode2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences4_ReferencedNode3 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences4_ReferencedNode3 = new ExpandedNodeId(Variables.Demo_CTT_References_Has3ForwardReferences4_ReferencedNode3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_Has3ForwardReferences5_ReferencedNode2 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_Has3ForwardReferences5_ReferencedNode2 = new ExpandedNodeId(Variables.Demo_CTT_References_Has3ForwardReferences5_ReferencedNode2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_HasInverseAndForwardReferences_ReferencedNode Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_HasInverseAndForwardReferences_ReferencedNode = new ExpandedNodeId(Variables.Demo_CTT_References_HasInverseAndForwardReferences_ReferencedNode, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode1 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode1 = new ExpandedNodeId(Variables.Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode2 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode2 = new ExpandedNodeId(Variables.Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode3 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode3 = new ExpandedNodeId(Variables.Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode4 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode4 = new ExpandedNodeId(Variables.Demo_CTT_References_HasReferencesOfAReferenceTypeAndSubType_ReferencedNode4, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_SecurityAccess_AccessLevel_CurrentRead Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_SecurityAccess_AccessLevel_CurrentRead = new ExpandedNodeId(Variables.Demo_CTT_SecurityAccess_AccessLevel_CurrentRead, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_SecurityAccess_AccessLevel_CurrentRead_NotCurrentWrite Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_SecurityAccess_AccessLevel_CurrentRead_NotCurrentWrite = new ExpandedNodeId(Variables.Demo_CTT_SecurityAccess_AccessLevel_CurrentRead_NotCurrentWrite, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_SecurityAccess_AccessLevel_CurrentRead_NotUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_SecurityAccess_AccessLevel_CurrentRead_NotUser = new ExpandedNodeId(Variables.Demo_CTT_SecurityAccess_AccessLevel_CurrentRead_NotUser, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite = new ExpandedNodeId(Variables.Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite_NotCurrentRead Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite_NotCurrentRead = new ExpandedNodeId(Variables.Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite_NotCurrentRead, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite_NotUser Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite_NotUser = new ExpandedNodeId(Variables.Demo_CTT_SecurityAccess_AccessLevel_CurrentWrite_NotUser, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_Bool Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_Bool = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_Bool, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_Byte = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_ByteString = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_DateTime = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_Double = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_Duration Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_Duration = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_Duration, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_Float = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_Guid Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_Guid = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_Guid, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_Int16 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_Int32 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_Int64 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_LocalizedText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_LocalizedText = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_LocalizedText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_QualifiedName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_QualifiedName = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_QualifiedName, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_SByte = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_String = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_UInt16 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_UInt32 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_UInt64 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_Variant Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_Variant = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_Variant, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Arrays_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Arrays_XmlElement = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Arrays_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Bool Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Bool = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Bool, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Byte = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_ByteString = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_DateTime = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Double = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Float = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Guid Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Guid = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Guid, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int16 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int32 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int64 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_LocalizedText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_LocalizedText = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_LocalizedText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_QualifiedName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_QualifiedName = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_QualifiedName, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_SByte = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_String = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt16 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt32 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt64 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Variant Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Variant = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_Variant, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_XmlElement = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_MultiDimensionalArrays_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Bool Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Bool = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Bool, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Byte = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_ByteString = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_DateTime = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Decimal Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Decimal = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Decimal, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Double = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Duration Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Duration = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Duration, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Enumeration Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Enumeration = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Enumeration, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Float = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Guid Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Guid = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Guid, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Image Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Image = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Image, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_ImageBMP Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_ImageBMP = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_ImageBMP, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_ImageGIF Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_ImageGIF = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_ImageGIF, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_ImageJPG Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_ImageJPG = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_ImageJPG, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_ImagePNG Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_ImagePNG = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_ImagePNG, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Int16 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Int32 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Int64 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Integer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Integer = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Integer, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_LocaleId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_LocaleId = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_LocaleId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_LocalizedText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_LocalizedText = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_LocalizedText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_NodeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_NodeId = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_NodeId, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Number Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Number = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Number, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_QualifiedName Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_QualifiedName = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_QualifiedName, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_SByte = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_String = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_UInt16 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_UInt32 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_UInt64 = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_UInteger Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_UInteger = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_UInteger, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_UtcTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_UtcTime = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_UtcTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_Variant Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_Variant = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_Variant, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_All_Profiles_Scalar_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_All_Profiles_Scalar_XmlElement = new ExpandedNodeId(Variables.Demo_CTT_Static_All_Profiles_Scalar_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Byte = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Byte_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Byte_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Byte_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Double = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Double_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Double_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Double_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Float = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Float_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Float_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Float_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Int16 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Int16_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Int16_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Int16_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Int32 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Int32_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Int32_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Int32_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Int64 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Int64_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Int64_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Int64_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_SByte = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_SByte_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_SByte_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_SByte_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_UInt16 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_UInt16_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_UInt16_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_UInt16_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_UInt32 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_UInt32_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_UInt32_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_UInt32_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_UInt64 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_UInt64_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_UInt64_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_UInt64_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits_EngineeringUnits = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_VariableWithEngineeringUnits_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange_InstrumentRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange_InstrumentRange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_VariableWithInstrumentRange_InstrumentRange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Double = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Double_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Double_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Double_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Float = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Float_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Float_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Float_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int16 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int16_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int16_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int16_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int32 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int32_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int32_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_Int32_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt16 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt16_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt16_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt16_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt32 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt32_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt32_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_AnalogType_Arrays_UInt32_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_AxisScaleType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_AxisScaleType = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_AxisScaleType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_EngineeringUnits = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_Title Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_Title = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_Title, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_XAxisDefinition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_XAxisDefinition = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_XAxisDefinition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_YAxisDefinition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_YAxisDefinition = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_YAxisDefinition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_ZAxisDefinition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_ZAxisDefinition = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_CubeItemType_ZAxisDefinition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_AxisScaleType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_AxisScaleType = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_AxisScaleType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_EngineeringUnits = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_Title Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_Title = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_Title, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_XAxisDefinition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_XAxisDefinition = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_XAxisDefinition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_YAxisDefinition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_YAxisDefinition = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_ImageItemType_YAxisDefinition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_AxisDefinition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_AxisDefinition = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_AxisDefinition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_AxisScaleType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_AxisScaleType = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_AxisScaleType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_EngineeringUnits = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_Title Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_Title = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_NDimensionArrayItemType_Title, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_AxisScaleType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_AxisScaleType = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_AxisScaleType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_EngineeringUnits = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_Title Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_Title = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_Title, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_XAxisDefinition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_XAxisDefinition = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_XYArrayItemType_XAxisDefinition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_AxisScaleType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_AxisScaleType = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_AxisScaleType, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_EngineeringUnits = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_EngineeringUnits, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_EURange = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_EURange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_Title Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_Title = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_Title, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_XAxisDefinition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_XAxisDefinition = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_ArrayItemType_YArrayItemType_XAxisDefinition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_Byte = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_Byte_Definition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_Byte_Definition = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_Byte_Definition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_DateTime = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_DateTime_ValuePrecision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_DateTime_ValuePrecision = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_DateTime_ValuePrecision, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_Double = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_Double_ValuePrecision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_Double_ValuePrecision = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_Double_ValuePrecision, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_Float = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_Float_Definition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_Float_Definition = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_Float_Definition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_Float_ValuePrecision Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_Float_ValuePrecision = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_Float_ValuePrecision, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_Int16 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_Int32 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_Int64 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_SByte = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_String = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_UInt16 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_UInt32 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DataItem_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DataItem_UInt64 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DataItem_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete1 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete1 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete1_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete1_EnumStrings = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete1_EnumStrings, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete2 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete2 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete2_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete2_EnumStrings = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete2_EnumStrings, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete3 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete3 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete3_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete3_EnumStrings = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete3_EnumStrings, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete4 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete4 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete4, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete4_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete4_EnumStrings = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete4_EnumStrings, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete5 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete5 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete5, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete5_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete5_EnumStrings = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_MultiStateDiscrete5_EnumStrings, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1_FalseState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1_FalseState = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1_FalseState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1_TrueState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1_TrueState = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete1_TrueState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2_FalseState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2_FalseState = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2_FalseState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2_TrueState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2_TrueState = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete2_TrueState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3_FalseState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3_FalseState = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3_FalseState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3_TrueState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3_TrueState = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete3_TrueState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4_FalseState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4_FalseState = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4_FalseState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4_TrueState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4_TrueState = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete4_TrueState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5_FalseState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5_FalseState = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5_FalseState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5_TrueState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5_TrueState = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_DiscreteType_TwoStateDiscrete5_TrueState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte_EnumValues = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte_EnumValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte_ValueAsText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte_ValueAsText = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Byte_ValueAsText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16_EnumValues = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16_EnumValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16_ValueAsText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16_ValueAsText = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int16_ValueAsText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32_EnumValues = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32_EnumValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32_ValueAsText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32_ValueAsText = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int32_ValueAsText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64_EnumValues = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64_EnumValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64_ValueAsText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64_ValueAsText = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_Int64_ValueAsText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte_EnumValues = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte_EnumValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte_ValueAsText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte_ValueAsText = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_SByte_ValueAsText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16_EnumValues = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16_EnumValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16_ValueAsText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16_ValueAsText = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt16_ValueAsText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32_EnumValues = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32_EnumValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32_ValueAsText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32_ValueAsText = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt32_ValueAsText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64 = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64_EnumValues = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64_EnumValues, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64_ValueAsText Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64_ValueAsText = new ExpandedNodeId(Variables.Demo_CTT_Static_DA_Profile_MultiStateValueDiscreteType_UInt64_ValueAsText, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_None Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_None = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_None, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_ReadOnly Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_ReadOnly = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_ReadOnly, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_WriteOnly Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_WriteOnly = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_AccessRights_AccessLevel_WriteOnly, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_None Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_None = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_None, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_ReadOnly Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_ReadOnly = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_ReadOnly, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_WriteOnly Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_WriteOnly = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_AccessRights_UserAccessLevel_WriteOnly, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_BooleanOne Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_BooleanOne = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_BooleanOne, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_BooleanTwo Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_BooleanTwo = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_BooleanTwo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_DoubleOne Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_DoubleOne = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_DoubleOne, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_DoubleTwo Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_DoubleTwo = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_DoubleTwo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_FloatOne Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_FloatOne = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_FloatOne, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_FloatTwo Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_FloatTwo = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_FloatTwo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_IntegerOne Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_IntegerOne = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_IntegerOne, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_IntegerTwo Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_IntegerTwo = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_IntegerTwo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_NonNumericOne Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_NonNumericOne = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_NonNumericOne, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_NonNumericTwo Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_NonNumericTwo = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_NonNumericTwo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataBooleanOne Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataBooleanOne = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataBooleanOne, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataBooleanTwo Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataBooleanTwo = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataBooleanTwo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataDoubleOne Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataDoubleOne = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataDoubleOne, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataDoubleTwo Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataDoubleTwo = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataDoubleTwo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataFloatOne Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataFloatOne = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataFloatOne, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataFloatTwo Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataFloatTwo = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataFloatTwo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataIntegerOne Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataIntegerOne = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataIntegerOne, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataIntegerTwo Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataIntegerTwo = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataIntegerTwo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataNonNumericOne Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataNonNumericOne = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataNonNumericOne, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataNonNumericTwo Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataNonNumericTwo = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Aggregates_StartOfBadDataNonNumericTwo, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Bool Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Bool = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Bool, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Bool2D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Bool2D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Bool2D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Byte = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Byte2D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Byte2D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Byte2D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_ByteString = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_ByteString2D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_ByteString2D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_ByteString2D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_DateTime = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_DateTime2D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_DateTime2D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_DateTime2D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Double = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Double2D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Double2D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Double2D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Float = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Float2D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Float2D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Float2D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Int16 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Int162D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Int162D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Int162D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Int32 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Int322D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Int322D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Int322D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Int64 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_Int642D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_Int642D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_Int642D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_SByte = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_SByte2D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_SByte2D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_SByte2D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_String = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_String2D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_String2D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_String2D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_UInt16 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_UInt162D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_UInt162D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_UInt162D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_UInt32 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_UInt322D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_UInt322D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_UInt322D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_UInt64 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_UInt642D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_UInt642D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_UInt642D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_XmlElement = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Arrays_XmlElement2D Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Arrays_XmlElement2D = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Arrays_XmlElement2D, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_NodeDoesNotSupportHistory Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_NodeDoesNotSupportHistory = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_NodeDoesNotSupportHistory, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_NodeDoesNotSupportSourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_NodeDoesNotSupportSourceTimestamp = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_NodeDoesNotSupportSourceTimestamp, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_Bool Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_Bool = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_Bool, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_Byte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_Byte = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_Byte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_ByteString Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_ByteString = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_ByteString, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_DateTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_DateTime = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_DateTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_Double Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_Double = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_Double, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_Float Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_Float = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_Float, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_Int16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_Int16 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_Int16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_Int32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_Int32 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_Int32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_Int64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_Int64 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_Int64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_SByte Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_SByte = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_SByte, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_String Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_String = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_String, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_UInt16 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_UInt16 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_UInt16, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_UInt32 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_UInt32 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_UInt32, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_UInt64 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_UInt64 = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_UInt64, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_CTT_Static_HA_Profile_Scalar_XmlElement Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_CTT_Static_HA_Profile_Scalar_XmlElement = new ExpandedNodeId(Variables.Demo_CTT_Static_HA_Profile_Scalar_XmlElement, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_UnicodeTest_LongDescription Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_UnicodeTest_LongDescription = new ExpandedNodeId(Variables.Demo_UnicodeTest_LongDescription, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_UnicodeTest_MultiLingualDescription Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_UnicodeTest_MultiLingualDescription = new ExpandedNodeId(Variables.Demo_UnicodeTest_MultiLingualDescription, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_UnicodeTest_SpecialCharactersInDescription Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_UnicodeTest_SpecialCharactersInDescription = new ExpandedNodeId(Variables.Demo_UnicodeTest_SpecialCharactersInDescription, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Icon_Icon Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Icon_Icon = new ExpandedNodeId(Variables.Demo_Icon_Icon, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_Images_Dynamic_SetAnimationSpeed_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_Images_Dynamic_SetAnimationSpeed_InputArguments = new ExpandedNodeId(Variables.Demo_Images_Dynamic_SetAnimationSpeed_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder_WorkOrderVariable Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder_WorkOrderVariable = new ExpandedNodeId(Variables.Demo_WorkOrder_WorkOrderVariable, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder_WorkOrderVariable_AssetID Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder_WorkOrderVariable_AssetID = new ExpandedNodeId(Variables.Demo_WorkOrder_WorkOrderVariable_AssetID, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder_WorkOrderVariable_ID Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder_WorkOrderVariable_ID = new ExpandedNodeId(Variables.Demo_WorkOrder_WorkOrderVariable_ID, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder_WorkOrderVariable_StartTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder_WorkOrderVariable_StartTime = new ExpandedNodeId(Variables.Demo_WorkOrder_WorkOrderVariable_StartTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder_WorkOrderVariable_StatusComments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder_WorkOrderVariable_StatusComments = new ExpandedNodeId(Variables.Demo_WorkOrder_WorkOrderVariable_StatusComments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder_WorkOrderVariable2 Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder_WorkOrderVariable2 = new ExpandedNodeId(Variables.Demo_WorkOrder_WorkOrderVariable2, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder_WorkOrderVariable2_AssetID Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder_WorkOrderVariable2_AssetID = new ExpandedNodeId(Variables.Demo_WorkOrder_WorkOrderVariable2_AssetID, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder_WorkOrderVariable2_ID Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder_WorkOrderVariable2_ID = new ExpandedNodeId(Variables.Demo_WorkOrder_WorkOrderVariable2_ID, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder_WorkOrderVariable2_StartTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder_WorkOrderVariable2_StartTime = new ExpandedNodeId(Variables.Demo_WorkOrder_WorkOrderVariable2_StartTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_WorkOrder_WorkOrderVariable2_StatusComments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_WorkOrder_WorkOrderVariable2_StatusComments = new ExpandedNodeId(Variables.Demo_WorkOrder_WorkOrderVariable2_StatusComments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_AutoDelete Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_AutoDelete = new ExpandedNodeId(Variables.Demo_StateMachines_Program_AutoDelete, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_CurrentState = new ExpandedNodeId(Variables.Demo_StateMachines_Program_CurrentState, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_CurrentState_Id = new ExpandedNodeId(Variables.Demo_StateMachines_Program_CurrentState_Id, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_CurrentState_Number Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_CurrentState_Number = new ExpandedNodeId(Variables.Demo_StateMachines_Program_CurrentState_Number, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_Deletable Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_Deletable = new ExpandedNodeId(Variables.Demo_StateMachines_Program_Deletable, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_LastTransition Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_LastTransition = new ExpandedNodeId(Variables.Demo_StateMachines_Program_LastTransition, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_LastTransition_Id = new ExpandedNodeId(Variables.Demo_StateMachines_Program_LastTransition_Id, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_LastTransition_Number Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_LastTransition_Number = new ExpandedNodeId(Variables.Demo_StateMachines_Program_LastTransition_Number, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_LastTransition_TransitionTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_LastTransition_TransitionTime = new ExpandedNodeId(Variables.Demo_StateMachines_Program_LastTransition_TransitionTime, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_RecycleCount Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_RecycleCount = new ExpandedNodeId(Variables.Demo_StateMachines_Program_RecycleCount, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_StateMachines_Program_Value Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_StateMachines_Program_Value = new ExpandedNodeId(Variables.Demo_StateMachines_Program_Value, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_SpecialVariables_SlowAsynchronousAPI Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_SpecialVariables_SlowAsynchronousAPI = new ExpandedNodeId(Variables.Demo_SpecialVariables_SlowAsynchronousAPI, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_SpecialVariables_SlowSynchronousAPI Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_SpecialVariables_SlowSynchronousAPI = new ExpandedNodeId(Variables.Demo_SpecialVariables_SlowSynchronousAPI, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_SetSimulationSpeed_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_SetSimulationSpeed_InputArguments = new ExpandedNodeId(Variables.Demo_SetSimulationSpeed_InputArguments, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_SimulationActive Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_SimulationActive = new ExpandedNodeId(Variables.Demo_SimulationActive, Namespaces.Model);

        /// <summary>
        /// The identifier for the Demo_SimulationSpeed Variable.
        /// </summary>
        public static readonly ExpandedNodeId Demo_SimulationSpeed = new ExpandedNodeId(Variables.Demo_SimulationSpeed, Namespaces.Model);

        /// <summary>
        /// The identifier for the Namespaces_http___www_unifiedautomation_com_DemoServer__IsNamespaceSubset Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___www_unifiedautomation_com_DemoServer__IsNamespaceSubset = new ExpandedNodeId(Variables.Namespaces_http___www_unifiedautomation_com_DemoServer__IsNamespaceSubset, Namespaces.Model);

        /// <summary>
        /// The identifier for the Namespaces_http___www_unifiedautomation_com_DemoServer__NamespacePublicationDate Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___www_unifiedautomation_com_DemoServer__NamespacePublicationDate = new ExpandedNodeId(Variables.Namespaces_http___www_unifiedautomation_com_DemoServer__NamespacePublicationDate, Namespaces.Model);

        /// <summary>
        /// The identifier for the Namespaces_http___www_unifiedautomation_com_DemoServer__NamespaceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___www_unifiedautomation_com_DemoServer__NamespaceUri = new ExpandedNodeId(Variables.Namespaces_http___www_unifiedautomation_com_DemoServer__NamespaceUri, Namespaces.Model);

        /// <summary>
        /// The identifier for the Namespaces_http___www_unifiedautomation_com_DemoServer__NamespaceVersion Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___www_unifiedautomation_com_DemoServer__NamespaceVersion = new ExpandedNodeId(Variables.Namespaces_http___www_unifiedautomation_com_DemoServer__NamespaceVersion, Namespaces.Model);

        /// <summary>
        /// The identifier for the Namespaces_http___www_unifiedautomation_com_DemoServer__StaticNodeIdTypes Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___www_unifiedautomation_com_DemoServer__StaticNodeIdTypes = new ExpandedNodeId(Variables.Namespaces_http___www_unifiedautomation_com_DemoServer__StaticNodeIdTypes, Namespaces.Model);

        /// <summary>
        /// The identifier for the Namespaces_http___www_unifiedautomation_com_DemoServer__StaticNumericNodeIdRange Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___www_unifiedautomation_com_DemoServer__StaticNumericNodeIdRange = new ExpandedNodeId(Variables.Namespaces_http___www_unifiedautomation_com_DemoServer__StaticNumericNodeIdRange, Namespaces.Model);

        /// <summary>
        /// The identifier for the Namespaces_http___www_unifiedautomation_com_DemoServer__StaticStringNodeIdPattern Variable.
        /// </summary>
        public static readonly ExpandedNodeId Namespaces_http___www_unifiedautomation_com_DemoServer__StaticStringNodeIdPattern = new ExpandedNodeId(Variables.Namespaces_http___www_unifiedautomation_com_DemoServer__StaticStringNodeIdPattern, Namespaces.Model);

    }
    #endregion

    #region VariableType Node Identifiers
    /// <summary>
    /// A class that declares ExpandedNodeIds for all VariableType in the Model.
    /// </summary>
    /// <remarks>
    /// Call ExpandedNodeId.ToNodeId to use these constants.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.7.0")]
    public static partial class VariableTypeIds
    {
        /// <summary>
        /// The identifier for the WorkOrderVariableType VariableType.
        /// </summary>
        public static readonly ExpandedNodeId WorkOrderVariableType = new ExpandedNodeId(VariableTypes.WorkOrderVariableType, Namespaces.Model);

    }
    #endregion

    #region BrowseName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model.
    /// </summary>
    public static partial class BrowseNames
    {
        /// <summary>
        /// The BrowseName for the AbstractBaseType component.
        /// </summary>
        public const string AbstractBaseType = "AbstractBaseType";
        /// <summary>
        /// The BrowseName for the AbstractBaseTypes component.
        /// </summary>
        public const string AbstractBaseTypes = "AbstractBaseTypes";
        /// <summary>
        /// The BrowseName for the AccessLevel_CurrentRead component.
        /// </summary>
        public const string AccessLevel_CurrentRead = "AccessLevel_CurrentRead";
        /// <summary>
        /// The BrowseName for the AccessLevel_CurrentRead_NotCurrentWrite component.
        /// </summary>
        public const string AccessLevel_CurrentRead_NotCurrentWrite = "AccessLevel_CurrentRead_NotCurrentWrite";
        /// <summary>
        /// The BrowseName for the AccessLevel_CurrentRead_NotUser component.
        /// </summary>
        public const string AccessLevel_CurrentRead_NotUser = "AccessLevel_CurrentRead_NotUser";
        /// <summary>
        /// The BrowseName for the AccessLevel_CurrentWrite component.
        /// </summary>
        public const string AccessLevel_CurrentWrite = "AccessLevel_CurrentWrite";
        /// <summary>
        /// The BrowseName for the AccessLevel_CurrentWrite_NotCurrentRead component.
        /// </summary>
        public const string AccessLevel_CurrentWrite_NotCurrentRead = "AccessLevel_CurrentWrite_NotCurrentRead";
        /// <summary>
        /// The BrowseName for the AccessLevel_CurrentWrite_NotUser component.
        /// </summary>
        public const string AccessLevel_CurrentWrite_NotUser = "AccessLevel_CurrentWrite_NotUser";
        /// <summary>
        /// The BrowseName for the AccessLevel_None component.
        /// </summary>
        public const string AccessLevel_None = "AccessLevel_None";
        /// <summary>
        /// The BrowseName for the AccessLevel_ReadOnly component.
        /// </summary>
        public const string AccessLevel_ReadOnly = "AccessLevel_ReadOnly";
        /// <summary>
        /// The BrowseName for the AccessLevel_WriteOnly component.
        /// </summary>
        public const string AccessLevel_WriteOnly = "AccessLevel_WriteOnly";
        /// <summary>
        /// The BrowseName for the AccessRights component.
        /// </summary>
        public const string AccessRights = "AccessRights";
        /// <summary>
        /// The BrowseName for the Access_All component.
        /// </summary>
        public const string Access_All = "Access_All";
        /// <summary>
        /// The BrowseName for the Access_John component.
        /// </summary>
        public const string Access_John = "Access_John";
        /// <summary>
        /// The BrowseName for the Access_Operators component.
        /// </summary>
        public const string Access_Operators = "Access_Operators";
        /// <summary>
        /// The BrowseName for the Aggregates component.
        /// </summary>
        public const string Aggregates = "Aggregates";
        /// <summary>
        /// The BrowseName for the All_Profiles component.
        /// </summary>
        public const string All_Profiles = "All_Profiles";
        /// <summary>
        /// The BrowseName for the All_RO component.
        /// </summary>
        public const string All_RO = "All_RO";
        /// <summary>
        /// The BrowseName for the All_RO_John_RW component.
        /// </summary>
        public const string All_RO_John_RW = "All_RO_John_RW";
        /// <summary>
        /// The BrowseName for the All_RO_Operators_RW component.
        /// </summary>
        public const string All_RO_Operators_RW = "All_RO_Operators_RW";
        /// <summary>
        /// The BrowseName for the All_RW component.
        /// </summary>
        public const string All_RW = "All_RW";
        /// <summary>
        /// The BrowseName for the All_WO component.
        /// </summary>
        public const string All_WO = "All_WO";
        /// <summary>
        /// The BrowseName for the All_WO_John_RW component.
        /// </summary>
        public const string All_WO_John_RW = "All_WO_John_RW";
        /// <summary>
        /// The BrowseName for the All_WO_Operators_RW component.
        /// </summary>
        public const string All_WO_Operators_RW = "All_WO_Operators_RW";
        /// <summary>
        /// The BrowseName for the AnalogType component.
        /// </summary>
        public const string AnalogType = "AnalogType";
        /// <summary>
        /// The BrowseName for the AnalogType_Arrays component.
        /// </summary>
        public const string AnalogType_Arrays = "AnalogType_Arrays";
        /// <summary>
        /// The BrowseName for the ArrayItemType component.
        /// </summary>
        public const string ArrayItemType = "ArrayItemType";
        /// <summary>
        /// The BrowseName for the Arrays component.
        /// </summary>
        public const string Arrays = "Arrays";
        /// <summary>
        /// The BrowseName for the AssetID component.
        /// </summary>
        public const string AssetID = "AssetID";
        /// <summary>
        /// The BrowseName for the BaseDataType component.
        /// </summary>
        public const string BaseDataType = "BaseDataType";
        /// <summary>
        /// The BrowseName for the BaseDataVariable component.
        /// </summary>
        public const string BaseDataVariable = "BaseDataVariable";
        /// <summary>
        /// The BrowseName for the Boiler1 component.
        /// </summary>
        public const string Boiler1 = "Boiler1";
        /// <summary>
        /// The BrowseName for the BoilerDemo component.
        /// </summary>
        public const string BoilerDemo = "BoilerDemo";
        /// <summary>
        /// The BrowseName for the BoilerType component.
        /// </summary>
        public const string BoilerType = "BoilerType";
        /// <summary>
        /// The BrowseName for the Bool component.
        /// </summary>
        public const string Bool = "Bool";
        /// <summary>
        /// The BrowseName for the Bool2D component.
        /// </summary>
        public const string Bool2D = "Bool2D";
        /// <summary>
        /// The BrowseName for the Boolean component.
        /// </summary>
        public const string Boolean = "Boolean";
        /// <summary>
        /// The BrowseName for the BooleanOne component.
        /// </summary>
        public const string BooleanOne = "BooleanOne";
        /// <summary>
        /// The BrowseName for the BooleanTwo component.
        /// </summary>
        public const string BooleanTwo = "BooleanTwo";
        /// <summary>
        /// The BrowseName for the Browse_All component.
        /// </summary>
        public const string Browse_All = "Browse_All";
        /// <summary>
        /// The BrowseName for the Browse_John component.
        /// </summary>
        public const string Browse_John = "Browse_John";
        /// <summary>
        /// The BrowseName for the Browse_Operators component.
        /// </summary>
        public const string Browse_Operators = "Browse_Operators";
        /// <summary>
        /// The BrowseName for the Byte component.
        /// </summary>
        public const string Byte = "Byte";
        /// <summary>
        /// The BrowseName for the Byte2D component.
        /// </summary>
        public const string Byte2D = "Byte2D";
        /// <summary>
        /// The BrowseName for the ByteString component.
        /// </summary>
        public const string ByteString = "ByteString";
        /// <summary>
        /// The BrowseName for the ByteString2D component.
        /// </summary>
        public const string ByteString2D = "ByteString2D";
        /// <summary>
        /// The BrowseName for the ByteWithHistory component.
        /// </summary>
        public const string ByteWithHistory = "ByteWithHistory";
        /// <summary>
        /// The BrowseName for the CTT component.
        /// </summary>
        public const string CTT = "CTT";
        /// <summary>
        /// The BrowseName for the ConcreteSubType component.
        /// </summary>
        public const string ConcreteSubType = "ConcreteSubType";
        /// <summary>
        /// The BrowseName for the CountdownStateMachineType component.
        /// </summary>
        public const string CountdownStateMachineType = "CountdownStateMachineType";
        /// <summary>
        /// The BrowseName for the CreateDynamicNode component.
        /// </summary>
        public const string CreateDynamicNode = "CreateDynamicNode";
        /// <summary>
        /// The BrowseName for the CubeItemType component.
        /// </summary>
        public const string CubeItemType = "CubeItemType";
        /// <summary>
        /// The BrowseName for the DA_Profile component.
        /// </summary>
        public const string DA_Profile = "DA_Profile";
        /// <summary>
        /// The BrowseName for the DataItem component.
        /// </summary>
        public const string DataItem = "DataItem";
        /// <summary>
        /// The BrowseName for the DataLoggerActive component.
        /// </summary>
        public const string DataLoggerActive = "DataLoggerActive";
        /// <summary>
        /// The BrowseName for the DateTime component.
        /// </summary>
        public const string DateTime = "DateTime";
        /// <summary>
        /// The BrowseName for the DateTime2D component.
        /// </summary>
        public const string DateTime2D = "DateTime2D";
        /// <summary>
        /// The BrowseName for the Decimal component.
        /// </summary>
        public const string Decimal = "Decimal";
        /// <summary>
        /// The BrowseName for the DeleteDynamicNode component.
        /// </summary>
        public const string DeleteDynamicNode = "DeleteDynamicNode";
        /// <summary>
        /// The BrowseName for the Demo component.
        /// </summary>
        public const string Demo = "Demo";
        /// <summary>
        /// The BrowseName for the DerivedStructures component.
        /// </summary>
        public const string DerivedStructures = "DerivedStructures";
        /// <summary>
        /// The BrowseName for the Die_hei\303\237e_Zypernsonne_qu\303\244lte_Max_und_Victoria_ja_b\303\266se_auf_dem_Weg_bis_zur_K\303\274ste component.
        /// </summary>
        public const string Die_heisse_Zypernsonne_quaelte_Max_und_Victoria_ja_boese_auf_dem_Weg_bis_zur_Kueste = "Die_hei\ud303\ud237e_Zypernsonne_qu\ud303\ud244lte_Max_und_Victoria_ja_b\ud303\ud266se_auf_dem_Weg_bis_zur_K\ud303\ud274ste";
        /// <summary>
        /// The BrowseName for the DifferentDataTypes component.
        /// </summary>
        public const string DifferentDataTypes = "DifferentDataTypes";
        /// <summary>
        /// The BrowseName for the DiscreteType component.
        /// </summary>
        public const string DiscreteType = "DiscreteType";
        /// <summary>
        /// The BrowseName for the DoSomethingAfter10s component.
        /// </summary>
        public const string DoSomethingAfter10s = "DoSomethingAfter10s";
        /// <summary>
        /// The BrowseName for the Double component.
        /// </summary>
        public const string Double = "Double";
        /// <summary>
        /// The BrowseName for the Double2D component.
        /// </summary>
        public const string Double2D = "Double2D";
        /// <summary>
        /// The BrowseName for the DoubleOne component.
        /// </summary>
        public const string DoubleOne = "DoubleOne";
        /// <summary>
        /// The BrowseName for the DoubleTwo component.
        /// </summary>
        public const string DoubleTwo = "DoubleTwo";
        /// <summary>
        /// The BrowseName for the DoubleWithHistory component.
        /// </summary>
        public const string DoubleWithHistory = "DoubleWithHistory";
        /// <summary>
        /// The BrowseName for the Duration component.
        /// </summary>
        public const string Duration = "Duration";
        /// <summary>
        /// The BrowseName for the Dynamic component.
        /// </summary>
        public const string Dynamic = "Dynamic";
        /// <summary>
        /// The BrowseName for the DynamicNodes component.
        /// </summary>
        public const string DynamicNodes = "DynamicNodes";
        /// <summary>
        /// The BrowseName for the EnumTest component.
        /// </summary>
        public const string EnumTest = "EnumTest";
        /// <summary>
        /// The BrowseName for the Enumeration component.
        /// </summary>
        public const string Enumeration = "Enumeration";
        /// <summary>
        /// The BrowseName for the Events component.
        /// </summary>
        public const string Events = "Events";
        /// <summary>
        /// The BrowseName for the ExpandedNodeId component.
        /// </summary>
        public const string ExpandedNodeId = "ExpandedNodeId";
        /// <summary>
        /// The BrowseName for the ExtendedSubType component.
        /// </summary>
        public const string ExtendedSubType = "ExtendedSubType";
        /// <summary>
        /// The BrowseName for the Files component.
        /// </summary>
        public const string Files = "Files";
        /// <summary>
        /// The BrowseName for the Fill component.
        /// </summary>
        public const string Fill = "Fill";
        /// <summary>
        /// The BrowseName for the FillLevel component.
        /// </summary>
        public const string FillLevel = "FillLevel";
        /// <summary>
        /// The BrowseName for the FillLevelSensor component.
        /// </summary>
        public const string FillLevelSensor = "FillLevelSensor";
        /// <summary>
        /// The BrowseName for the FillLevelSensorType component.
        /// </summary>
        public const string FillLevelSensorType = "FillLevelSensorType";
        /// <summary>
        /// The BrowseName for the FillLevelSetPoint component.
        /// </summary>
        public const string FillLevelSetPoint = "FillLevelSetPoint";
        /// <summary>
        /// The BrowseName for the Float component.
        /// </summary>
        public const string Float = "Float";
        /// <summary>
        /// The BrowseName for the Float2D component.
        /// </summary>
        public const string Float2D = "Float2D";
        /// <summary>
        /// The BrowseName for the FloatOne component.
        /// </summary>
        public const string FloatOne = "FloatOne";
        /// <summary>
        /// The BrowseName for the FloatTwo component.
        /// </summary>
        public const string FloatTwo = "FloatTwo";
        /// <summary>
        /// The BrowseName for the Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern component.
        /// </summary>
        public const string Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern = "Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern";
        /// <summary>
        /// The BrowseName for the Guid component.
        /// </summary>
        public const string Guid = "Guid";
        /// <summary>
        /// The BrowseName for the HA_Profile component.
        /// </summary>
        public const string HA_Profile = "HA_Profile";
        /// <summary>
        /// The BrowseName for the Has3ForwardReferences1 component.
        /// </summary>
        public const string Has3ForwardReferences1 = "Has3ForwardReferences1";
        /// <summary>
        /// The BrowseName for the Has3ForwardReferences2 component.
        /// </summary>
        public const string Has3ForwardReferences2 = "Has3ForwardReferences2";
        /// <summary>
        /// The BrowseName for the Has3ForwardReferences3 component.
        /// </summary>
        public const string Has3ForwardReferences3 = "Has3ForwardReferences3";
        /// <summary>
        /// The BrowseName for the Has3ForwardReferences4 component.
        /// </summary>
        public const string Has3ForwardReferences4 = "Has3ForwardReferences4";
        /// <summary>
        /// The BrowseName for the Has3ForwardReferences5 component.
        /// </summary>
        public const string Has3ForwardReferences5 = "Has3ForwardReferences5";
        /// <summary>
        /// The BrowseName for the Has3InverseReferences component.
        /// </summary>
        public const string Has3InverseReferences = "Has3InverseReferences";
        /// <summary>
        /// The BrowseName for the HasInverseAndForwardReferences component.
        /// </summary>
        public const string HasInverseAndForwardReferences = "HasInverseAndForwardReferences";
        /// <summary>
        /// The BrowseName for the HasReferencesOfAReferenceTypeAndSubType component.
        /// </summary>
        public const string HasReferencesOfAReferenceTypeAndSubType = "HasReferencesOfAReferenceTypeAndSubType";
        /// <summary>
        /// The BrowseName for the Heat component.
        /// </summary>
        public const string Heat = "Heat";
        /// <summary>
        /// The BrowseName for the HeaterStatus component.
        /// </summary>
        public const string HeaterStatus = "HeaterStatus";
        /// <summary>
        /// The BrowseName for the HeaterSwitch component.
        /// </summary>
        public const string HeaterSwitch = "HeaterSwitch";
        /// <summary>
        /// The BrowseName for the Historian_1 component.
        /// </summary>
        public const string Historian_1 = "Historian_1";
        /// <summary>
        /// The BrowseName for the Historian_2 component.
        /// </summary>
        public const string Historian_2 = "Historian_2";
        /// <summary>
        /// The BrowseName for the Historian_3 component.
        /// </summary>
        public const string Historian_3 = "Historian_3";
        /// <summary>
        /// The BrowseName for the Historian_4 component.
        /// </summary>
        public const string Historian_4 = "Historian_4";
        /// <summary>
        /// The BrowseName for the History component.
        /// </summary>
        public const string History = "History";
        /// <summary>
        /// The BrowseName for the ID component.
        /// </summary>
        public const string ID = "ID";
        /// <summary>
        /// The BrowseName for the Icon component.
        /// </summary>
        public const string Icon = "Icon";
        /// <summary>
        /// The BrowseName for the Image component.
        /// </summary>
        public const string Image = "Image";
        /// <summary>
        /// The BrowseName for the ImageBMP component.
        /// </summary>
        public const string ImageBMP = "ImageBMP";
        /// <summary>
        /// The BrowseName for the ImageGIF component.
        /// </summary>
        public const string ImageGIF = "ImageGIF";
        /// <summary>
        /// The BrowseName for the ImageItemType component.
        /// </summary>
        public const string ImageItemType = "ImageItemType";
        /// <summary>
        /// The BrowseName for the ImageJPG component.
        /// </summary>
        public const string ImageJPG = "ImageJPG";
        /// <summary>
        /// The BrowseName for the ImagePNG component.
        /// </summary>
        public const string ImagePNG = "ImagePNG";
        /// <summary>
        /// The BrowseName for the Images component.
        /// </summary>
        public const string Images = "Images";
        /// <summary>
        /// The BrowseName for the Int16 component.
        /// </summary>
        public const string Int16 = "Int16";
        /// <summary>
        /// The BrowseName for the Int162D component.
        /// </summary>
        public const string Int162D = "Int162D";
        /// <summary>
        /// The BrowseName for the Int32 component.
        /// </summary>
        public const string Int32 = "Int32";
        /// <summary>
        /// The BrowseName for the Int322D component.
        /// </summary>
        public const string Int322D = "Int322D";
        /// <summary>
        /// The BrowseName for the Int64 component.
        /// </summary>
        public const string Int64 = "Int64";
        /// <summary>
        /// The BrowseName for the Int642D component.
        /// </summary>
        public const string Int642D = "Int642D";
        /// <summary>
        /// The BrowseName for the Integer component.
        /// </summary>
        public const string Integer = "Integer";
        /// <summary>
        /// The BrowseName for the IntegerOne component.
        /// </summary>
        public const string IntegerOne = "IntegerOne";
        /// <summary>
        /// The BrowseName for the IntegerTwo component.
        /// </summary>
        public const string IntegerTwo = "IntegerTwo";
        /// <summary>
        /// The BrowseName for the John_RO component.
        /// </summary>
        public const string John_RO = "John_RO";
        /// <summary>
        /// The BrowseName for the John_RW component.
        /// </summary>
        public const string John_RW = "John_RW";
        /// <summary>
        /// The BrowseName for the John_WO component.
        /// </summary>
        public const string John_WO = "John_WO";
        /// <summary>
        /// The BrowseName for the LocaleId component.
        /// </summary>
        public const string LocaleId = "LocaleId";
        /// <summary>
        /// The BrowseName for the LocalizedText component.
        /// </summary>
        public const string LocalizedText = "LocalizedText";
        /// <summary>
        /// The BrowseName for the LongDescription component.
        /// </summary>
        public const string LongDescription = "LongDescription";
        /// <summary>
        /// The BrowseName for the Machine component.
        /// </summary>
        public const string Machine = "Machine";
        /// <summary>
        /// The BrowseName for the MachineType component.
        /// </summary>
        public const string MachineType = "MachineType";
        /// <summary>
        /// The BrowseName for the Massfolder_Dynamic component.
        /// </summary>
        public const string Massfolder_Dynamic = "Massfolder_Dynamic";
        /// <summary>
        /// The BrowseName for the Massfolder_Static component.
        /// </summary>
        public const string Massfolder_Static = "Massfolder_Static";
        /// <summary>
        /// The BrowseName for the Matrix component.
        /// </summary>
        public const string Matrix = "Matrix";
        /// <summary>
        /// The BrowseName for the Method component.
        /// </summary>
        public const string Method = "Method";
        /// <summary>
        /// The BrowseName for the Method1 component.
        /// </summary>
        public const string Method1 = "Method1";
        /// <summary>
        /// The BrowseName for the Method2 component.
        /// </summary>
        public const string Method2 = "Method2";
        /// <summary>
        /// The BrowseName for the Method3 component.
        /// </summary>
        public const string Method3 = "Method3";
        /// <summary>
        /// The BrowseName for the MethodI component.
        /// </summary>
        public const string MethodI = "MethodI";
        /// <summary>
        /// The BrowseName for the MethodIO component.
        /// </summary>
        public const string MethodIO = "MethodIO";
        /// <summary>
        /// The BrowseName for the MethodNoArgs component.
        /// </summary>
        public const string MethodNoArgs = "MethodNoArgs";
        /// <summary>
        /// The BrowseName for the MethodO component.
        /// </summary>
        public const string MethodO = "MethodO";
        /// <summary>
        /// The BrowseName for the Methods component.
        /// </summary>
        public const string Methods = "Methods";
        /// <summary>
        /// The BrowseName for the Model component.
        /// </summary>
        public const string Model_XmlSchema = "Model";
        /// <summary>
        /// The BrowseName for the MultiDimensionalArrays component.
        /// </summary>
        public const string MultiDimensionalArrays = "MultiDimensionalArrays";
        /// <summary>
        /// The BrowseName for the MultiLingualDescription component.
        /// </summary>
        public const string MultiLingualDescription = "MultiLingualDescription";
        /// <summary>
        /// The BrowseName for the MultiStateDiscrete1 component.
        /// </summary>
        public const string MultiStateDiscrete1 = "MultiStateDiscrete1";
        /// <summary>
        /// The BrowseName for the MultiStateDiscrete2 component.
        /// </summary>
        public const string MultiStateDiscrete2 = "MultiStateDiscrete2";
        /// <summary>
        /// The BrowseName for the MultiStateDiscrete3 component.
        /// </summary>
        public const string MultiStateDiscrete3 = "MultiStateDiscrete3";
        /// <summary>
        /// The BrowseName for the MultiStateDiscrete4 component.
        /// </summary>
        public const string MultiStateDiscrete4 = "MultiStateDiscrete4";
        /// <summary>
        /// The BrowseName for the MultiStateDiscrete5 component.
        /// </summary>
        public const string MultiStateDiscrete5 = "MultiStateDiscrete5";
        /// <summary>
        /// The BrowseName for the MultiStateValueDiscreteType component.
        /// </summary>
        public const string MultiStateValueDiscreteType = "MultiStateValueDiscreteType";
        /// <summary>
        /// The BrowseName for the Multiply component.
        /// </summary>
        public const string Multiply = "Multiply";
        /// <summary>
        /// The BrowseName for the NDimensionArrayItemType component.
        /// </summary>
        public const string NDimensionArrayItemType = "NDimensionArrayItemType";
        /// <summary>
        /// The BrowseName for the NodeClasses component.
        /// </summary>
        public const string NodeClasses = "NodeClasses";
        /// <summary>
        /// The BrowseName for the NodeDoesNotSupportHistory component.
        /// </summary>
        public const string NodeDoesNotSupportHistory = "NodeDoesNotSupportHistory";
        /// <summary>
        /// The BrowseName for the NodeDoesNotSupportSourceTimestamp component.
        /// </summary>
        public const string NodeDoesNotSupportSourceTimestamp = "NodeDoesNotSupportSourceTimestamp";
        /// <summary>
        /// The BrowseName for the NodeId component.
        /// </summary>
        public const string NodeId = "NodeId";
        /// <summary>
        /// The BrowseName for the NodeManagement component.
        /// </summary>
        public const string NodeManagement = "NodeManagement";
        /// <summary>
        /// The BrowseName for the NonNumericOne component.
        /// </summary>
        public const string NonNumericOne = "NonNumericOne";
        /// <summary>
        /// The BrowseName for the NonNumericTwo component.
        /// </summary>
        public const string NonNumericTwo = "NonNumericTwo";
        /// <summary>
        /// The BrowseName for the Number component.
        /// </summary>
        public const string Number = "Number";
        /// <summary>
        /// The BrowseName for the NumericRange component.
        /// </summary>
        public const string NumericRange = "NumericRange";
        /// <summary>
        /// The BrowseName for the Object component.
        /// </summary>
        public const string Object = "Object";
        /// <summary>
        /// The BrowseName for the Operators_RO component.
        /// </summary>
        public const string Operators_RO = "Operators_RO";
        /// <summary>
        /// The BrowseName for the Operators_RW component.
        /// </summary>
        public const string Operators_RW = "Operators_RW";
        /// <summary>
        /// The BrowseName for the Operators_WO component.
        /// </summary>
        public const string Operators_WO = "Operators_WO";
        /// <summary>
        /// The BrowseName for the OptionSet component.
        /// </summary>
        public const string OptionSet = "OptionSet";
        /// <summary>
        /// The BrowseName for the OptionSetBase component.
        /// </summary>
        public const string OptionSetBase = "OptionSetBase";
        /// <summary>
        /// The BrowseName for the OptionSetBaseArray component.
        /// </summary>
        public const string OptionSetBaseArray = "OptionSetBaseArray";
        /// <summary>
        /// The BrowseName for the OptionSetBaseTest component.
        /// </summary>
        public const string OptionSetBaseTest = "OptionSetBaseTest";
        /// <summary>
        /// The BrowseName for the OptionSetByte component.
        /// </summary>
        public const string OptionSetByte = "OptionSetByte";
        /// <summary>
        /// The BrowseName for the OptionSetByteTest component.
        /// </summary>
        public const string OptionSetByteTest = "OptionSetByteTest";
        /// <summary>
        /// The BrowseName for the OptionSetUInt16 component.
        /// </summary>
        public const string OptionSetUInt16 = "OptionSetUInt16";
        /// <summary>
        /// The BrowseName for the OptionSetUInt16Array component.
        /// </summary>
        public const string OptionSetUInt16Array = "OptionSetUInt16Array";
        /// <summary>
        /// The BrowseName for the OptionSetUInt16Test component.
        /// </summary>
        public const string OptionSetUInt16Test = "OptionSetUInt16Test";
        /// <summary>
        /// The BrowseName for the OptionSetUInt32 component.
        /// </summary>
        public const string OptionSetUInt32 = "OptionSetUInt32";
        /// <summary>
        /// The BrowseName for the OptionSetUInt32Test component.
        /// </summary>
        public const string OptionSetUInt32Test = "OptionSetUInt32Test";
        /// <summary>
        /// The BrowseName for the OptionSetUInt64 component.
        /// </summary>
        public const string OptionSetUInt64 = "OptionSetUInt64";
        /// <summary>
        /// The BrowseName for the OptionSetUInt64Test component.
        /// </summary>
        public const string OptionSetUInt64Test = "OptionSetUInt64Test";
        /// <summary>
        /// The BrowseName for the OptionSets component.
        /// </summary>
        public const string OptionSets = "OptionSets";
        /// <summary>
        /// The BrowseName for the OptionalFields component.
        /// </summary>
        public const string OptionalFields = "OptionalFields";
        /// <summary>
        /// The BrowseName for the Paths component.
        /// </summary>
        public const string Paths = "Paths";
        /// <summary>
        /// The BrowseName for the Priority component.
        /// </summary>
        public const string Priority = "Priority";
        /// <summary>
        /// The BrowseName for the Program component.
        /// </summary>
        public const string Program = "Program";
        /// <summary>
        /// The BrowseName for the Property component.
        /// </summary>
        public const string Property = "Property";
        /// <summary>
        /// The BrowseName for the QualifiedName component.
        /// </summary>
        public const string QualifiedName = "QualifiedName";
        /// <summary>
        /// The BrowseName for the Quality_DynamicValue component.
        /// </summary>
        public const string Quality_DynamicValue = "Quality_DynamicValue";
        /// <summary>
        /// The BrowseName for the Quality_StaticValue component.
        /// </summary>
        public const string Quality_StaticValue = "Quality_StaticValue";
        /// <summary>
        /// The BrowseName for the ReferencedNode component.
        /// </summary>
        public const string ReferencedNode = "ReferencedNode";
        /// <summary>
        /// The BrowseName for the ReferencedNode1 component.
        /// </summary>
        public const string ReferencedNode1 = "ReferencedNode1";
        /// <summary>
        /// The BrowseName for the ReferencedNode2 component.
        /// </summary>
        public const string ReferencedNode2 = "ReferencedNode2";
        /// <summary>
        /// The BrowseName for the ReferencedNode3 component.
        /// </summary>
        public const string ReferencedNode3 = "ReferencedNode3";
        /// <summary>
        /// The BrowseName for the ReferencedNode4 component.
        /// </summary>
        public const string ReferencedNode4 = "ReferencedNode4";
        /// <summary>
        /// The BrowseName for the References component.
        /// </summary>
        public const string References = "References";
        /// <summary>
        /// The BrowseName for the RootNode component.
        /// </summary>
        public const string RootNode = "RootNode";
        /// <summary>
        /// The BrowseName for the SByte component.
        /// </summary>
        public const string SByte = "SByte";
        /// <summary>
        /// The BrowseName for the SByte2D component.
        /// </summary>
        public const string SByte2D = "SByte2D";
        /// <summary>
        /// The BrowseName for the SampleEventNotifier component.
        /// </summary>
        public const string SampleEventNotifier = "SampleEventNotifier";
        /// <summary>
        /// The BrowseName for the SampleEventType component.
        /// </summary>
        public const string SampleEventType = "SampleEventType";
        /// <summary>
        /// The BrowseName for the Scalar component.
        /// </summary>
        public const string Scalar = "Scalar";
        /// <summary>
        /// The BrowseName for the SecurityAccess component.
        /// </summary>
        public const string SecurityAccess = "SecurityAccess";
        /// <summary>
        /// The BrowseName for the ServerState component.
        /// </summary>
        public const string ServerState = "ServerState";
        /// <summary>
        /// The BrowseName for the SetAnimationSpeed component.
        /// </summary>
        public const string SetAnimationSpeed = "SetAnimationSpeed";
        /// <summary>
        /// The BrowseName for the SetSimulationSpeed component.
        /// </summary>
        public const string SetSimulationSpeed = "SetSimulationSpeed";
        /// <summary>
        /// The BrowseName for the SimulationActive component.
        /// </summary>
        public const string SimulationActive = "SimulationActive";
        /// <summary>
        /// The BrowseName for the SimulationSpeed component.
        /// </summary>
        public const string SimulationSpeed = "SimulationSpeed";
        /// <summary>
        /// The BrowseName for the SlowAsynchronousAPI component.
        /// </summary>
        public const string SlowAsynchronousAPI = "SlowAsynchronousAPI";
        /// <summary>
        /// The BrowseName for the SlowSynchronousAPI component.
        /// </summary>
        public const string SlowSynchronousAPI = "SlowSynchronousAPI";
        /// <summary>
        /// The BrowseName for the SpecialCharactersInDescription component.
        /// </summary>
        public const string SpecialCharactersInDescription = "SpecialCharactersInDescription";
        /// <summary>
        /// The BrowseName for the SpecialVariables component.
        /// </summary>
        public const string SpecialVariables = "SpecialVariables";
        /// <summary>
        /// The BrowseName for the StartLogging component.
        /// </summary>
        public const string StartLogging = "StartLogging";
        /// <summary>
        /// The BrowseName for the StartOfBadDataBooleanOne component.
        /// </summary>
        public const string StartOfBadDataBooleanOne = "StartOfBadDataBooleanOne";
        /// <summary>
        /// The BrowseName for the StartOfBadDataBooleanTwo component.
        /// </summary>
        public const string StartOfBadDataBooleanTwo = "StartOfBadDataBooleanTwo";
        /// <summary>
        /// The BrowseName for the StartOfBadDataDoubleOne component.
        /// </summary>
        public const string StartOfBadDataDoubleOne = "StartOfBadDataDoubleOne";
        /// <summary>
        /// The BrowseName for the StartOfBadDataDoubleTwo component.
        /// </summary>
        public const string StartOfBadDataDoubleTwo = "StartOfBadDataDoubleTwo";
        /// <summary>
        /// The BrowseName for the StartOfBadDataFloatOne component.
        /// </summary>
        public const string StartOfBadDataFloatOne = "StartOfBadDataFloatOne";
        /// <summary>
        /// The BrowseName for the StartOfBadDataFloatTwo component.
        /// </summary>
        public const string StartOfBadDataFloatTwo = "StartOfBadDataFloatTwo";
        /// <summary>
        /// The BrowseName for the StartOfBadDataIntegerOne component.
        /// </summary>
        public const string StartOfBadDataIntegerOne = "StartOfBadDataIntegerOne";
        /// <summary>
        /// The BrowseName for the StartOfBadDataIntegerTwo component.
        /// </summary>
        public const string StartOfBadDataIntegerTwo = "StartOfBadDataIntegerTwo";
        /// <summary>
        /// The BrowseName for the StartOfBadDataNonNumericOne component.
        /// </summary>
        public const string StartOfBadDataNonNumericOne = "StartOfBadDataNonNumericOne";
        /// <summary>
        /// The BrowseName for the StartOfBadDataNonNumericTwo component.
        /// </summary>
        public const string StartOfBadDataNonNumericTwo = "StartOfBadDataNonNumericTwo";
        /// <summary>
        /// The BrowseName for the StartSimulation component.
        /// </summary>
        public const string StartSimulation = "StartSimulation";
        /// <summary>
        /// The BrowseName for the StartTime component.
        /// </summary>
        public const string StartTime = "StartTime";
        /// <summary>
        /// The BrowseName for the StateMachines component.
        /// </summary>
        public const string StateMachines = "StateMachines";
        /// <summary>
        /// The BrowseName for the Static component.
        /// </summary>
        public const string Static = "Static";
        /// <summary>
        /// The BrowseName for the StatusCode component.
        /// </summary>
        public const string StatusCode = "StatusCode";
        /// <summary>
        /// The BrowseName for the StatusComments component.
        /// </summary>
        public const string StatusComments = "StatusComments";
        /// <summary>
        /// The BrowseName for the StopLogging component.
        /// </summary>
        public const string StopLogging = "StopLogging";
        /// <summary>
        /// The BrowseName for the StopSimulation component.
        /// </summary>
        public const string StopSimulation = "StopSimulation";
        /// <summary>
        /// The BrowseName for the String component.
        /// </summary>
        public const string String = "String";
        /// <summary>
        /// The BrowseName for the String2D component.
        /// </summary>
        public const string String2D = "String2D";
        /// <summary>
        /// The BrowseName for the Structure component.
        /// </summary>
        public const string Structure = "Structure";
        /// <summary>
        /// The BrowseName for the StructureArray component.
        /// </summary>
        public const string StructureArray = "StructureArray";
        /// <summary>
        /// The BrowseName for the StructureWithAbstractBaseTypes component.
        /// </summary>
        public const string StructureWithAbstractBaseTypes = "StructureWithAbstractBaseTypes";
        /// <summary>
        /// The BrowseName for the StructureWithAbstractBaseTypesTest component.
        /// </summary>
        public const string StructureWithAbstractBaseTypesTest = "StructureWithAbstractBaseTypesTest";
        /// <summary>
        /// The BrowseName for the StructureWithAllowSubtypes component.
        /// </summary>
        public const string StructureWithAllowSubtypes = "StructureWithAllowSubtypes";
        /// <summary>
        /// The BrowseName for the StructureWithDerivedStructures component.
        /// </summary>
        public const string StructureWithDerivedStructures = "StructureWithDerivedStructures";
        /// <summary>
        /// The BrowseName for the StructureWithDerivedStructuresTest component.
        /// </summary>
        public const string StructureWithDerivedStructuresTest = "StructureWithDerivedStructuresTest";
        /// <summary>
        /// The BrowseName for the StructureWithDifferentDataTypes component.
        /// </summary>
        public const string StructureWithDifferentDataTypes = "StructureWithDifferentDataTypes";
        /// <summary>
        /// The BrowseName for the StructureWithDifferentDataTypesTest component.
        /// </summary>
        public const string StructureWithDifferentDataTypesTest = "StructureWithDifferentDataTypesTest";
        /// <summary>
        /// The BrowseName for the StructureWithOptionalFields component.
        /// </summary>
        public const string StructureWithOptionalFields = "StructureWithOptionalFields";
        /// <summary>
        /// The BrowseName for the Structures component.
        /// </summary>
        public const string Structures = "Structures";
        /// <summary>
        /// The BrowseName for the Temperature component.
        /// </summary>
        public const string Temperature = "Temperature";
        /// <summary>
        /// The BrowseName for the TemperatureSensor component.
        /// </summary>
        public const string TemperatureSensor = "TemperatureSensor";
        /// <summary>
        /// The BrowseName for the TemperatureSensorType component.
        /// </summary>
        public const string TemperatureSensorType = "TemperatureSensorType";
        /// <summary>
        /// The BrowseName for the TemperatureSetPoint component.
        /// </summary>
        public const string TemperatureSetPoint = "TemperatureSetPoint";
        /// <summary>
        /// The BrowseName for the The_quick_brown_fox_jumps_over_the_lazy_dog component.
        /// </summary>
        public const string The_quick_brown_fox_jumps_over_the_lazy_dog = "The_quick_brown_fox_jumps_over_the_lazy_dog";
        /// <summary>
        /// The BrowseName for the TriggerMultipleEvents component.
        /// </summary>
        public const string TriggerMultipleEvents = "TriggerMultipleEvents";
        /// <summary>
        /// The BrowseName for the TriggerNode01 component.
        /// </summary>
        public const string TriggerNode01 = "TriggerNode01";
        /// <summary>
        /// The BrowseName for the TriggerNode02 component.
        /// </summary>
        public const string TriggerNode02 = "TriggerNode02";
        /// <summary>
        /// The BrowseName for the Trigger_BaseEvent component.
        /// </summary>
        public const string Trigger_BaseEvent = "Trigger_BaseEvent";
        /// <summary>
        /// The BrowseName for the Trigger_SampleEvent component.
        /// </summary>
        public const string Trigger_SampleEvent = "Trigger_SampleEvent";
        /// <summary>
        /// The BrowseName for the TriggersEvent component.
        /// </summary>
        public const string TriggersEvent = "TriggersEvent";
        /// <summary>
        /// The BrowseName for the TwoStateDiscrete1 component.
        /// </summary>
        public const string TwoStateDiscrete1 = "TwoStateDiscrete1";
        /// <summary>
        /// The BrowseName for the TwoStateDiscrete2 component.
        /// </summary>
        public const string TwoStateDiscrete2 = "TwoStateDiscrete2";
        /// <summary>
        /// The BrowseName for the TwoStateDiscrete3 component.
        /// </summary>
        public const string TwoStateDiscrete3 = "TwoStateDiscrete3";
        /// <summary>
        /// The BrowseName for the TwoStateDiscrete4 component.
        /// </summary>
        public const string TwoStateDiscrete4 = "TwoStateDiscrete4";
        /// <summary>
        /// The BrowseName for the TwoStateDiscrete5 component.
        /// </summary>
        public const string TwoStateDiscrete5 = "TwoStateDiscrete5";
        /// <summary>
        /// The BrowseName for the UInt16 component.
        /// </summary>
        public const string UInt16 = "UInt16";
        /// <summary>
        /// The BrowseName for the UInt162D component.
        /// </summary>
        public const string UInt162D = "UInt162D";
        /// <summary>
        /// The BrowseName for the UInt32 component.
        /// </summary>
        public const string UInt32 = "UInt32";
        /// <summary>
        /// The BrowseName for the UInt322D component.
        /// </summary>
        public const string UInt322D = "UInt322D";
        /// <summary>
        /// The BrowseName for the UInt64 component.
        /// </summary>
        public const string UInt64 = "UInt64";
        /// <summary>
        /// The BrowseName for the UInt642D component.
        /// </summary>
        public const string UInt642D = "UInt642D";
        /// <summary>
        /// The BrowseName for the UInteger component.
        /// </summary>
        public const string UInteger = "UInteger";
        /// <summary>
        /// The BrowseName for the UnicodeTest component.
        /// </summary>
        public const string UnicodeTest = "UnicodeTest";
        /// <summary>
        /// The BrowseName for the Union component.
        /// </summary>
        public const string Union = "Union";
        /// <summary>
        /// The BrowseName for the UnionTest component.
        /// </summary>
        public const string UnionTest = "UnionTest";
        /// <summary>
        /// The BrowseName for the UserAccessLevel_None component.
        /// </summary>
        public const string UserAccessLevel_None = "UserAccessLevel_None";
        /// <summary>
        /// The BrowseName for the UserAccessLevel_ReadOnly component.
        /// </summary>
        public const string UserAccessLevel_ReadOnly = "UserAccessLevel_ReadOnly";
        /// <summary>
        /// The BrowseName for the UserAccessLevel_WriteOnly component.
        /// </summary>
        public const string UserAccessLevel_WriteOnly = "UserAccessLevel_WriteOnly";
        /// <summary>
        /// The BrowseName for the UtcTime component.
        /// </summary>
        public const string UtcTime = "UtcTime";
        /// <summary>
        /// The BrowseName for the Value component.
        /// </summary>
        public const string Value = "Value";
        /// <summary>
        /// The BrowseName for the Variable component.
        /// </summary>
        public const string Variable = "Variable";
        /// <summary>
        /// The BrowseName for the VariableWithEngineeringUnits component.
        /// </summary>
        public const string VariableWithEngineeringUnits = "VariableWithEngineeringUnits";
        /// <summary>
        /// The BrowseName for the VariableWithInstrumentRange component.
        /// </summary>
        public const string VariableWithInstrumentRange = "VariableWithInstrumentRange";
        /// <summary>
        /// The BrowseName for the Variant component.
        /// </summary>
        public const string Variant = "Variant";
        /// <summary>
        /// The BrowseName for the Vector component.
        /// </summary>
        public const string Vector = "Vector";
        /// <summary>
        /// The BrowseName for the VectorAdd component.
        /// </summary>
        public const string VectorAdd = "VectorAdd";
        /// <summary>
        /// The BrowseName for the Voyez_le_brick_g\303\251ant_que_j\342\200\231examine_pr\303\250s_du_wharf component.
        /// </summary>
        public const string Voyez_le_brick_g_ant_que_j_examine_pr_s_du_wharf = "Voyez_le_brick_g\ud303\ud251ant_que_j\ud342\ud200\ud231examine_pr\ud303\ud250s_du_wharf";
        /// <summary>
        /// The BrowseName for the WorkOrder component.
        /// </summary>
        public const string WorkOrder = "WorkOrder";
        /// <summary>
        /// The BrowseName for the WorkOrderStatusType component.
        /// </summary>
        public const string WorkOrderStatusType = "WorkOrderStatusType";
        /// <summary>
        /// The BrowseName for the WorkOrderType component.
        /// </summary>
        public const string WorkOrderType = "WorkOrderType";
        /// <summary>
        /// The BrowseName for the WorkOrderVariable component.
        /// </summary>
        public const string WorkOrderVariable = "WorkOrderVariable";
        /// <summary>
        /// The BrowseName for the WorkOrderVariable2 component.
        /// </summary>
        public const string WorkOrderVariable2 = "WorkOrderVariable2";
        /// <summary>
        /// The BrowseName for the WorkOrderVariableType component.
        /// </summary>
        public const string WorkOrderVariableType = "WorkOrderVariableType";
        /// <summary>
        /// The BrowseName for the XYArrayItemType component.
        /// </summary>
        public const string XYArrayItemType = "XYArrayItemType";
        /// <summary>
        /// The BrowseName for the XmlElement component.
        /// </summary>
        public const string XmlElement = "XmlElement";
        /// <summary>
        /// The BrowseName for the XmlElement2D component.
        /// </summary>
        public const string XmlElement2D = "XmlElement2D";
        /// <summary>
        /// The BrowseName for the YArrayItemType component.
        /// </summary>
        public const string YArrayItemType = "YArrayItemType";
        /// <summary>
        /// The BrowseName for the \320\241\321\212\320\265\321\210\321\214_\320\265\321\211\321\221_\321\215\321\202\320\270\321\205_\320\274\321\217\320\263\320\272\320\270\321\205_\321\204\321\200\320\260\320\275\321\206\321\203\320\267\321\201\320\272\320\270\321\205_\320\261\321\203\320\273\320\276\320\272,_\320\264\320\260_\320\262\321\213\320\277\320\265\320\271_\321\207\320\260\321\216 component.
        /// </summary>
        public const string Node5016 = "\ud320\ud241\ud321\ud212\ud320\ud265\ud321\ud210\ud321\ud214_\ud320\ud265\ud321\ud211\ud321\ud221_\ud321\ud215\ud321\ud202\ud320\ud270\ud321\ud205_\ud320\ud274\ud321\ud217\ud320\ud263\ud320\ud272\ud320\ud270\ud321\ud205_\ud321\ud204\ud321\ud200\ud320\ud260\ud320\ud275\ud321\ud206\ud321\ud203\ud320\ud267\ud321\ud201\ud320\ud272\ud320\ud270\ud321\ud205_\ud320\ud261\ud321\ud203\ud320\ud273\ud320\ud276\ud320\ud272,_\ud320\ud264\ud320\ud260_\ud320\ud262\ud321\ud213\ud320\ud277\ud320\ud265\ud320\ud271_\ud321\ud207\ud320\ud260\ud321\ud216";
        /// <summary>
        /// The BrowseName for the folder1 component.
        /// </summary>
        public const string folder1 = "folder1";
        /// <summary>
        /// The BrowseName for the folder10 component.
        /// </summary>
        public const string folder10 = "folder10";
        /// <summary>
        /// The BrowseName for the folder2 component.
        /// </summary>
        public const string folder2 = "folder2";
        /// <summary>
        /// The BrowseName for the folder3 component.
        /// </summary>
        public const string folder3 = "folder3";
        /// <summary>
        /// The BrowseName for the folder4 component.
        /// </summary>
        public const string folder4 = "folder4";
        /// <summary>
        /// The BrowseName for the folder5 component.
        /// </summary>
        public const string folder5 = "folder5";
        /// <summary>
        /// The BrowseName for the folder6 component.
        /// </summary>
        public const string folder6 = "folder6";
        /// <summary>
        /// The BrowseName for the folder7 component.
        /// </summary>
        public const string folder7 = "folder7";
        /// <summary>
        /// The BrowseName for the folder8 component.
        /// </summary>
        public const string folder8 = "folder8";
        /// <summary>
        /// The BrowseName for the folder9 component.
        /// </summary>
        public const string folder9 = "folder9";
        /// <summary>
        /// The BrowseName for the http___www_unifiedautomation_com_DemoServer_ component.
        /// </summary>
        public const string http___www_unifiedautomation_com_DemoServer_ = "http___www_unifiedautomation_com_DemoServer_";
    }
    #endregion

    #region AbsolueName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model.
    /// </summary>
    public static partial class AbsoluteNames
    {
        /// <summary>
        /// The AbsoluteName for the AbstractBaseType component.
        /// </summary>
        public static readonly AbsoluteName AbstractBaseType = new AbsoluteName(BrowseNames.AbstractBaseType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AbstractBaseTypes component.
        /// </summary>
        public static readonly AbsoluteName AbstractBaseTypes = new AbsoluteName(BrowseNames.AbstractBaseTypes, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AccessLevel_CurrentRead component.
        /// </summary>
        public static readonly AbsoluteName AccessLevel_CurrentRead = new AbsoluteName(BrowseNames.AccessLevel_CurrentRead, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AccessLevel_CurrentRead_NotCurrentWrite component.
        /// </summary>
        public static readonly AbsoluteName AccessLevel_CurrentRead_NotCurrentWrite = new AbsoluteName(BrowseNames.AccessLevel_CurrentRead_NotCurrentWrite, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AccessLevel_CurrentRead_NotUser component.
        /// </summary>
        public static readonly AbsoluteName AccessLevel_CurrentRead_NotUser = new AbsoluteName(BrowseNames.AccessLevel_CurrentRead_NotUser, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AccessLevel_CurrentWrite component.
        /// </summary>
        public static readonly AbsoluteName AccessLevel_CurrentWrite = new AbsoluteName(BrowseNames.AccessLevel_CurrentWrite, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AccessLevel_CurrentWrite_NotCurrentRead component.
        /// </summary>
        public static readonly AbsoluteName AccessLevel_CurrentWrite_NotCurrentRead = new AbsoluteName(BrowseNames.AccessLevel_CurrentWrite_NotCurrentRead, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AccessLevel_CurrentWrite_NotUser component.
        /// </summary>
        public static readonly AbsoluteName AccessLevel_CurrentWrite_NotUser = new AbsoluteName(BrowseNames.AccessLevel_CurrentWrite_NotUser, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AccessLevel_None component.
        /// </summary>
        public static readonly AbsoluteName AccessLevel_None = new AbsoluteName(BrowseNames.AccessLevel_None, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AccessLevel_ReadOnly component.
        /// </summary>
        public static readonly AbsoluteName AccessLevel_ReadOnly = new AbsoluteName(BrowseNames.AccessLevel_ReadOnly, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AccessLevel_WriteOnly component.
        /// </summary>
        public static readonly AbsoluteName AccessLevel_WriteOnly = new AbsoluteName(BrowseNames.AccessLevel_WriteOnly, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AccessRights component.
        /// </summary>
        public static readonly AbsoluteName AccessRights = new AbsoluteName(BrowseNames.AccessRights, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Access_All component.
        /// </summary>
        public static readonly AbsoluteName Access_All = new AbsoluteName(BrowseNames.Access_All, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Access_John component.
        /// </summary>
        public static readonly AbsoluteName Access_John = new AbsoluteName(BrowseNames.Access_John, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Access_Operators component.
        /// </summary>
        public static readonly AbsoluteName Access_Operators = new AbsoluteName(BrowseNames.Access_Operators, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Aggregates component.
        /// </summary>
        public static readonly AbsoluteName Aggregates = new AbsoluteName(BrowseNames.Aggregates, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the All_Profiles component.
        /// </summary>
        public static readonly AbsoluteName All_Profiles = new AbsoluteName(BrowseNames.All_Profiles, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the All_RO component.
        /// </summary>
        public static readonly AbsoluteName All_RO = new AbsoluteName(BrowseNames.All_RO, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the All_RO_John_RW component.
        /// </summary>
        public static readonly AbsoluteName All_RO_John_RW = new AbsoluteName(BrowseNames.All_RO_John_RW, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the All_RO_Operators_RW component.
        /// </summary>
        public static readonly AbsoluteName All_RO_Operators_RW = new AbsoluteName(BrowseNames.All_RO_Operators_RW, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the All_RW component.
        /// </summary>
        public static readonly AbsoluteName All_RW = new AbsoluteName(BrowseNames.All_RW, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the All_WO component.
        /// </summary>
        public static readonly AbsoluteName All_WO = new AbsoluteName(BrowseNames.All_WO, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the All_WO_John_RW component.
        /// </summary>
        public static readonly AbsoluteName All_WO_John_RW = new AbsoluteName(BrowseNames.All_WO_John_RW, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the All_WO_Operators_RW component.
        /// </summary>
        public static readonly AbsoluteName All_WO_Operators_RW = new AbsoluteName(BrowseNames.All_WO_Operators_RW, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AnalogType component.
        /// </summary>
        public static readonly AbsoluteName AnalogType = new AbsoluteName(BrowseNames.AnalogType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AnalogType_Arrays component.
        /// </summary>
        public static readonly AbsoluteName AnalogType_Arrays = new AbsoluteName(BrowseNames.AnalogType_Arrays, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ArrayItemType component.
        /// </summary>
        public static readonly AbsoluteName ArrayItemType = new AbsoluteName(BrowseNames.ArrayItemType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Arrays component.
        /// </summary>
        public static readonly AbsoluteName Arrays = new AbsoluteName(BrowseNames.Arrays, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the AssetID component.
        /// </summary>
        public static readonly AbsoluteName AssetID = new AbsoluteName(BrowseNames.AssetID, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the BaseDataType component.
        /// </summary>
        public static readonly AbsoluteName BaseDataType = new AbsoluteName(BrowseNames.BaseDataType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the BaseDataVariable component.
        /// </summary>
        public static readonly AbsoluteName BaseDataVariable = new AbsoluteName(BrowseNames.BaseDataVariable, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Boiler1 component.
        /// </summary>
        public static readonly AbsoluteName Boiler1 = new AbsoluteName(BrowseNames.Boiler1, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the BoilerDemo component.
        /// </summary>
        public static readonly AbsoluteName BoilerDemo = new AbsoluteName(BrowseNames.BoilerDemo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the BoilerType component.
        /// </summary>
        public static readonly AbsoluteName BoilerType = new AbsoluteName(BrowseNames.BoilerType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Bool component.
        /// </summary>
        public static readonly AbsoluteName Bool = new AbsoluteName(BrowseNames.Bool, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Bool2D component.
        /// </summary>
        public static readonly AbsoluteName Bool2D = new AbsoluteName(BrowseNames.Bool2D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Boolean component.
        /// </summary>
        public static readonly AbsoluteName Boolean = new AbsoluteName(BrowseNames.Boolean, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the BooleanOne component.
        /// </summary>
        public static readonly AbsoluteName BooleanOne = new AbsoluteName(BrowseNames.BooleanOne, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the BooleanTwo component.
        /// </summary>
        public static readonly AbsoluteName BooleanTwo = new AbsoluteName(BrowseNames.BooleanTwo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Browse_All component.
        /// </summary>
        public static readonly AbsoluteName Browse_All = new AbsoluteName(BrowseNames.Browse_All, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Browse_John component.
        /// </summary>
        public static readonly AbsoluteName Browse_John = new AbsoluteName(BrowseNames.Browse_John, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Browse_Operators component.
        /// </summary>
        public static readonly AbsoluteName Browse_Operators = new AbsoluteName(BrowseNames.Browse_Operators, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Byte component.
        /// </summary>
        public static readonly AbsoluteName Byte = new AbsoluteName(BrowseNames.Byte, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Byte2D component.
        /// </summary>
        public static readonly AbsoluteName Byte2D = new AbsoluteName(BrowseNames.Byte2D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ByteString component.
        /// </summary>
        public static readonly AbsoluteName ByteString = new AbsoluteName(BrowseNames.ByteString, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ByteString2D component.
        /// </summary>
        public static readonly AbsoluteName ByteString2D = new AbsoluteName(BrowseNames.ByteString2D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ByteWithHistory component.
        /// </summary>
        public static readonly AbsoluteName ByteWithHistory = new AbsoluteName(BrowseNames.ByteWithHistory, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the CTT component.
        /// </summary>
        public static readonly AbsoluteName CTT = new AbsoluteName(BrowseNames.CTT, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ConcreteSubType component.
        /// </summary>
        public static readonly AbsoluteName ConcreteSubType = new AbsoluteName(BrowseNames.ConcreteSubType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the CountdownStateMachineType component.
        /// </summary>
        public static readonly AbsoluteName CountdownStateMachineType = new AbsoluteName(BrowseNames.CountdownStateMachineType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the CreateDynamicNode component.
        /// </summary>
        public static readonly AbsoluteName CreateDynamicNode = new AbsoluteName(BrowseNames.CreateDynamicNode, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the CubeItemType component.
        /// </summary>
        public static readonly AbsoluteName CubeItemType = new AbsoluteName(BrowseNames.CubeItemType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DA_Profile component.
        /// </summary>
        public static readonly AbsoluteName DA_Profile = new AbsoluteName(BrowseNames.DA_Profile, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DataItem component.
        /// </summary>
        public static readonly AbsoluteName DataItem = new AbsoluteName(BrowseNames.DataItem, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DataLoggerActive component.
        /// </summary>
        public static readonly AbsoluteName DataLoggerActive = new AbsoluteName(BrowseNames.DataLoggerActive, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DateTime component.
        /// </summary>
        public static readonly AbsoluteName DateTime = new AbsoluteName(BrowseNames.DateTime, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DateTime2D component.
        /// </summary>
        public static readonly AbsoluteName DateTime2D = new AbsoluteName(BrowseNames.DateTime2D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Decimal component.
        /// </summary>
        public static readonly AbsoluteName Decimal = new AbsoluteName(BrowseNames.Decimal, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DeleteDynamicNode component.
        /// </summary>
        public static readonly AbsoluteName DeleteDynamicNode = new AbsoluteName(BrowseNames.DeleteDynamicNode, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Demo component.
        /// </summary>
        public static readonly AbsoluteName Demo = new AbsoluteName(BrowseNames.Demo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DerivedStructures component.
        /// </summary>
        public static readonly AbsoluteName DerivedStructures = new AbsoluteName(BrowseNames.DerivedStructures, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Die_hei\303\237e_Zypernsonne_qu\303\244lte_Max_und_Victoria_ja_b\303\266se_auf_dem_Weg_bis_zur_K\303\274ste component.
        /// </summary>
        public static readonly AbsoluteName Die_heisse_Zypernsonne_quaelte_Max_und_Victoria_ja_boese_auf_dem_Weg_bis_zur_Kueste = new AbsoluteName(BrowseNames.Die_heisse_Zypernsonne_quaelte_Max_und_Victoria_ja_boese_auf_dem_Weg_bis_zur_Kueste, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DifferentDataTypes component.
        /// </summary>
        public static readonly AbsoluteName DifferentDataTypes = new AbsoluteName(BrowseNames.DifferentDataTypes, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DiscreteType component.
        /// </summary>
        public static readonly AbsoluteName DiscreteType = new AbsoluteName(BrowseNames.DiscreteType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DoSomethingAfter10s component.
        /// </summary>
        public static readonly AbsoluteName DoSomethingAfter10s = new AbsoluteName(BrowseNames.DoSomethingAfter10s, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Double component.
        /// </summary>
        public static readonly AbsoluteName Double = new AbsoluteName(BrowseNames.Double, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Double2D component.
        /// </summary>
        public static readonly AbsoluteName Double2D = new AbsoluteName(BrowseNames.Double2D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DoubleOne component.
        /// </summary>
        public static readonly AbsoluteName DoubleOne = new AbsoluteName(BrowseNames.DoubleOne, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DoubleTwo component.
        /// </summary>
        public static readonly AbsoluteName DoubleTwo = new AbsoluteName(BrowseNames.DoubleTwo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DoubleWithHistory component.
        /// </summary>
        public static readonly AbsoluteName DoubleWithHistory = new AbsoluteName(BrowseNames.DoubleWithHistory, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Duration component.
        /// </summary>
        public static readonly AbsoluteName Duration = new AbsoluteName(BrowseNames.Duration, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Dynamic component.
        /// </summary>
        public static readonly AbsoluteName Dynamic = new AbsoluteName(BrowseNames.Dynamic, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the DynamicNodes component.
        /// </summary>
        public static readonly AbsoluteName DynamicNodes = new AbsoluteName(BrowseNames.DynamicNodes, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the EnumTest component.
        /// </summary>
        public static readonly AbsoluteName EnumTest = new AbsoluteName(BrowseNames.EnumTest, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Enumeration component.
        /// </summary>
        public static readonly AbsoluteName Enumeration = new AbsoluteName(BrowseNames.Enumeration, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Events component.
        /// </summary>
        public static readonly AbsoluteName Events = new AbsoluteName(BrowseNames.Events, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ExpandedNodeId component.
        /// </summary>
        public static readonly AbsoluteName ExpandedNodeId = new AbsoluteName(BrowseNames.ExpandedNodeId, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ExtendedSubType component.
        /// </summary>
        public static readonly AbsoluteName ExtendedSubType = new AbsoluteName(BrowseNames.ExtendedSubType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Files component.
        /// </summary>
        public static readonly AbsoluteName Files = new AbsoluteName(BrowseNames.Files, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Fill component.
        /// </summary>
        public static readonly AbsoluteName Fill = new AbsoluteName(BrowseNames.Fill, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the FillLevel component.
        /// </summary>
        public static readonly AbsoluteName FillLevel = new AbsoluteName(BrowseNames.FillLevel, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the FillLevelSensor component.
        /// </summary>
        public static readonly AbsoluteName FillLevelSensor = new AbsoluteName(BrowseNames.FillLevelSensor, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the FillLevelSensorType component.
        /// </summary>
        public static readonly AbsoluteName FillLevelSensorType = new AbsoluteName(BrowseNames.FillLevelSensorType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the FillLevelSetPoint component.
        /// </summary>
        public static readonly AbsoluteName FillLevelSetPoint = new AbsoluteName(BrowseNames.FillLevelSetPoint, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Float component.
        /// </summary>
        public static readonly AbsoluteName Float = new AbsoluteName(BrowseNames.Float, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Float2D component.
        /// </summary>
        public static readonly AbsoluteName Float2D = new AbsoluteName(BrowseNames.Float2D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the FloatOne component.
        /// </summary>
        public static readonly AbsoluteName FloatOne = new AbsoluteName(BrowseNames.FloatOne, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the FloatTwo component.
        /// </summary>
        public static readonly AbsoluteName FloatTwo = new AbsoluteName(BrowseNames.FloatTwo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern component.
        /// </summary>
        public static readonly AbsoluteName Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern = new AbsoluteName(BrowseNames.Franz_jagt_im_komplett_verwahrlosten_Taxi_quer_durch_Bayern, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Guid component.
        /// </summary>
        public static readonly AbsoluteName Guid = new AbsoluteName(BrowseNames.Guid, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the HA_Profile component.
        /// </summary>
        public static readonly AbsoluteName HA_Profile = new AbsoluteName(BrowseNames.HA_Profile, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Has3ForwardReferences1 component.
        /// </summary>
        public static readonly AbsoluteName Has3ForwardReferences1 = new AbsoluteName(BrowseNames.Has3ForwardReferences1, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Has3ForwardReferences2 component.
        /// </summary>
        public static readonly AbsoluteName Has3ForwardReferences2 = new AbsoluteName(BrowseNames.Has3ForwardReferences2, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Has3ForwardReferences3 component.
        /// </summary>
        public static readonly AbsoluteName Has3ForwardReferences3 = new AbsoluteName(BrowseNames.Has3ForwardReferences3, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Has3ForwardReferences4 component.
        /// </summary>
        public static readonly AbsoluteName Has3ForwardReferences4 = new AbsoluteName(BrowseNames.Has3ForwardReferences4, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Has3ForwardReferences5 component.
        /// </summary>
        public static readonly AbsoluteName Has3ForwardReferences5 = new AbsoluteName(BrowseNames.Has3ForwardReferences5, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Has3InverseReferences component.
        /// </summary>
        public static readonly AbsoluteName Has3InverseReferences = new AbsoluteName(BrowseNames.Has3InverseReferences, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the HasInverseAndForwardReferences component.
        /// </summary>
        public static readonly AbsoluteName HasInverseAndForwardReferences = new AbsoluteName(BrowseNames.HasInverseAndForwardReferences, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the HasReferencesOfAReferenceTypeAndSubType component.
        /// </summary>
        public static readonly AbsoluteName HasReferencesOfAReferenceTypeAndSubType = new AbsoluteName(BrowseNames.HasReferencesOfAReferenceTypeAndSubType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Heat component.
        /// </summary>
        public static readonly AbsoluteName Heat = new AbsoluteName(BrowseNames.Heat, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the HeaterStatus component.
        /// </summary>
        public static readonly AbsoluteName HeaterStatus = new AbsoluteName(BrowseNames.HeaterStatus, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the HeaterSwitch component.
        /// </summary>
        public static readonly AbsoluteName HeaterSwitch = new AbsoluteName(BrowseNames.HeaterSwitch, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Historian_1 component.
        /// </summary>
        public static readonly AbsoluteName Historian_1 = new AbsoluteName(BrowseNames.Historian_1, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Historian_2 component.
        /// </summary>
        public static readonly AbsoluteName Historian_2 = new AbsoluteName(BrowseNames.Historian_2, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Historian_3 component.
        /// </summary>
        public static readonly AbsoluteName Historian_3 = new AbsoluteName(BrowseNames.Historian_3, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Historian_4 component.
        /// </summary>
        public static readonly AbsoluteName Historian_4 = new AbsoluteName(BrowseNames.Historian_4, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the History component.
        /// </summary>
        public static readonly AbsoluteName History = new AbsoluteName(BrowseNames.History, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ID component.
        /// </summary>
        public static readonly AbsoluteName ID = new AbsoluteName(BrowseNames.ID, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Icon component.
        /// </summary>
        public static readonly AbsoluteName Icon = new AbsoluteName(BrowseNames.Icon, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Image component.
        /// </summary>
        public static readonly AbsoluteName Image = new AbsoluteName(BrowseNames.Image, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ImageBMP component.
        /// </summary>
        public static readonly AbsoluteName ImageBMP = new AbsoluteName(BrowseNames.ImageBMP, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ImageGIF component.
        /// </summary>
        public static readonly AbsoluteName ImageGIF = new AbsoluteName(BrowseNames.ImageGIF, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ImageItemType component.
        /// </summary>
        public static readonly AbsoluteName ImageItemType = new AbsoluteName(BrowseNames.ImageItemType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ImageJPG component.
        /// </summary>
        public static readonly AbsoluteName ImageJPG = new AbsoluteName(BrowseNames.ImageJPG, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ImagePNG component.
        /// </summary>
        public static readonly AbsoluteName ImagePNG = new AbsoluteName(BrowseNames.ImagePNG, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Images component.
        /// </summary>
        public static readonly AbsoluteName Images = new AbsoluteName(BrowseNames.Images, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Int16 component.
        /// </summary>
        public static readonly AbsoluteName Int16 = new AbsoluteName(BrowseNames.Int16, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Int162D component.
        /// </summary>
        public static readonly AbsoluteName Int162D = new AbsoluteName(BrowseNames.Int162D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Int32 component.
        /// </summary>
        public static readonly AbsoluteName Int32 = new AbsoluteName(BrowseNames.Int32, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Int322D component.
        /// </summary>
        public static readonly AbsoluteName Int322D = new AbsoluteName(BrowseNames.Int322D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Int64 component.
        /// </summary>
        public static readonly AbsoluteName Int64 = new AbsoluteName(BrowseNames.Int64, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Int642D component.
        /// </summary>
        public static readonly AbsoluteName Int642D = new AbsoluteName(BrowseNames.Int642D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Integer component.
        /// </summary>
        public static readonly AbsoluteName Integer = new AbsoluteName(BrowseNames.Integer, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the IntegerOne component.
        /// </summary>
        public static readonly AbsoluteName IntegerOne = new AbsoluteName(BrowseNames.IntegerOne, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the IntegerTwo component.
        /// </summary>
        public static readonly AbsoluteName IntegerTwo = new AbsoluteName(BrowseNames.IntegerTwo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the John_RO component.
        /// </summary>
        public static readonly AbsoluteName John_RO = new AbsoluteName(BrowseNames.John_RO, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the John_RW component.
        /// </summary>
        public static readonly AbsoluteName John_RW = new AbsoluteName(BrowseNames.John_RW, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the John_WO component.
        /// </summary>
        public static readonly AbsoluteName John_WO = new AbsoluteName(BrowseNames.John_WO, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the LocaleId component.
        /// </summary>
        public static readonly AbsoluteName LocaleId = new AbsoluteName(BrowseNames.LocaleId, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the LocalizedText component.
        /// </summary>
        public static readonly AbsoluteName LocalizedText = new AbsoluteName(BrowseNames.LocalizedText, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the LongDescription component.
        /// </summary>
        public static readonly AbsoluteName LongDescription = new AbsoluteName(BrowseNames.LongDescription, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Machine component.
        /// </summary>
        public static readonly AbsoluteName Machine = new AbsoluteName(BrowseNames.Machine, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MachineType component.
        /// </summary>
        public static readonly AbsoluteName MachineType = new AbsoluteName(BrowseNames.MachineType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Massfolder_Dynamic component.
        /// </summary>
        public static readonly AbsoluteName Massfolder_Dynamic = new AbsoluteName(BrowseNames.Massfolder_Dynamic, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Massfolder_Static component.
        /// </summary>
        public static readonly AbsoluteName Massfolder_Static = new AbsoluteName(BrowseNames.Massfolder_Static, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Matrix component.
        /// </summary>
        public static readonly AbsoluteName Matrix = new AbsoluteName(BrowseNames.Matrix, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Method component.
        /// </summary>
        public static readonly AbsoluteName Method = new AbsoluteName(BrowseNames.Method, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Method1 component.
        /// </summary>
        public static readonly AbsoluteName Method1 = new AbsoluteName(BrowseNames.Method1, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Method2 component.
        /// </summary>
        public static readonly AbsoluteName Method2 = new AbsoluteName(BrowseNames.Method2, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Method3 component.
        /// </summary>
        public static readonly AbsoluteName Method3 = new AbsoluteName(BrowseNames.Method3, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MethodI component.
        /// </summary>
        public static readonly AbsoluteName MethodI = new AbsoluteName(BrowseNames.MethodI, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MethodIO component.
        /// </summary>
        public static readonly AbsoluteName MethodIO = new AbsoluteName(BrowseNames.MethodIO, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MethodNoArgs component.
        /// </summary>
        public static readonly AbsoluteName MethodNoArgs = new AbsoluteName(BrowseNames.MethodNoArgs, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MethodO component.
        /// </summary>
        public static readonly AbsoluteName MethodO = new AbsoluteName(BrowseNames.MethodO, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Methods component.
        /// </summary>
        public static readonly AbsoluteName Methods = new AbsoluteName(BrowseNames.Methods, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Model component.
        /// </summary>
        public static readonly AbsoluteName Model_XmlSchema = new AbsoluteName(BrowseNames.Model_XmlSchema, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MultiDimensionalArrays component.
        /// </summary>
        public static readonly AbsoluteName MultiDimensionalArrays = new AbsoluteName(BrowseNames.MultiDimensionalArrays, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MultiLingualDescription component.
        /// </summary>
        public static readonly AbsoluteName MultiLingualDescription = new AbsoluteName(BrowseNames.MultiLingualDescription, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MultiStateDiscrete1 component.
        /// </summary>
        public static readonly AbsoluteName MultiStateDiscrete1 = new AbsoluteName(BrowseNames.MultiStateDiscrete1, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MultiStateDiscrete2 component.
        /// </summary>
        public static readonly AbsoluteName MultiStateDiscrete2 = new AbsoluteName(BrowseNames.MultiStateDiscrete2, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MultiStateDiscrete3 component.
        /// </summary>
        public static readonly AbsoluteName MultiStateDiscrete3 = new AbsoluteName(BrowseNames.MultiStateDiscrete3, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MultiStateDiscrete4 component.
        /// </summary>
        public static readonly AbsoluteName MultiStateDiscrete4 = new AbsoluteName(BrowseNames.MultiStateDiscrete4, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MultiStateDiscrete5 component.
        /// </summary>
        public static readonly AbsoluteName MultiStateDiscrete5 = new AbsoluteName(BrowseNames.MultiStateDiscrete5, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the MultiStateValueDiscreteType component.
        /// </summary>
        public static readonly AbsoluteName MultiStateValueDiscreteType = new AbsoluteName(BrowseNames.MultiStateValueDiscreteType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Multiply component.
        /// </summary>
        public static readonly AbsoluteName Multiply = new AbsoluteName(BrowseNames.Multiply, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the NDimensionArrayItemType component.
        /// </summary>
        public static readonly AbsoluteName NDimensionArrayItemType = new AbsoluteName(BrowseNames.NDimensionArrayItemType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the NodeClasses component.
        /// </summary>
        public static readonly AbsoluteName NodeClasses = new AbsoluteName(BrowseNames.NodeClasses, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the NodeDoesNotSupportHistory component.
        /// </summary>
        public static readonly AbsoluteName NodeDoesNotSupportHistory = new AbsoluteName(BrowseNames.NodeDoesNotSupportHistory, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the NodeDoesNotSupportSourceTimestamp component.
        /// </summary>
        public static readonly AbsoluteName NodeDoesNotSupportSourceTimestamp = new AbsoluteName(BrowseNames.NodeDoesNotSupportSourceTimestamp, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the NodeId component.
        /// </summary>
        public static readonly AbsoluteName NodeId = new AbsoluteName(BrowseNames.NodeId, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the NodeManagement component.
        /// </summary>
        public static readonly AbsoluteName NodeManagement = new AbsoluteName(BrowseNames.NodeManagement, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the NonNumericOne component.
        /// </summary>
        public static readonly AbsoluteName NonNumericOne = new AbsoluteName(BrowseNames.NonNumericOne, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the NonNumericTwo component.
        /// </summary>
        public static readonly AbsoluteName NonNumericTwo = new AbsoluteName(BrowseNames.NonNumericTwo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Number component.
        /// </summary>
        public static readonly AbsoluteName Number = new AbsoluteName(BrowseNames.Number, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the NumericRange component.
        /// </summary>
        public static readonly AbsoluteName NumericRange = new AbsoluteName(BrowseNames.NumericRange, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Object component.
        /// </summary>
        public static readonly AbsoluteName Object = new AbsoluteName(BrowseNames.Object, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Operators_RO component.
        /// </summary>
        public static readonly AbsoluteName Operators_RO = new AbsoluteName(BrowseNames.Operators_RO, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Operators_RW component.
        /// </summary>
        public static readonly AbsoluteName Operators_RW = new AbsoluteName(BrowseNames.Operators_RW, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Operators_WO component.
        /// </summary>
        public static readonly AbsoluteName Operators_WO = new AbsoluteName(BrowseNames.Operators_WO, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSet component.
        /// </summary>
        public static readonly AbsoluteName OptionSet = new AbsoluteName(BrowseNames.OptionSet, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetBase component.
        /// </summary>
        public static readonly AbsoluteName OptionSetBase = new AbsoluteName(BrowseNames.OptionSetBase, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetBaseArray component.
        /// </summary>
        public static readonly AbsoluteName OptionSetBaseArray = new AbsoluteName(BrowseNames.OptionSetBaseArray, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetBaseTest component.
        /// </summary>
        public static readonly AbsoluteName OptionSetBaseTest = new AbsoluteName(BrowseNames.OptionSetBaseTest, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetByte component.
        /// </summary>
        public static readonly AbsoluteName OptionSetByte = new AbsoluteName(BrowseNames.OptionSetByte, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetByteTest component.
        /// </summary>
        public static readonly AbsoluteName OptionSetByteTest = new AbsoluteName(BrowseNames.OptionSetByteTest, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetUInt16 component.
        /// </summary>
        public static readonly AbsoluteName OptionSetUInt16 = new AbsoluteName(BrowseNames.OptionSetUInt16, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetUInt16Array component.
        /// </summary>
        public static readonly AbsoluteName OptionSetUInt16Array = new AbsoluteName(BrowseNames.OptionSetUInt16Array, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetUInt16Test component.
        /// </summary>
        public static readonly AbsoluteName OptionSetUInt16Test = new AbsoluteName(BrowseNames.OptionSetUInt16Test, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetUInt32 component.
        /// </summary>
        public static readonly AbsoluteName OptionSetUInt32 = new AbsoluteName(BrowseNames.OptionSetUInt32, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetUInt32Test component.
        /// </summary>
        public static readonly AbsoluteName OptionSetUInt32Test = new AbsoluteName(BrowseNames.OptionSetUInt32Test, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetUInt64 component.
        /// </summary>
        public static readonly AbsoluteName OptionSetUInt64 = new AbsoluteName(BrowseNames.OptionSetUInt64, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSetUInt64Test component.
        /// </summary>
        public static readonly AbsoluteName OptionSetUInt64Test = new AbsoluteName(BrowseNames.OptionSetUInt64Test, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionSets component.
        /// </summary>
        public static readonly AbsoluteName OptionSets = new AbsoluteName(BrowseNames.OptionSets, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the OptionalFields component.
        /// </summary>
        public static readonly AbsoluteName OptionalFields = new AbsoluteName(BrowseNames.OptionalFields, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Paths component.
        /// </summary>
        public static readonly AbsoluteName Paths = new AbsoluteName(BrowseNames.Paths, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Priority component.
        /// </summary>
        public static readonly AbsoluteName Priority = new AbsoluteName(BrowseNames.Priority, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Program component.
        /// </summary>
        public static readonly AbsoluteName Program = new AbsoluteName(BrowseNames.Program, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Property component.
        /// </summary>
        public static readonly AbsoluteName Property = new AbsoluteName(BrowseNames.Property, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the QualifiedName component.
        /// </summary>
        public static readonly AbsoluteName QualifiedName = new AbsoluteName(BrowseNames.QualifiedName, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Quality_DynamicValue component.
        /// </summary>
        public static readonly AbsoluteName Quality_DynamicValue = new AbsoluteName(BrowseNames.Quality_DynamicValue, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Quality_StaticValue component.
        /// </summary>
        public static readonly AbsoluteName Quality_StaticValue = new AbsoluteName(BrowseNames.Quality_StaticValue, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ReferencedNode component.
        /// </summary>
        public static readonly AbsoluteName ReferencedNode = new AbsoluteName(BrowseNames.ReferencedNode, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ReferencedNode1 component.
        /// </summary>
        public static readonly AbsoluteName ReferencedNode1 = new AbsoluteName(BrowseNames.ReferencedNode1, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ReferencedNode2 component.
        /// </summary>
        public static readonly AbsoluteName ReferencedNode2 = new AbsoluteName(BrowseNames.ReferencedNode2, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ReferencedNode3 component.
        /// </summary>
        public static readonly AbsoluteName ReferencedNode3 = new AbsoluteName(BrowseNames.ReferencedNode3, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ReferencedNode4 component.
        /// </summary>
        public static readonly AbsoluteName ReferencedNode4 = new AbsoluteName(BrowseNames.ReferencedNode4, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the References component.
        /// </summary>
        public static readonly AbsoluteName References = new AbsoluteName(BrowseNames.References, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the RootNode component.
        /// </summary>
        public static readonly AbsoluteName RootNode = new AbsoluteName(BrowseNames.RootNode, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SByte component.
        /// </summary>
        public static readonly AbsoluteName SByte = new AbsoluteName(BrowseNames.SByte, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SByte2D component.
        /// </summary>
        public static readonly AbsoluteName SByte2D = new AbsoluteName(BrowseNames.SByte2D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SampleEventNotifier component.
        /// </summary>
        public static readonly AbsoluteName SampleEventNotifier = new AbsoluteName(BrowseNames.SampleEventNotifier, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SampleEventType component.
        /// </summary>
        public static readonly AbsoluteName SampleEventType = new AbsoluteName(BrowseNames.SampleEventType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Scalar component.
        /// </summary>
        public static readonly AbsoluteName Scalar = new AbsoluteName(BrowseNames.Scalar, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SecurityAccess component.
        /// </summary>
        public static readonly AbsoluteName SecurityAccess = new AbsoluteName(BrowseNames.SecurityAccess, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the ServerState component.
        /// </summary>
        public static readonly AbsoluteName ServerState = new AbsoluteName(BrowseNames.ServerState, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SetAnimationSpeed component.
        /// </summary>
        public static readonly AbsoluteName SetAnimationSpeed = new AbsoluteName(BrowseNames.SetAnimationSpeed, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SetSimulationSpeed component.
        /// </summary>
        public static readonly AbsoluteName SetSimulationSpeed = new AbsoluteName(BrowseNames.SetSimulationSpeed, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SimulationActive component.
        /// </summary>
        public static readonly AbsoluteName SimulationActive = new AbsoluteName(BrowseNames.SimulationActive, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SimulationSpeed component.
        /// </summary>
        public static readonly AbsoluteName SimulationSpeed = new AbsoluteName(BrowseNames.SimulationSpeed, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SlowAsynchronousAPI component.
        /// </summary>
        public static readonly AbsoluteName SlowAsynchronousAPI = new AbsoluteName(BrowseNames.SlowAsynchronousAPI, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SlowSynchronousAPI component.
        /// </summary>
        public static readonly AbsoluteName SlowSynchronousAPI = new AbsoluteName(BrowseNames.SlowSynchronousAPI, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SpecialCharactersInDescription component.
        /// </summary>
        public static readonly AbsoluteName SpecialCharactersInDescription = new AbsoluteName(BrowseNames.SpecialCharactersInDescription, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the SpecialVariables component.
        /// </summary>
        public static readonly AbsoluteName SpecialVariables = new AbsoluteName(BrowseNames.SpecialVariables, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartLogging component.
        /// </summary>
        public static readonly AbsoluteName StartLogging = new AbsoluteName(BrowseNames.StartLogging, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartOfBadDataBooleanOne component.
        /// </summary>
        public static readonly AbsoluteName StartOfBadDataBooleanOne = new AbsoluteName(BrowseNames.StartOfBadDataBooleanOne, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartOfBadDataBooleanTwo component.
        /// </summary>
        public static readonly AbsoluteName StartOfBadDataBooleanTwo = new AbsoluteName(BrowseNames.StartOfBadDataBooleanTwo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartOfBadDataDoubleOne component.
        /// </summary>
        public static readonly AbsoluteName StartOfBadDataDoubleOne = new AbsoluteName(BrowseNames.StartOfBadDataDoubleOne, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartOfBadDataDoubleTwo component.
        /// </summary>
        public static readonly AbsoluteName StartOfBadDataDoubleTwo = new AbsoluteName(BrowseNames.StartOfBadDataDoubleTwo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartOfBadDataFloatOne component.
        /// </summary>
        public static readonly AbsoluteName StartOfBadDataFloatOne = new AbsoluteName(BrowseNames.StartOfBadDataFloatOne, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartOfBadDataFloatTwo component.
        /// </summary>
        public static readonly AbsoluteName StartOfBadDataFloatTwo = new AbsoluteName(BrowseNames.StartOfBadDataFloatTwo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartOfBadDataIntegerOne component.
        /// </summary>
        public static readonly AbsoluteName StartOfBadDataIntegerOne = new AbsoluteName(BrowseNames.StartOfBadDataIntegerOne, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartOfBadDataIntegerTwo component.
        /// </summary>
        public static readonly AbsoluteName StartOfBadDataIntegerTwo = new AbsoluteName(BrowseNames.StartOfBadDataIntegerTwo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartOfBadDataNonNumericOne component.
        /// </summary>
        public static readonly AbsoluteName StartOfBadDataNonNumericOne = new AbsoluteName(BrowseNames.StartOfBadDataNonNumericOne, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartOfBadDataNonNumericTwo component.
        /// </summary>
        public static readonly AbsoluteName StartOfBadDataNonNumericTwo = new AbsoluteName(BrowseNames.StartOfBadDataNonNumericTwo, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartSimulation component.
        /// </summary>
        public static readonly AbsoluteName StartSimulation = new AbsoluteName(BrowseNames.StartSimulation, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StartTime component.
        /// </summary>
        public static readonly AbsoluteName StartTime = new AbsoluteName(BrowseNames.StartTime, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StateMachines component.
        /// </summary>
        public static readonly AbsoluteName StateMachines = new AbsoluteName(BrowseNames.StateMachines, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Static component.
        /// </summary>
        public static readonly AbsoluteName Static = new AbsoluteName(BrowseNames.Static, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StatusCode component.
        /// </summary>
        public static readonly AbsoluteName StatusCode = new AbsoluteName(BrowseNames.StatusCode, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StatusComments component.
        /// </summary>
        public static readonly AbsoluteName StatusComments = new AbsoluteName(BrowseNames.StatusComments, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StopLogging component.
        /// </summary>
        public static readonly AbsoluteName StopLogging = new AbsoluteName(BrowseNames.StopLogging, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StopSimulation component.
        /// </summary>
        public static readonly AbsoluteName StopSimulation = new AbsoluteName(BrowseNames.StopSimulation, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the String component.
        /// </summary>
        public static readonly AbsoluteName String = new AbsoluteName(BrowseNames.String, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the String2D component.
        /// </summary>
        public static readonly AbsoluteName String2D = new AbsoluteName(BrowseNames.String2D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Structure component.
        /// </summary>
        public static readonly AbsoluteName Structure = new AbsoluteName(BrowseNames.Structure, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StructureArray component.
        /// </summary>
        public static readonly AbsoluteName StructureArray = new AbsoluteName(BrowseNames.StructureArray, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StructureWithAbstractBaseTypes component.
        /// </summary>
        public static readonly AbsoluteName StructureWithAbstractBaseTypes = new AbsoluteName(BrowseNames.StructureWithAbstractBaseTypes, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StructureWithAbstractBaseTypesTest component.
        /// </summary>
        public static readonly AbsoluteName StructureWithAbstractBaseTypesTest = new AbsoluteName(BrowseNames.StructureWithAbstractBaseTypesTest, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StructureWithAllowSubtypes component.
        /// </summary>
        public static readonly AbsoluteName StructureWithAllowSubtypes = new AbsoluteName(BrowseNames.StructureWithAllowSubtypes, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StructureWithDerivedStructures component.
        /// </summary>
        public static readonly AbsoluteName StructureWithDerivedStructures = new AbsoluteName(BrowseNames.StructureWithDerivedStructures, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StructureWithDerivedStructuresTest component.
        /// </summary>
        public static readonly AbsoluteName StructureWithDerivedStructuresTest = new AbsoluteName(BrowseNames.StructureWithDerivedStructuresTest, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StructureWithDifferentDataTypes component.
        /// </summary>
        public static readonly AbsoluteName StructureWithDifferentDataTypes = new AbsoluteName(BrowseNames.StructureWithDifferentDataTypes, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StructureWithDifferentDataTypesTest component.
        /// </summary>
        public static readonly AbsoluteName StructureWithDifferentDataTypesTest = new AbsoluteName(BrowseNames.StructureWithDifferentDataTypesTest, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the StructureWithOptionalFields component.
        /// </summary>
        public static readonly AbsoluteName StructureWithOptionalFields = new AbsoluteName(BrowseNames.StructureWithOptionalFields, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Structures component.
        /// </summary>
        public static readonly AbsoluteName Structures = new AbsoluteName(BrowseNames.Structures, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Temperature component.
        /// </summary>
        public static readonly AbsoluteName Temperature = new AbsoluteName(BrowseNames.Temperature, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TemperatureSensor component.
        /// </summary>
        public static readonly AbsoluteName TemperatureSensor = new AbsoluteName(BrowseNames.TemperatureSensor, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TemperatureSensorType component.
        /// </summary>
        public static readonly AbsoluteName TemperatureSensorType = new AbsoluteName(BrowseNames.TemperatureSensorType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TemperatureSetPoint component.
        /// </summary>
        public static readonly AbsoluteName TemperatureSetPoint = new AbsoluteName(BrowseNames.TemperatureSetPoint, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the The_quick_brown_fox_jumps_over_the_lazy_dog component.
        /// </summary>
        public static readonly AbsoluteName The_quick_brown_fox_jumps_over_the_lazy_dog = new AbsoluteName(BrowseNames.The_quick_brown_fox_jumps_over_the_lazy_dog, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TriggerMultipleEvents component.
        /// </summary>
        public static readonly AbsoluteName TriggerMultipleEvents = new AbsoluteName(BrowseNames.TriggerMultipleEvents, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TriggerNode01 component.
        /// </summary>
        public static readonly AbsoluteName TriggerNode01 = new AbsoluteName(BrowseNames.TriggerNode01, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TriggerNode02 component.
        /// </summary>
        public static readonly AbsoluteName TriggerNode02 = new AbsoluteName(BrowseNames.TriggerNode02, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Trigger_BaseEvent component.
        /// </summary>
        public static readonly AbsoluteName Trigger_BaseEvent = new AbsoluteName(BrowseNames.Trigger_BaseEvent, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Trigger_SampleEvent component.
        /// </summary>
        public static readonly AbsoluteName Trigger_SampleEvent = new AbsoluteName(BrowseNames.Trigger_SampleEvent, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TriggersEvent component.
        /// </summary>
        public static readonly AbsoluteName TriggersEvent = new AbsoluteName(BrowseNames.TriggersEvent, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TwoStateDiscrete1 component.
        /// </summary>
        public static readonly AbsoluteName TwoStateDiscrete1 = new AbsoluteName(BrowseNames.TwoStateDiscrete1, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TwoStateDiscrete2 component.
        /// </summary>
        public static readonly AbsoluteName TwoStateDiscrete2 = new AbsoluteName(BrowseNames.TwoStateDiscrete2, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TwoStateDiscrete3 component.
        /// </summary>
        public static readonly AbsoluteName TwoStateDiscrete3 = new AbsoluteName(BrowseNames.TwoStateDiscrete3, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TwoStateDiscrete4 component.
        /// </summary>
        public static readonly AbsoluteName TwoStateDiscrete4 = new AbsoluteName(BrowseNames.TwoStateDiscrete4, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the TwoStateDiscrete5 component.
        /// </summary>
        public static readonly AbsoluteName TwoStateDiscrete5 = new AbsoluteName(BrowseNames.TwoStateDiscrete5, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UInt16 component.
        /// </summary>
        public static readonly AbsoluteName UInt16 = new AbsoluteName(BrowseNames.UInt16, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UInt162D component.
        /// </summary>
        public static readonly AbsoluteName UInt162D = new AbsoluteName(BrowseNames.UInt162D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UInt32 component.
        /// </summary>
        public static readonly AbsoluteName UInt32 = new AbsoluteName(BrowseNames.UInt32, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UInt322D component.
        /// </summary>
        public static readonly AbsoluteName UInt322D = new AbsoluteName(BrowseNames.UInt322D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UInt64 component.
        /// </summary>
        public static readonly AbsoluteName UInt64 = new AbsoluteName(BrowseNames.UInt64, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UInt642D component.
        /// </summary>
        public static readonly AbsoluteName UInt642D = new AbsoluteName(BrowseNames.UInt642D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UInteger component.
        /// </summary>
        public static readonly AbsoluteName UInteger = new AbsoluteName(BrowseNames.UInteger, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UnicodeTest component.
        /// </summary>
        public static readonly AbsoluteName UnicodeTest = new AbsoluteName(BrowseNames.UnicodeTest, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Union component.
        /// </summary>
        public static readonly AbsoluteName Union = new AbsoluteName(BrowseNames.Union, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UnionTest component.
        /// </summary>
        public static readonly AbsoluteName UnionTest = new AbsoluteName(BrowseNames.UnionTest, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UserAccessLevel_None component.
        /// </summary>
        public static readonly AbsoluteName UserAccessLevel_None = new AbsoluteName(BrowseNames.UserAccessLevel_None, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UserAccessLevel_ReadOnly component.
        /// </summary>
        public static readonly AbsoluteName UserAccessLevel_ReadOnly = new AbsoluteName(BrowseNames.UserAccessLevel_ReadOnly, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UserAccessLevel_WriteOnly component.
        /// </summary>
        public static readonly AbsoluteName UserAccessLevel_WriteOnly = new AbsoluteName(BrowseNames.UserAccessLevel_WriteOnly, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the UtcTime component.
        /// </summary>
        public static readonly AbsoluteName UtcTime = new AbsoluteName(BrowseNames.UtcTime, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Value component.
        /// </summary>
        public static readonly AbsoluteName Value = new AbsoluteName(BrowseNames.Value, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Variable component.
        /// </summary>
        public static readonly AbsoluteName Variable = new AbsoluteName(BrowseNames.Variable, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the VariableWithEngineeringUnits component.
        /// </summary>
        public static readonly AbsoluteName VariableWithEngineeringUnits = new AbsoluteName(BrowseNames.VariableWithEngineeringUnits, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the VariableWithInstrumentRange component.
        /// </summary>
        public static readonly AbsoluteName VariableWithInstrumentRange = new AbsoluteName(BrowseNames.VariableWithInstrumentRange, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Variant component.
        /// </summary>
        public static readonly AbsoluteName Variant = new AbsoluteName(BrowseNames.Variant, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Vector component.
        /// </summary>
        public static readonly AbsoluteName Vector = new AbsoluteName(BrowseNames.Vector, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the VectorAdd component.
        /// </summary>
        public static readonly AbsoluteName VectorAdd = new AbsoluteName(BrowseNames.VectorAdd, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the Voyez_le_brick_g\303\251ant_que_j\342\200\231examine_pr\303\250s_du_wharf component.
        /// </summary>
        public static readonly AbsoluteName Voyez_le_brick_g_ant_que_j_examine_pr_s_du_wharf = new AbsoluteName(BrowseNames.Voyez_le_brick_g_ant_que_j_examine_pr_s_du_wharf, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the WorkOrder component.
        /// </summary>
        public static readonly AbsoluteName WorkOrder = new AbsoluteName(BrowseNames.WorkOrder, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the WorkOrderStatusType component.
        /// </summary>
        public static readonly AbsoluteName WorkOrderStatusType = new AbsoluteName(BrowseNames.WorkOrderStatusType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the WorkOrderType component.
        /// </summary>
        public static readonly AbsoluteName WorkOrderType = new AbsoluteName(BrowseNames.WorkOrderType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the WorkOrderVariable component.
        /// </summary>
        public static readonly AbsoluteName WorkOrderVariable = new AbsoluteName(BrowseNames.WorkOrderVariable, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the WorkOrderVariable2 component.
        /// </summary>
        public static readonly AbsoluteName WorkOrderVariable2 = new AbsoluteName(BrowseNames.WorkOrderVariable2, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the WorkOrderVariableType component.
        /// </summary>
        public static readonly AbsoluteName WorkOrderVariableType = new AbsoluteName(BrowseNames.WorkOrderVariableType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the XYArrayItemType component.
        /// </summary>
        public static readonly AbsoluteName XYArrayItemType = new AbsoluteName(BrowseNames.XYArrayItemType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the XmlElement component.
        /// </summary>
        public static readonly AbsoluteName XmlElement = new AbsoluteName(BrowseNames.XmlElement, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the XmlElement2D component.
        /// </summary>
        public static readonly AbsoluteName XmlElement2D = new AbsoluteName(BrowseNames.XmlElement2D, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the YArrayItemType component.
        /// </summary>
        public static readonly AbsoluteName YArrayItemType = new AbsoluteName(BrowseNames.YArrayItemType, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the \320\241\321\212\320\265\321\210\321\214_\320\265\321\211\321\221_\321\215\321\202\320\270\321\205_\320\274\321\217\320\263\320\272\320\270\321\205_\321\204\321\200\320\260\320\275\321\206\321\203\320\267\321\201\320\272\320\270\321\205_\320\261\321\203\320\273\320\276\320\272,_\320\264\320\260_\320\262\321\213\320\277\320\265\320\271_\321\207\320\260\321\216 component.
        /// </summary>
        public static readonly AbsoluteName Node5016 = new AbsoluteName(BrowseNames.Node5016, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the folder1 component.
        /// </summary>
        public static readonly AbsoluteName folder1 = new AbsoluteName(BrowseNames.folder1, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the folder10 component.
        /// </summary>
        public static readonly AbsoluteName folder10 = new AbsoluteName(BrowseNames.folder10, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the folder2 component.
        /// </summary>
        public static readonly AbsoluteName folder2 = new AbsoluteName(BrowseNames.folder2, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the folder3 component.
        /// </summary>
        public static readonly AbsoluteName folder3 = new AbsoluteName(BrowseNames.folder3, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the folder4 component.
        /// </summary>
        public static readonly AbsoluteName folder4 = new AbsoluteName(BrowseNames.folder4, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the folder5 component.
        /// </summary>
        public static readonly AbsoluteName folder5 = new AbsoluteName(BrowseNames.folder5, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the folder6 component.
        /// </summary>
        public static readonly AbsoluteName folder6 = new AbsoluteName(BrowseNames.folder6, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the folder7 component.
        /// </summary>
        public static readonly AbsoluteName folder7 = new AbsoluteName(BrowseNames.folder7, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the folder8 component.
        /// </summary>
        public static readonly AbsoluteName folder8 = new AbsoluteName(BrowseNames.folder8, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the folder9 component.
        /// </summary>
        public static readonly AbsoluteName folder9 = new AbsoluteName(BrowseNames.folder9, Namespaces.Model);
        /// <summary>
        /// The AbsoluteName for the http___www_unifiedautomation_com_DemoServer_ component.
        /// </summary>
        public static readonly AbsoluteName http___www_unifiedautomation_com_DemoServer_ = new AbsoluteName(BrowseNames.http___www_unifiedautomation_com_DemoServer_, Namespaces.Model);
    }
    #endregion

    #region Namespace Declarations
    /// <summary>
    /// Defines constants for all namespaces referenced by the Model.
    /// </summary>
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the OpcUa namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUa = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the OpcUaXsd namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUaXsd = "http://opcfoundation.org/UA/2008/02/Types.xsd";

        /// <summary>
        /// The URI for the Model namespace.
        /// </summary>
        public const string Model = "http://www.unifiedautomation.com/DemoServer/";

        /// <summary>
        /// The URI for the ModelXsd namespace.
        /// </summary>
        public const string ModelXsd = "http://www.unifiedautomation.com/DemoServer/Types.xsd";
    }
    #endregion
}

